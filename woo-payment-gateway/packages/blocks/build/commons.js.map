{"version":3,"file":"commons.js","mappings":";+mCAEMA,SAAAA,isBACF,WAAYC,GAAO,mHACf,cAAMA,IACDC,MAAQ,CAACC,UAAU,EAAOC,MAAO,KAAMC,UAAW,MAFxC,CAGlB,+CAED,SAAkBD,EAAOC,GACrBC,KAAKC,SAAS,CACVJ,UAAU,EACVC,MAAAA,EACAC,UAAAA,GAEP,uBAED,WACI,OAAIC,KAAKJ,MAAMC,SAEP,gCACKG,KAAKJ,MAAME,OACZ,uBAAKI,UAAU,8BAA8BF,KAAKJ,MAAME,MAAMK,YAC7DH,KAAKJ,MAAMG,WACZ,uBAAKG,UAAU,8BAA8BF,KAAKJ,MAAMG,UAAUK,iBAIvEJ,KAAKL,MAAMU,QACrB,4EA1BCX,CAFN,QAE4BY,gJCFA,SAAC,GAA0B,IAAzBC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,KACzC,OACI,uBACIP,UAAU,iCACVK,QAASA,GACT,4BAAOC,GACP,uBAAKN,UAAU,sBAAsBQ,IAAKD,IAGrD,mVCTD,gBACA,yxHAAAE,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4rBAE6B,SAAC,GAQpB,QANFC,EAME,EANFA,KACAC,EAKE,EALFA,KACAC,EAIE,EAJFA,QACAC,EAGE,EAHFA,SACAC,EAEE,EAFFA,WACAC,EACE,EADFA,aAEJ,MAAgC,EAAAC,EAAAA,WAAS,KAAzC,g0BAAOC,EAAP,KAAiBC,EAAjB,KACMC,GAAc,EAAAC,EAAAA,QAAO,CAACP,SAAAA,EAAUE,aAAAA,IAEhCV,GAAU,EAAAgB,EAAAA,aAAA,6BAAY,WAAOC,GAAP,gFACxBA,EAAEC,iBADsB,SAIhBC,EACAL,EAAYM,QADZD,iBAJgB,SAOGA,EAAiBE,kBAPpB,OAOdC,EAPc,OAUpBb,EAAWa,GAGXf,GAAQ,GACRM,GAAY,GAdQ,kDAgBpBU,QAAQC,IAAI,oCAAZ,MAhBoB,0DAAZ,sDAkBb,IAiDH,OA/CA,EAAAC,EAAAA,YAAU,WACNX,EAAYM,QAAZ,OACON,EAAYM,SADnB,IAEIZ,SAAAA,EACAE,aAAAA,GAEP,GAAE,CAACF,EAAUE,KAEd,EAAAe,EAAAA,YAAU,WACN,GAAInB,EAAM,CACN,IACII,EACAI,EAAYM,QADZV,aAGAgB,EAEAhB,EAFAgB,cACAC,EACAjB,EADAiB,gBAEEvC,EAAQ,EAAH,GACHsC,GAAiB,CACjBC,gBAAiB,CACbC,UAAWD,EAAgBE,YAAc,GACzCC,SAAUH,EAAgBI,WAAa,GACvCC,cAAeL,EAAgBM,WAAa,GAC5CC,gBAAiBP,EAAgBQ,WAAa,GAC9CC,SAAUT,EAAgBU,MAAQ,GAClCC,OAAQX,EAAgBtC,OAAS,GACjCkD,WAAYZ,EAAgBa,UAAY,GACxCC,kBAAmBd,EAAgBe,SAAW,GAC9CC,YAAahB,EAAgBiB,OAAS,MAIlDpC,EAASqC,yBAAyBzD,GAAO0D,KAAzC,6BAA8C,WAAMC,GAAN,wEAC1CjC,EAAYM,QAAQD,iBAAmB4B,EADG,SAEpCA,EAASC,OAAO,gCAFoB,OAG1CC,SAASC,KAAKC,UAAUC,IAAI,uBAC5BC,YAAW,WACPxC,GAAY,EACf,GAAE,KANuC,2CAA9C,sDAQH,MACGoC,SAASC,KAAKC,UAAUG,OAAO,uBAGnC,OAAO,kBAAML,SAASC,KAAKC,UAAUG,OAAO,sBAArC,CACV,GAAE,CAAChD,IAGA,uBAAKX,WAAW,EAAA4D,EAAAA,SAAW,2BAA4B,CAAC,OAAU3C,KAC9D,uBAAKjB,UAAU,0BACX,uBAAKA,UAAU,gCAGf,uBAAKA,UAAU,kCACX,0BACIA,UAAU,4BACVK,QAASA,GACRK,EAAKmD,UAEV,qBACI7D,UAAU,0BACVK,QAAS,WACLa,GAAY,GACZN,GACH,GACAF,EAAKoD,UAM7B,yEC1GD,oLACA,oLACA,oLACA,oLACA,mLACA,kSCLA,gDACA,8OAEO,IAAMC,EAAS,SAAC,GAAuB,IAAtBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,SACtBC,GAAU,EAAAC,EAAAA,SAAA,sCAA0CH,EAAOI,OACjE,OACI,gBAAC,SAAD,GACIC,IAAG,iBAAYL,EAAOI,MACtBpE,UAAWkE,EACXD,SAAU,WACFD,EAAOM,eACPL,GAEP,GAAMD,GACNA,EAAOO,QAGnB,mBAEcR,yICnBR,IAAMS,EAAqB,SAAC,GAAkD,IAAjDC,EAAiD,EAAjDA,MAAsBC,GAA2B,EAA1CC,cAA0C,EAA3BD,YAA2B,IAAfE,KAAAA,OAAe,MAAR,GAAQ,EACtDC,EAAoCH,EAAxDF,mBAA+CM,EAASJ,EAA7BK,mBAIlC,OAHKC,MAAMC,QAAQL,KACfA,EAAO,CAACA,IAGR,wBAAM5E,UAAW,4CACb,gBAAC6E,EAAD,CAAOvE,KAAMmE,IACb,gBAACK,EAAD,CAAOI,MAAON,EAAMO,MAAM,SAGrC,+BAEcX,oICbf,cACA,QACA,4XAEO,IAAMY,EAAgB,SAAC,GAAiD,QAAhDC,EAAgD,EAAhDA,QAAgD,IAAvCC,YAAAA,OAAuC,MAAzB,GAAyB,EAAX7F,GAAW,EAArByF,wXAAqB,OACrEK,GAAK,EAAAnE,EAAAA,UACX,MAAkC,EAAAJ,EAAAA,UAAS,QAA3C,g0BAAOwE,EAAP,KAAkBC,EAAlB,KACMC,EAAUL,EAMhB,OALA,EAAAvD,EAAAA,YAAU,WACFyD,EAAG9D,SACHgE,EAAaF,EAAG9D,QAEvB,GAAE,IAEC,uBAAKkE,IAAKJ,EAAIvF,UAAW,iDACpBsF,GACG,uBAAKtF,UAAU,mDACVsF,GAET,gBAAC,EAAAM,0BAAD,GAA2BJ,UAAWA,GAAe/F,GACjD,gBAACoG,EAAmCpG,EAChC,gBAACiG,EAAYjG,KAKhC,oBAED,IAAMoG,EAAiC,SAAC,GAW9B,IATF1F,EASE,EATFA,SACA2F,EAQE,EARFA,KACAC,EAOE,EAPFA,QACAhF,EAME,EANFA,aACAiF,EAKE,EALFA,kBACAC,EAIE,EAJFA,aACAC,EAGE,EAHFA,oBAGE,IAFFC,UAAAA,OAEE,aADFC,qBAAAA,OACE,MADqB,CAAC,EACtB,EAEFC,EAEAL,EAFAK,eACAC,EACAN,EADAM,eAGAC,EAEAN,EAFAM,cACAC,EACAP,EADAO,eAIA3F,GACA,EAAA4F,EAAAA,+BADA5F,SAmBJ,OAhBA,EAAA6F,EAAAA,mBAAkB,CACdZ,KAAAA,EACAC,QAAAA,EACAhF,aAAAA,EACAwF,cAAAA,EACAF,eAAAA,EACAM,YAAuC,OAA1B9F,EAAS+F,aACtBV,oBAAAA,EACAE,qBAAAA,KAGJ,EAAAS,EAAAA,0BAAyB,CACrBC,MAAOR,EACPC,cAAAA,EACAQ,eAAgBZ,EAAYK,EAAeQ,iBAAmB,OAE3D7G,CACV,IAEciF,qYCxEf,cACA,UACA,UACA,kCAFA,8hGAAA3E,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,8wCAIkC,SAAChB,GAC/B,OACI,gBAAC,EAAAmG,0BAAD,KAAmCnG,GAC/B,gBAACwH,EAAD,KAA6BxH,IAGxC,EACM,IAAMwH,EAAsB,SAAC,GAS1B,IAPFnB,EAOE,EAPFA,KAOE,IANFoB,oBAAAA,OAME,SALFC,EAKE,EALFA,MACAnB,EAIE,EAJFA,kBACAD,EAGE,EAHFA,QACAhF,EAEE,EAFFA,aAGGwF,EADD,EADFN,aAEGM,cACAF,EAAkCL,EAAlCK,eAAgBC,EAAkBN,EAAlBM,eACjBnF,GAAc,EAAAC,EAAAA,QAAO,CAAC2E,QAAAA,EAAShF,aAAAA,IAC9BqG,GAAuB,EAAAX,EAAAA,+BAAvBW,oBA0CP,OAzCA,EAAAC,EAAAA,kBACA,EAAAC,EAAAA,iBAAgB,CAACxB,KAAAA,EAAMyB,QAASL,KAChC,EAAAL,EAAAA,0BAAyB,CACrBC,MAAOR,EACPC,cAAAA,KAGJ,EAAAzE,EAAAA,YAAU,WACNX,EAAYM,QAAU,CAACqE,KAAAA,EAAMC,QAAAA,EAAShF,aAAAA,EACzC,KAED,EAAAe,EAAAA,YAAU,WACN,IAAM0F,EAAcnB,EAAc,YAAC,wFAC3Ba,EAD2B,2CAGJ,EAAAO,EAAAA,iBAAgBN,GAHZ,WAGnBO,EAHmB,QAIXC,QAJW,sBAKb,IAAIC,EAAAA,eAAe,CAACrD,QAASmD,EAAOnD,UALvB,uBAOR6C,EAAoB,CAC/BS,KAAM,CACFC,kBAAmB,EAAF,aACThC,EADS,kBACc,UAHL,OAM3B3E,EAAYM,SAAY,CAACiG,OAAQA,EAAOK,QAbxB,cAOvBL,EAPuB,0BAchB,EAAAM,EAAAA,uBAAsBzB,EAAemB,IAdrB,4DAgBhB,EAAAO,EAAAA,qBAAoB1B,EAApB,OAhBgB,iCAmBxB,MAnBwB,2DAqBnC,OAAO,kBAAMiB,GAAN,CACV,GAAE,CACCnB,EACAa,EACAC,EACArB,EACAS,IAEG,IACV,gCAEcU,wHCtEa,CACxBiB,aAAc,eACdC,kBAAmB,oBACnBC,qBAAsB,uBACtBC,mBAAoB,8KCJxB,gCAE+B,SAAClB,GAAD,MAAY,CACvC/C,KAAMkE,EAAAA,aAAaH,kBACnBhB,MAAAA,EAF2B,gBAKJ,SAAAtG,GAAQ,MAAK,CACpCuD,KAAMkE,EAAAA,aAAaJ,aACnBrH,SAAAA,EAF+B,yBAKC,SAAA0H,GAAE,MAAK,CACvCnE,KAAMkE,EAAAA,aAAaF,qBACnBG,GAAAA,EAFkC,qBAKN,SAAAC,GAAK,MAAK,CACtCpE,KAAMkE,EAAAA,aAAaD,mBACnBG,MAAAA,EAFiC,sGCjBZ,kbCAzB,gBAGA,GAFA,QAEA,SACA,aACA,0CACA,skBAEA,IAAMC,EAAS,CACXC,QAAAA,EAAAA,QACAC,UAAAA,EACAC,QAAAA,GAOSC,GAAQ,EAAAC,EAAAA,kBAAiBC,EAAAA,UAAWN,cAEjD,EAAAO,EAAAA,UAASH,oFCXM,WAAgD,IAA/BnJ,EAA+B,uDAAvBuJ,EAAeC,EAAQ,uCACvDC,EAAWzJ,EAEf,OAAQwJ,EAAO9E,MACX,KAAKkE,EAAAA,aAAaJ,aACdiB,EAAW,EAAH,KACDzJ,GADC,IAEJmB,SAAUqI,EAAOrI,WAErB,MACJ,KAAKyH,EAAAA,aAAaH,kBACdgB,EAAW,EAAH,KACDzJ,GADC,IAEJyH,MAAO+B,EAAO/B,QAElB,MACJ,KAAKmB,EAAAA,aAAaF,qBACde,EAAW,EAAH,KACDzJ,GADC,IAEJ0J,kBAAmBF,EAAOX,KAE9B,MACJ,KAAKD,EAAAA,aAAaD,mBACdc,EAAW,EAAH,KACDzJ,GADC,IAEJ2J,eAAgB,GAAF,SAAM3J,EAAM2J,gBAAZ,CAA4BH,EAAOV,UAI7D,OAAOW,CACV,EAvCD,q7CAEA,IAAMF,EAAgB,CAClB9B,MAAO,KACPtG,SAAU,KACVwI,eAAgB,GAChBD,kBAAmB,yKCNQ,SAAC1J,GAC5B,OAAOA,EAAMyH,KAChB,gBAE0B,SAAAzH,GACvB,OAAOA,EAAMmB,QAChB,oBAE8B,SAAAnB,GAC3B,QAASA,EAAM0J,iBAClB,sBAEgC,SAAA1J,GAC7B,OAAOA,EAAM2J,cAChB,yECdD,2PCAA,oLACA,qSCDA,cACA,UACA,0vBAEO,IAAMC,EAA0B,SAAC,GAM9B,IAJFC,EAIE,EAJFA,iBACAxD,EAGE,EAHFA,QACAhF,EAEE,EAFFA,aACAyI,EACE,EADFA,QAEErI,GAAc,EAAAC,EAAAA,QAAO,CAAC,GAwC5B,OAtCA,EAAAU,EAAAA,YAAU,WACNX,EAAYM,QAAQsE,QAAUA,EAC9B5E,EAAYM,QAAQV,aAAeA,CACtC,GAAE,CAACgF,EAAShF,KAEG,EAAA0I,EAAAA,UAAQ,WACpB,GAAIF,EAAkB,CAClB,MAA8DpI,EAAYM,QAAQsE,QAA3E2D,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,SAAUC,EAA5B,EAA4BA,eAAgBC,EAA5C,EAA4CA,eAC5C,EAAuC1I,EAAYM,QAAQV,aAApDgB,EAAP,EAAOA,cAAe+H,EAAtB,EAAsBA,cAChBC,EAAU,CACZC,MAAO,CACHC,MAAOT,EAAQ,eACfpF,KAAM,QACN8F,QAAQ,EAAAC,EAAAA,uBAAsBT,EAAUU,MAAOT,EAASU,WAAWpK,YAEvEqK,WAAW,EAAAC,EAAAA,iBAAgBX,EAAgBD,EAASU,WACpDG,aAAcb,EAASc,KACvBC,YAAalB,EAAQ,eACrBmB,6BAA8B,CAAC,iBAC/BC,+BACQC,EAAS9I,EAAgB,CAAC,iBAAmB,GAC5C8H,EAAerB,QAChBqC,EAAS,GAAH,SAAOA,GAAP,CAAe,WAEpBhB,EAAe5G,QAChB4H,EAAS,GAAH,SAAOA,GAAP,CAAe,WAElBA,IAOf,OAJI9I,IACAgI,EAAQe,iBAAkB,EAAAC,EAAAA,uBAAsBjB,IAE7BP,EAAiByB,qBAAqBjB,EAEhE,CAhBuC,IACxBc,EAgBhB,OAAO,IACV,GAAE,CAACtB,GAEP,oCAEcD,wHCtDf,gBAEA,GADA,QACA,SACA,QACA,UACA,0CAEA,ykCAOO,IAAM2B,EAAmB,SAAC,GAUvB,IARF1B,EAQE,EARFA,iBACAxD,EAOE,EAPFA,QACAhF,EAME,EANFA,aACAmK,EAKE,EALFA,eACAlF,EAIE,EAJFA,kBACA3F,EAGE,EAHFA,QACAO,EAEE,EAFFA,QACA4I,EACE,EADFA,QAEG2B,GAAsB,EAAAC,EAAAA,yBAAwB,CACjDrF,QAAAA,EACAhF,aAAAA,EACAiF,kBAAAA,IAHGmF,mBAKP,GAA0E,EAAA1E,EAAAA,+BAAnE4E,EAAP,EAAOA,sBAAuBC,EAA9B,EAA8BA,oBAA8BC,EAA5D,EAAmDvH,OAASuH,UACtDC,GAAe,EAAApK,EAAAA,QAAO,CAAC,GACvBD,GAAc,EAAAC,EAAAA,QAAO,CACvB2E,QAAAA,EACAhF,aAAAA,EACAV,QAAAA,EACAO,QAAAA,EACA2K,UAAAA,EACAJ,mBAAAA,EACAE,sBAAAA,EACAC,oBAAAA,IAGEG,GAAqB,EAAApK,EAAAA,cAAY,WAAM,ymBAErB,EAAAqK,EAAAA,OAAM,GAAI,GAAI,IAFO,IAEzC,IAAK,EAAL,qBAAsC,KAA7BC,EAA6B,QAClC,GAAIC,gBAAgBC,gBAAgBF,GAChC,OAAOA,CAEd,CANwC,+BAOzC,OAAO,CACV,GAAE,IAEGG,GAAkB,EAAAzK,EAAAA,cAAY,YAEhCT,EADkBO,EAAYM,QAAvBb,UAEV,GAAE,IAEGmL,GAAqB,EAAA1K,EAAAA,cAAY,SAACyF,GACpC,IAAOkF,EAAW7K,EAAYM,QAAvBuK,QACPzC,EAAiB0C,kBAAkB,CAC/BC,cAAepF,EAAMoF,cACrBC,YAAa3C,EAAQ,iBACtBrG,MAAK,SAAAiJ,GACJJ,EAAQK,2BAA2BD,EACtC,IAAEE,OAAM,SAAA1M,GACLoM,EAAQO,QACRhB,EAAU3L,EACb,GACJ,GAAE,CAAC2J,EAAkBgC,IAEhBiB,GAA0B,EAAAnL,EAAAA,cAAY,SAACyF,GAEzC,IAGkC,QAH3BnC,EAAiBmC,EAAjBnC,cACP,EAA6BxD,EAAYM,QAAlCuK,EAAP,EAAOA,QAAST,EAAhB,EAAgBA,UACZkB,EAAU,KACV9H,EAAc+H,iBACdD,EAAU,CACN1J,SAAS,UAAA4B,EAAc+H,sBAAd,eAA8BhC,cAAe,GACtDhL,OAAO,UAAAiF,EAAc+H,sBAAd,eAA8BC,qBAAsB,GAC3D9J,UAAU,UAAA8B,EAAc+H,sBAAd,eAA8B9J,aAAc,GACtDF,MAAM,UAAAiC,EAAc+H,sBAAd,eAA8BjK,WAAY,MAGxD,EAAAmK,EAAAA,SAAS,CACLC,OAAQ,OACRC,IAAKtD,EAAQ,UAAUuD,eACvBhF,KAAM,CACF0E,QAAAA,KAELtJ,MAAK,SAAAxB,GACAA,EAAS8I,MACTuB,EAAQO,QACRhB,EAAU5J,EAASqL,WAEnBhB,EAAQiB,+BAA+BtL,EAASoG,KAEvD,IAAEuE,OAAM,SAACY,GAET,GACJ,GAAE,IAEGC,GAA4B,EAAA9L,EAAAA,cAAY,SAACyF,GAC3C,IAAOkF,EAAW7K,EAAYM,QAAvBuK,QACAoB,EAAmBtG,EAAnBsG,gBACArM,EAAgBI,EAAYM,QAA5BV,aACAiB,EAAmBjB,EAAnBiB,gBAEDqL,GADmCrL,EAAlCe,QAAkCf,EAAzBtC,MAAyBsC,EAAlBU,KAAkBV,EAAZa,SACV,CACfE,QAASqK,aAAF,EAAEA,EAAiB1C,YAAY4C,cACtC5N,MAAO0N,aAAF,EAAEA,EAAiBT,mBAAmBW,cAC3C5K,KAAM0K,EAAgB3K,SACtBI,SAAUuK,EAAgBxK,cAI9B,EAAAgK,EAAAA,SAAS,CACLC,OAAQ,OACRC,IAAKtD,EAAQ,UAAU+D,iBACvBxF,KAAM,CACFgF,eAAgB,qBAChBN,QAASY,KAEdlK,MAAK,SAAAxB,GACAA,EAAS8I,KACa,yBAAlB9I,EAAS8I,KACTuB,EAAQwB,iCAAiC7L,EAASoG,KAAK0F,uBAEvDzB,EAAQwB,iCAAiC,CACrCE,OAAQ,CAAC,IAAIC,cACThM,EAAS8I,KACT9I,EAASoG,KAAK6F,aACdjM,EAAS4C,UACbsJ,SAAUlM,EAASoG,KAAK8F,SACxBC,mBAAoBnM,EAASoG,KAAK+F,qBAI1C9B,EAAQwB,iCAAiC7L,EAASoG,KAAK0F,sBAE9D,IAAEM,SAAQ,WACPhN,EAAaiN,mBAAb,OAAoChM,GAAoBqL,GAC3D,GACJ,GAAE,IAEGY,GAA2B,EAAA5M,EAAAA,cAAY,SAACyF,GAC1C,IAAOoH,EAAkBpH,EAAlBoH,eACP,EAA2C/M,EAAYM,QAAhDuK,EAAP,EAAOA,QAASjL,EAAhB,EAAgBA,aACToN,GADP,EAA8B5C,UACYxK,EAAnCoN,kBAAmCpN,EAAjBqN,eAEzB,EAAAxB,EAAAA,SAAS,CACLC,OAAQ,OACRC,IAAKtD,EAAQ,UAAU6E,gBACvBtG,KAAM,CACFgF,eAAgB,qBAChBsB,gBAAiBH,EAAeI,cAErCnL,MAAK,SAAAxB,GACAA,EAAS8I,KACTuB,EAAQO,QAGRP,EAAQuC,gCAAgC5M,EAASoG,KAAKyG,qBAE7D,IAAET,SAAQ,iBACPI,EAAgB,WAAhB,kDAAoB,EAAAM,EAAAA,+BAA8BP,EAAeI,mTACpE,GACJ,GAAE,IAEGI,GAAsB,EAAArN,EAAAA,cAAY,SAACyF,GACrC,IAMO,EANP,EAAsD3F,EAAYM,QAA3DuK,EAAP,EAAOA,QAASX,EAAhB,EAAgBA,sBAAhB,IAAuCqC,OAAAA,OAAvC,MAAgD,GAAhD,GACIA,aAAA,EAAAA,EAAQiB,QAAS,EACjB3C,EAAQ4C,gBAAgB,CACpBC,OAAQjD,gBAAgBkD,eACxBpB,OAAAA,IAGJnE,EAAiBwF,SAAS,CACtB5H,MAAOL,SAAF,UAAEA,EAAOkI,eAAT,aAAE,EAAgB7H,QACxBhE,MAAK,SAAAxB,GACJ,MAAwDmF,EAAMkI,QAA9D,IAAO5B,gBAAAA,OAAP,MAAyB,KAAzB,MAA+BV,eAAAA,OAA/B,MAAgD,KAAhD,EACAlB,EAAa/J,QAAQoI,eAAiB,CAAC,EAEnC6C,IACAlB,EAAa/J,QAAQoI,eAArB,KACI3H,WAAYwK,aAAF,EAAEA,EAAgBuC,UAC5B7M,UAAWsK,aAAF,EAAEA,EAAgBwC,WAC3BxM,KAAMgK,aAAF,EAAEA,EAAgBjK,SACtB/C,MAAOgN,aAAF,EAAEA,EAAgBC,mBACvB9J,SAAU6J,aAAF,EAAEA,EAAgB9J,WAC1BG,QAAS2J,aAAF,EAAEA,EAAgBhC,cACtB,EAAAyE,EAAAA,sBAAoBzC,aAAA,EAAAA,EAAgB0C,eAAgB,KACpD5D,EAAa/J,QAAQoI,gBAExB6C,EAAe2C,eACf7D,EAAa/J,QAAQoI,eAAerB,MAAQkE,EAAe2C,cAE3D3C,EAAe1J,cACfwI,EAAa/J,QAAQoI,eAAe5G,MAAQyJ,EAAe1J,cAI/DoK,IACIjM,EAAYM,QAAQV,aAAagB,gBACjCyJ,EAAa/J,QAAQO,gBAArB,GACIE,WAAYkL,aAAF,EAAEA,EAAiB6B,UAC7B7M,UAAWgL,aAAF,EAAEA,EAAiB8B,WAC5BxM,KAAM0K,aAAF,EAAEA,EAAiB3K,SACvB/C,MAAO0N,aAAF,EAAEA,EAAiBT,mBACxB9J,SAAUuK,aAAF,EAAEA,EAAiBxK,WAC3BG,QAASqK,aAAF,EAAEA,EAAiB1C,cACvB,EAAAyE,EAAAA,sBAAoB/B,aAAA,EAAAA,EAAiBgC,eAAgB,KAExD5D,EAAa/J,QAAQoI,eAAe5G,MACpCuI,EAAa/J,QAAQO,gBAAgBiB,MAAQuI,EAAa/J,QAAQoI,eAAe5G,MAC1EmK,SAAAA,EAAiBpK,cACxBwI,EAAa/J,QAAQO,gBAAgBiB,MAAQmK,EAAgBpK,cAGjEoK,SAAAA,EAAiBpK,cAAgBwI,EAAa/J,QAAQoI,eAAe5G,QACrEuI,EAAa/J,QAAQoI,eAAe5G,MAAQmK,aAA5C,EAA4CA,EAAiBpK,aAE7DoK,SAAAA,EAAiBiC,eAAiB7D,EAAa/J,QAAQoI,eAAerB,QACtEgD,EAAa/J,QAAQoI,eAAerB,MAAQ4E,aAA5C,EAA4CA,EAAiBiC,eAIrEhE,EAAsB1J,EAAS2N,OAC/BtD,EAAQ4C,gBAAgBhD,gBAAgB2D,eAC3C,IAAEjD,OAAM,SAAA1M,GACLoM,EAAQ4C,gBAAgBhD,gBAAgBkD,eAC3C,GAER,GAAE,CAACvF,KAEJ,EAAAzH,EAAAA,YAAU,WACNX,EAAYM,QAAZ,OACON,EAAYM,SADnB,IAEIsE,QAAAA,EACAhF,aAAAA,EACAV,QAAAA,EACAO,QAAAA,EACA2K,UAAAA,EACAJ,mBAAAA,EACAE,sBAAAA,GAEP,KAED,EAAAvJ,EAAAA,YAAU,WACN,IAAM0F,EAAc8D,GAAoB,SAACvD,EAAD,GAAmC,QAA3BhC,EAA2B,EAA3BA,QAAShF,EAAkB,EAAlBA,aAerD,OAdK,EAAAyO,EAAAA,SAAA,UAAQhE,EAAa/J,eAArB,aAAQ,EAAsBoI,kBAC/B9B,EAAKF,KAAKgC,eAAV,SACO4F,EAAAA,yBACA1J,EAAQ8D,gBACR2B,EAAa/J,QAAQoI,kBAG3B,EAAA2F,EAAAA,SAAA,UAAQhE,EAAa/J,eAArB,aAAQ,EAAsBO,mBAC/B+F,EAAKF,KAAK7F,gBAAV,SACO0N,EAAAA,0BACA3O,EAAaiB,iBACbwJ,EAAa/J,QAAQO,kBAGzB+F,CACV,IACD,OAAO,kBAAMP,GAAN,CACV,GAAE,CAAC8D,IAEJ,IAAMqE,GAAgB,EAAAtO,EAAAA,cAAY,WAC9B,IAAON,EAAgBI,EAAYM,QAA5BV,aACDiL,EAAU,IAAIJ,gBAAgBH,IAAsBP,GAU1D,OATAc,EAAQ4D,mBAAqB7D,EAC7BC,EAAQ6D,wBAA0BrD,EAClCR,EAAQ8D,oBAAsBpB,EAC9B1C,EAAQ+D,SAAWjE,EACf/K,EAAagB,gBACbiK,EAAQgE,0BAA4B7C,EACpCnB,EAAQiE,yBAA2BhC,GAEvC9M,EAAYM,QAAQuK,QAAUA,EACvBA,CACV,GAAE,CACCzC,EACA2B,EACAO,EACAM,EACAS,EACAkC,EACAvB,EACAc,IAcJ,MAAO,CAACiC,aAXY,EAAA7O,EAAAA,cAAY,SAACC,GAC7BA,EAAEC,iBACFJ,EAAYM,QAAQpB,UACpB,IACoBsP,IACRQ,OAGX,CAFC,MAAOvQ,GACLwQ,MAAMxQ,EACT,CACJ,GAAE,CAAC+P,IAGP,6BAEc1E,wRCnTf,cACA,UACA,UACA,UACA,UACA,QACA,UACA,aACA,0FAPA,8hGAAAxK,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yeASA,MAmFsB,EAnFhB+I,GAAU,EAAA6G,EAAAA,aAAY,sBAEtBC,EAAe,IAAIC,SAAQ,SAACC,EAASC,IACvC,EAAAC,EAAAA,QAAe,CACXC,eAAe,EAAAC,EAAAA,oBAChBzN,MAAK,SAAAC,GAAQ,OAAIoN,EAAQpN,EAAZ,IAAuBkJ,OAAM,SAAA1M,GAAK,OAAI6Q,EAAO7Q,EAAX,GACrD,IAUKiR,EAAoB,SAAC,GAQjB,QANFrH,EAME,EANFA,QACAzD,EAKE,EALFA,QACAhF,EAIE,EAJFA,aACAiF,EAGE,EAHFA,kBACA3F,EAEE,EAFFA,QACAO,EACE,EADFA,QAEJ,MAAgD,EAAAI,EAAAA,UAAS,QAAzD,g0BAAOuI,EAAP,KAAyBuH,EAAzB,KACgBvF,GAAc,EAAA9E,EAAAA,+BAAvBzC,OAASuH,UACVL,GAAiB,EAAA5B,EAAAA,yBAAwB,CAC3CC,iBAAAA,EACAxD,QAAAA,EACAhF,aAAAA,EACAyI,QAAAA,IAEG0G,GAAe,EAAAjF,EAAAA,kBAAiB,CACnC1B,iBAAAA,EACAxD,QAAAA,EACAhF,aAAAA,EACAmK,eAAAA,EACAlF,kBAAAA,EACA3F,QAAAA,EACAO,QAAAA,EACA4I,QAAAA,IARG0G,YAcP,OAJA,EAAApO,EAAAA,YAAU,WACNwO,EAAanN,MAAK,SAAAC,GAAQ,OAAI0N,EAAoB1N,EAAxB,IAAmCkJ,OAAM,SAAA1M,GAAK,OAAI2L,EAAU3L,EAAd,GAC3E,GAAE,IAGC,uBACII,UAAW,mDACX,gBAAC+Q,EAAD,CACI1Q,QAAS6P,EACT9L,KAAMoF,EAAQ,cACdwH,MAAOxH,EAAQ,eACfyH,QAASzH,EAAQ,mBAGhC,EAEKuH,EAAiB,SAAC,GAA4C,IAA3C1Q,EAA2C,EAA3CA,QAAS+D,EAAkC,EAAlCA,KAAM4M,EAA4B,EAA5BA,MAA4B,IAArBC,QAAAA,OAAqB,SAW1DC,EAAS,CACX,mBAAsB9M,EACtB,oBAZmB,SAAC4M,GACpB,OAAQA,GACJ,IAAK,yBACD,MAAO,QACX,IAAK,yBACD,MAAO,QACX,IAAK,mCACD,MAAO,gBAElB,CAG0BG,CAAeH,IAE1C,OAAO,0BACHhR,UAAS,gDAA2CgR,EAA3C,YAAoDC,EAAU,2BAA6B,IACpGD,MAAOE,EACP7Q,QAASA,GAEhB,IACI,EAAA+Q,EAAAA,eAAgB5H,EAAQ,wBAA2B,EAAA6H,EAAAA,mBAAoB7H,EAAQ,6BAChF,EAAA8H,EAAAA,8BAA6B,CACzBxL,KAAM0D,EAAQ,QACd+H,kBAAc,UAAE,uGACLC,OAAO5F,iBAAmBA,gBAAgB6F,mBADrC,0CAAF,4NAGdpM,QAAS,gBAAC,EAAAD,cAAD,CAAeC,QA9EnB,SAAC5F,GACV,OACI,gBAAC,UAAD,KACI,gBAACoR,EAAsBpR,GAGlC,EAyE+BgF,MAAO+E,EAAQ,SACflE,YAAakE,EAAQ,eACrB1D,KAAM0D,EAAQ,QACd5E,KAAM4E,EAAQ,QACdA,QAASA,EACTrD,WAAW,IACnCuL,KAAM,gBAAC,UAAD,CAAiBlR,IAAKgJ,EAAQ,UAAU5E,OAC9C+M,SAAU,CACNC,SAAUpI,EAAQ,8GCzGf,YAAgC,IAANhJ,EAAM,EAANA,IACrC,OACI,uBACIR,UAAU,yBACVgR,MAAO,CAACa,UAAW,OAAQC,gBAAiB,OAAQC,aAAc,QAClE,uBACIvR,IAAKA,EACLwQ,MAAO,CACHgB,MAAO,OACPC,OAAQ,OACRC,UAAW,aAI9B,0HCdD,gxBAE+B,SAAC5H,EAAWD,GACvC,IAAI8H,EAAQ,GACNC,EAAO,CAAC,YAAa,kBAU3B,OATA9H,EAAU+H,SAAQ,SAAAC,IACV,EAAIA,EAAKlI,OAAUkI,EAAKjO,KAAO+N,EAAKG,SAASD,EAAKjO,OAClD8N,EAAMK,KAAK,CACPvI,MAAOqI,EAAKrI,MACZ7F,KAAM,QACN8F,QAAQ,EAAAC,EAAAA,uBAAsBmI,EAAKlI,MAAOC,GAAWpK,YAGhE,IACMkS,CACV,0BAEoC,SAACrI,GAClC,IAAI2I,EAAU,GAcd,OAbA3I,EAAcuI,SAAQ,SAACK,EAAiBC,GACpC,IAAIC,EAAQF,EAAgBG,eAAeC,KAAI,SAAAC,GAC3C,IAAIC,EAAM1P,SAAS2P,cAAc,YAEjC,OADAD,EAAIE,UAAYH,EAAKjN,KACd,CACHwI,YAAY,EAAA6E,EAAAA,qBAAoBR,EAAKI,EAAKK,SAC1CnJ,MAAO+I,EAAI5I,MACXiJ,OAAQ,GACRnJ,QAAQ,EAAAC,EAAAA,uBAAsB4I,EAAKO,MAAOP,EAAKQ,qBAEtD,IACDd,EAAU,GAAH,SAAOA,GAAP,EAAmBG,GAC7B,IACMH,CACV,sVCjCD,cACA,UACA,oCADA,8hGAAAhS,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,y5CAGgC,SAAC+S,GAC7B,IAAMzL,GAAO,EAAA0B,EAAAA,UAAQ,iBAAO,CACxB6B,oBAAqB,SAACmI,GAA4B,IAAlBC,EAAkB,uDAAP,GACjCxK,EAAS,CACXA,OAAQyK,EAAAA,QAAQC,WAChBxP,KAAM,sBACNmE,IAAI,EAAAsL,EAAAA,YACJJ,SAAAA,EACAC,SAAAA,GAGJ,OADAF,EAAStK,GACF,kBAAMsK,EAAS,CAACtK,OAAQyK,EAAAA,QAAQG,cAAe1P,KAAM8E,EAAO9E,KAAMmE,GAAIW,EAAOX,IAA7E,CACV,EAXgB,GAYjB,CAACiL,IACL,OAAOzL,CACV,EAEM,IAAMgM,EAAW,gCAAG,WAAOhM,EAAMiM,EAAb,sFAAoBC,EAApB,EAAoBA,SAAU7P,EAA9B,EAA8BA,KAC/C8P,EAASD,EAAS7P,GAClB+P,EAAenP,MAAMoP,KAAKF,EAAOG,UAAUC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEb,SAAWc,EAAEd,QAAzB,IAF/B,aAICS,GAJD,gEAIRrN,EAJQ,kBAKFyJ,QAAQC,QAAQ1J,EAAM2M,SAAS1L,EAAMiM,IALnC,QAKfjM,EALe,8MAQnBnG,QAAQC,IAAR,MARmB,sCAWhBkG,GAXgB,qPAAH,u2BCrBjB,IAAM4L,EAAU,CACnBC,WAAY,aACZE,cAAe,6CAGU,WAA6D,IAA5DpU,EAA4D,uDAApD,CAAC,EAAmD,yCAA/CwJ,EAA+C,EAA/CA,OAAQ9E,EAAuC,EAAvCA,KAAMmE,EAAiC,EAAjCA,GAAIkL,EAA6B,EAA7BA,SAA6B,IAAnBC,SAAAA,OAAmB,MAAR,GAAQ,EAChF5M,EAAQpH,EAAM0E,GAAQ1E,EAAM0E,GAAQ,IAAIqQ,IAC9C,OAAQvL,GACJ,KAAKyK,EAAQC,WAET,OADA9M,EAAM4N,IAAInM,EAAI,CAACkL,SAAAA,EAAUC,SAAAA,IAClB,EAAP,KAAWhU,GAAX,QAAmB0E,EAAO0C,IAC9B,KAAK6M,EAAQG,cAET,OADAhN,EAAM6N,OAAOpM,GACN,EAAP,KAAW7I,GAAX,QAAmB0E,EAAO0C,IAElC,OAAOpH,CACV,uEChBD,oLACA,oLACA,+iBCFA,cACA,UACA,SACA,QACA,UACA,oCAJA,8hGAAAe,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,6zCAMA,IAAMmU,GAA2B,EAAAC,EAAAA,6CAEQ,SAAC,GAQhC,IANF1U,EAME,EANFA,SACAqF,EAKE,EALFA,UACAsP,EAIE,EAJFA,SACAtL,EAGE,EAHFA,QAGE,IAFFrD,UAAAA,OAEE,MAFU,KAEV,EADF4O,EACE,EADFA,uBAEJ,KAA4B,EAAA/T,EAAAA,YAA5B,GAAOgU,EAAP,KAAeC,EAAf,KACA,KAAoD,EAAAjU,EAAAA,UAAS,MAA7D,GAAOkU,EAAP,KAA2B7J,EAA3B,KACA,KAAkC,EAAA8J,EAAAA,YAAWC,EAAAA,cAAe,CAAC,GAA7D,GAAOC,EAAP,KAAsB7B,EAAtB,KACOlI,GAAuB,EAAAgK,EAAAA,kBAAiB9B,GAAxClI,oBACDiK,GAAuB,EAAAnU,EAAAA,QAAOiU,GAC9BlU,GAAc,EAAAC,EAAAA,QAAO,CAAC0T,SAAAA,IACtBU,GAAiB,EAAApU,EAAAA,QAAO,MAC9B,KAA0C,EAAAqU,EAAAA,kBAAiB,CAACtP,UAAAA,EAAW4O,uBAAAA,IAAvE,GAAO/Q,EAAP,KAAeuH,EAAf,KAA0BmK,EAA1B,KAEA,GAII,EAAAC,EAAAA,YAAU,SAAAC,GACV,IAAM/M,EAAQ+M,EAAO7M,EAAAA,WACrB,MAAO,CACHlI,SAAUgI,EAAMgN,cAChBjP,aAAciC,EAAMnH,kBACpBoU,cAAejN,EAAMkN,kBAE5B,IAVGlV,EADJ,EACIA,SACA+F,EAFJ,EAEIA,aACAkP,EAHJ,EAGIA,cAUE1O,GAAsB,EAAA/F,EAAAA,aAAA,gCAAY,WAAO0G,EAAMiM,GAAb,kFACvB,EAAAD,EAAAA,aAAYhM,EAAMiM,EAAM,CACjCC,SAAUsB,EAAqB9T,QAC/B2C,KAAM,wBAH0B,iQAAZ,wDAKzB,IAEG4R,GAAoB,EAAA3U,EAAAA,cAAY,SAAC4U,GACnCT,EAAe/T,QAAUwU,CAC5B,GAAE,KACH,EAAAnU,EAAAA,YAAU,WACNyT,EAAqB9T,QAAU4T,CAClC,GAAE,CAACA,KAEJ,EAAAvT,EAAAA,YAAU,WACNoU,EAAAA,WAAW/S,MAAK,SAAA6R,GAAM,OAAIC,EAAUD,EAAd,IAAuB1I,OAAM,SAAA1M,GAC/C2L,EAAU3L,EACb,GACJ,GAAE,CAAC2L,KAEJ,EAAAzJ,EAAAA,YAAU,WACNX,EAAYM,QAAU,CAACqT,SAAAA,EAC1B,GAAE,CAACA,KAEJ,EAAAhT,EAAAA,YAAU,WACFoT,GACA/T,EAAYM,QAAQqT,UAE3B,GAAE,CAACI,IAEJ,IAAMiB,EAA2B,CAC7B3Q,UAAAA,EACAwP,OAAAA,EACAE,mBAAAA,EACA7J,sBAAAA,EACAC,oBAAAA,EACAlE,oBAAAA,EACA4O,kBAAAA,EACAlB,SAAAA,EACAU,eAAgBA,EAAe/T,QAC/BuC,OAAQ,CACJA,OAAAA,EACAuH,UAAAA,EACAmK,aAAAA,GAEJU,MAAO,CACHC,QAAS7M,EAAQ,yBAErB8M,oBAAqB9M,EAAQ,uBAC7B3I,SAAU,CACNA,SAAAA,EACA+F,aAAAA,EACAkP,cAAAA,IAIR,OACI,gBAAClB,EAAyB2B,SAA1B,CAAmCnM,MAAO+L,GACrChW,EAGZ,gCAE0C,WACvC,OAAO,EAAAqW,EAAAA,YAAW5B,EACrB,qHCzGD,gBACA,UACA,UACA,0CACA,UACA,koDACA,QAEO,IAAM6B,EAAa,SAAC,GAA6C,IAA5ChE,EAA4C,EAA5CA,QAASuC,EAAmC,EAAnCA,OAAQzM,EAA2B,EAA3BA,GAAIyN,EAAuB,EAAvBA,kBACvCvN,GAAS,EAAAiO,EAAAA,qBAAoBnO,GACnC,EAA0FE,EAAnFkO,WAAAA,OAAP,MAAoB,EAApB,IAA0FlO,EAAnEoC,OAAQ+L,OAA/B,MAA2C,GAA3C,IAA0FnO,EAA3CpD,QAASK,OAAxD,MAAkE,KAAlE,IAA0F+C,EAAlBzI,UAAAA,OAAxE,MAAoF,GAApF,EACA,KAAuD,EAAAgB,EAAAA,WAAS,GAAhE,GAAO6V,EAAP,KAA4BC,EAA5B,KACA,KAA4B,EAAA9V,EAAAA,UAAS,CAAC,GAAtC,GAAO6J,EAAP,KAAekM,EAAf,KACA,KAAgD,EAAA/V,EAAAA,YAAhD,GAAOgW,EAAP,KAAyBC,EAAzB,KACA,KAAkC,EAAAjW,EAAAA,UAAS,MAA3C,GAAOkW,EAAP,KAAkBC,EAAlB,KACMC,GAAa,EAAAhW,EAAAA,QAAO,IACpBD,GAAc,EAAAC,EAAAA,QAAO,CAACyJ,OAAAA,IActBwM,GAAoB,EAAAhW,EAAAA,cAAY,SAAAwJ,GAOlC,OAA+B,GANT+L,EAAUU,QAAO,SAACC,EAAKC,GAIzC,OAHK3M,EAAO4M,eAAeD,IACvBD,EAAI/E,KAAKgF,GAEND,CACV,GAAE,IACkB5I,MACxB,GAAE,IACG+I,GAAoB,EAAArW,EAAAA,cAAY,SAACkH,GAAD,OAAQ,SAAC/C,GAAc,MAClDqF,EAAU1J,EAAYM,QAAtBoJ,OACP,IAAKA,SAAD,UAACA,EAAStC,UAAV,QAAC,EAAc/C,YAA2B,OAAdA,EAAoB,CAChD,IAAMmS,EAAQ,EAAH,CACPnS,UAAAA,GACGiN,EAAQ5H,OAAOtC,IAEtBwO,GAAU,SAAAa,GAAI,cACPA,GADO,QAETrP,EAAKoP,GAFI,GAIjB,CACJ,CAZqC,GAYnC,IAEGE,GAAmB,EAAAxW,EAAAA,cAAY,SAAC+Q,EAAMpS,GACxCoS,EAAKC,SAAQ,SAAAhO,GAAO,MAChBwG,SAAA,UAAAA,EAASxG,UAAT,SAAemB,UAAUhC,UAAUC,IAAIzD,EAC1C,GACJ,GAAE,CAAC6K,IAEE2K,GAAiB,EAAAnU,EAAAA,cAAY,gBAAE0E,EAAF,EAAEA,QAAF,OAAe,IAAIwK,SAAQ,SAACC,EAASC,GAAW,QACxEoG,EAAuB1V,EAAYM,QAAnCoV,oBACDpE,EAAU,CAAC5I,eAAgB,CAAC,GAC9B9D,SAAJ,UAAIA,EAAS8D,sBAAb,OAAI,EAAyBvH,YACzBmQ,EAAQ5I,eAAexH,cAAgB0D,EAAQ8D,eAAevH,WAE9DyD,SAAJ,UAAIA,EAAS8D,sBAAb,OAAI,EAAyBhH,WACzB4P,EAAQ5I,eAAejH,WAAamD,EAAQ8D,eAAehH,UAE/DgU,EAAoB9H,SAAS0D,GAAS,SAAC7S,EAAOkY,GAEa,MADnDlY,GACmB,iCAAfA,EAAM6K,KACNoN,GAAiBjY,SAAA,UAAAA,EAAOmY,eAAP,eAAgBC,mBAAoB,GAAI,mCACnC,+BAAfpY,EAAM6K,MACboN,EAAiBjB,EAAW,mCAEhCnG,EAAO7Q,IAEP4Q,EAAQsH,EAEf,GACJ,GArBkC,GAqB/B,IAoDJ,OAlDA,EAAAhW,EAAAA,YAAU,WAGN,OAFAkU,EAAkBR,GAEX,kBAAMQ,EAAkB,KAAxB,CACV,GAAE,CAACR,KAEJ,EAAA1T,EAAAA,YAAU,WACNX,EAAYM,QAAU,CAACoJ,OAAAA,EAC1B,GAAE,CAACA,KAEJ,EAAAoN,EAAAA,oBAAmB,CAAC5T,IAAKkE,EAAIhD,GAAIyR,EAAkBhX,UAAAA,EAAW2W,WAAAA,KAE9D,EAAA7U,EAAAA,YAAU,WACFuV,EAAkBxM,IAClBmK,EAAO7R,MAAK,SAAA+U,IACR,EAAAC,EAAAA,QAAO,CACHnD,OAAQkD,EACRrN,OAAAA,EACAqG,OAAQuB,EAAQvB,SACjB/N,MAAK,SAAAC,GACJjC,EAAYM,QAAQoV,oBAAsBzT,EAC1C0T,EAAwB1T,EAC3B,IAAEkJ,OAAM,SAAA1M,GAER,GACJ,GAER,GAAE,CAACiL,KAEJ,EAAA/I,EAAAA,YAAU,WACF+U,IACAA,EAAoBuB,GAAG,kBAAkB,SAACtR,GAAU,MACpB,IAAxBA,SAAA,UAAAA,EAAOuR,aAAP,eAAc1J,QACdwI,EAAarQ,EAAMuR,MAAM,GAAGjU,MAE5B+S,EAAa,KAEpB,IACDN,EAAoBuB,GAAG,kBAAkB,SAACtR,GAEtC,GADcA,EAAM+D,OAAO/D,EAAMwR,WACvBC,QAAS,OACT5F,EAAMyE,EAAW3V,QAAQ+W,QAAQ1R,EAAMwR,WAC7C,aAAIlB,EAAW3V,eAAf,OAAI,EAAqBkR,EAAM,GAAI,CAC/B,IAAM8F,EAAYrB,EAAW3V,QAAQkR,EAAM,GAC3CkE,EAAoB6B,MAAMD,EAC7B,CACJ,CACJ,IAER,GAAE,CAAC5B,IACCnR,EAID,uBAAKC,IAAKsR,EAAqBjX,UAAU,qCACpC,EAAA2Y,EAAAA,cAAajT,EAAS,CACnBgS,kBAAAA,EACAkB,cA1HU,SAACrQ,GACd6O,EAAW3V,QAAQ8Q,SAAShK,IAC7B6O,EAAW3V,QAAQ+Q,KAAKjK,EAE/B,EAuHWsQ,SAAU,gBAACA,EAAD,CAAUzU,KAAM8S,EAAW1W,IAtH9B,SAAC4D,GAAS,wmBACRqO,EAAQvN,OADA,IACzB,IAAK,EAAL,qBAAgC,KAAvBN,EAAuB,QAC5B,GAAIA,EAAKR,OAASA,EACd,OAAOQ,EAAKpE,GAEnB,CALwB,+BAMzB,OAAO,IACV,CA+GqDsY,CAAW5B,QAPtD,gBAAC6B,EAAD,CAAmBxQ,GAAIA,GAWrC,iBAED,IAAMwQ,EAAoB,SAAC,GAAS,IAARxQ,EAAQ,EAARA,GACxB,OACI,uBAAKvI,UAAW,qCACX,EAAAgZ,EAAAA,UAAQ,EAAAC,EAAAA,IAAG,qCAAsC,uBAAwB1Q,GAGrF,EAEKsQ,EAAW,SAAC,GAAgB,IAAfzU,EAAe,EAAfA,KAAM5D,EAAS,EAATA,IACrB,IAAK4D,EACD,OAAO,KAEX,IAAMF,GAAU,EAAAN,EAAAA,SAAW,yCAA0CQ,GACrE,OACI,uBAAKpE,UAAWkE,EAAS1D,IAAKA,GAErC,IAEciW,qICpKf,IAAMyC,EAAQ,CAAC,uBAEmB,SAACzQ,GAC/B0Q,EAAkB1Q,GAClByQ,EAAMzQ,EAAOF,IAAME,CACtB,wBAEkC,SAACF,GAChC,OAAI6Q,EAAkB7Q,GACX2Q,EAAM3Q,GAEV,CAAC,CACX,EAED,IAAM6Q,EAAoB,SAAC7Q,GACvB,OAAO2Q,EAAMzB,eAAelP,EAC/B,EAEK4Q,EAAoB,SAAC1Q,GACvB,IAAKA,EAAOF,GACR,MAAM,IAAI8Q,MAAM,uCAEpBC,EAA0B7Q,EAAQ,CAAC,UAAW,cACjD,EAEK6Q,EAA4B,SAAC7Q,GAAuB,IAAfhJ,EAAe,uDAAP,GACzC8Z,EAAgB9Z,EAAM6X,QAAO,SAACC,EAAKC,GAIrC,OAHK/O,EAAOgP,eAAeD,IACvBD,EAAI/E,KAAKgF,GAEND,CACV,GAAE,IACH,GAAIgC,EAAc5K,OAAS,EACvB,MAAM,IAAI6K,UAAJ,4CAAmDD,EAAcE,KAAK,OAEnF,wHCnCD,cACA,6OACA,QAEO,IAAMC,EAAgB,SAACja,GAC1B,OACI,uBAAKO,UAAU,uCACX,uBAAKA,UAAU,OACX,uBAAKA,UAAU,YACX,uBAAKA,UAAW,oCACZ,8BAAQ,EAAAiZ,EAAAA,IAAG,cAAe,wBAC1B,gBAAC,EAAAU,WAAD,GAAY3Z,UAAW,mBAAuBP,MAGtD,uBAAKO,UAAU,YACX,uBAAKA,UAAW,cACZ,8BAAQ,EAAAiZ,EAAAA,IAAG,WAAY,wBACvB,gBAAC,EAAAW,mBAAD,GAAoB5Z,UAAW,mBAAuBP,MAG9D,uBAAKO,UAAU,YACX,uBAAKA,UAAW,cACZ,8BAAQ,EAAAiZ,EAAAA,IAAG,MAAO,wBAClB,gBAAC,EAAAY,QAAD,GAAS7Z,UAAW,mBAAuBP,OAMlE,0BAEcia,kDC/Bf,UACA,aACA,gEAEA,EAAAI,EAAAA,oBAAmB,CACfvR,GAAI,iBACJlD,QAAS,gBAAC,UAAD,MACTsR,WAAY,IACZ9L,OAAQ,CAAC,SAAU,iBAAkB,OACrC7K,UAAW,kBAEf,EAAA8Z,EAAAA,oBAAmB,CACfvR,GAAI,cACJlD,QAAS,gBAAC,UAAD,MACTsR,WAAY,IACZ9L,OAAQ,CAAC,SAAU,iBAAkB,OACrC7K,UAAW,qIChBf,cACA,6OACA,QAEO,IAAM+Z,EAAa,SAACta,GACvB,OACI,uBAAKO,UAAU,oCACX,uBAAKA,UAAU,cACX,8BAAQ,EAAAiZ,EAAAA,IAAG,cAAe,wBAC1B,gBAAC,EAAAU,WAAD,GAAY3Z,UAAU,sCAAyCP,KAEnE,uBAAKO,UAAU,cACX,8BAAQ,EAAAiZ,EAAAA,IAAG,WAAY,wBACvB,gBAAC,EAAAW,mBAAD,GAAoB5Z,UAAU,gBAAmBP,KAErD,uBAAKO,UAAU,cACX,8BAAQ,EAAAiZ,EAAAA,IAAG,MAAO,wBAClB,gBAAC,EAAAY,QAAD,GAAS7Z,UAAU,gBAAmBP,KAIrD,uBAEcsa,iICvBf,cACA,w8BAEO,IAAMC,EAAa,SAAC,GAAiC,IAAhCvH,EAAgC,EAAhCA,QAASwH,EAAuB,EAAvBA,kBAC1BC,EAAiCzH,EAAjCyH,YAAP,EAAwCzH,EAApB0H,OAAAA,OAApB,MAA6B,QAA7B,EACA,KAA0B,EAAAnZ,EAAAA,UAAS,MAAnC,GAAOpB,EAAP,KAAcwa,EAAd,KACA,KAA8B,EAAApZ,EAAAA,UAAS,MAAvC,GAAOqZ,EAAP,KAAgBC,EAAhB,KACMC,GAAS,EAAAlZ,EAAAA,cAAY,SAAAmZ,GACnBA,GACAF,EAAWE,EAElB,IAgBD,OAfA,EAAA1Y,EAAAA,YAAU,WACFuY,IACA,EAAAI,EAAAA,QAAa,CACT9J,cAAeuJ,EACf1U,UAAW6U,EACXF,OAAQA,IACT,SAACva,EAAO8a,GACH9a,EACAwa,EAASxa,aAAD,EAACA,EAAO2E,SAEhB0V,EAAkBS,EAEzB,GAER,GAAE,CAACL,IAEA,gCACKza,GAAS,uBAAKI,UAAW,8BAA+BJ,GACzD,uBAAK+F,IAAK4U,EAAQva,UAAW,qCAMxC,uBAEcga,6GCtCA,YAA6B,IAALxZ,EAAK,EAALA,IACnC,OACI,uBACAwQ,MAAO,CACH2J,QAAS,OACTC,eAAgB,WAEhB,uBACIpa,IAAKA,EACLwQ,MAAO,CACHgB,MAAO,OACP6I,SAAU,QACV3I,UAAW,aAI9B,kHChBD,gDAEa2H,EAAU,SAAC,GAAkD,IAAjDnC,EAAiD,EAAjDA,kBAAmBkB,EAA8B,EAA9BA,cAAe5Y,EAAe,EAAfA,UACvD4Y,EAAc,OACd,IAAM1U,GAAU,EAAAN,EAAAA,SAAW,6BAA8B5D,GACzD,OAAO,uBAAK2F,IAAK+R,EAAkB,OAAQnP,GAAG,gBAAgBvI,UAAWkE,GAC5E,oBAEc2V,yICRf,gDAEaD,EAAqB,SAAC,GAAkD,IAAjDlC,EAAiD,EAAjDA,kBAAmBkB,EAA8B,EAA9BA,cAAe5Y,EAAe,EAAfA,UAClE4Y,EAAc,kBACd,IAAM1U,GAAU,EAAAN,EAAAA,SAAW,6BAA8B5D,GACzD,OACI,uBAAK2F,IAAK+R,EAAkB,kBAAmBnP,GAAG,qBAC7CvI,UAAWkE,GAEvB,+BAEc0V,gICXf,cACA,0CAEaD,EAAa,SAAC,GAAsE,EAArEmB,SAAqE,IAA3DpD,EAA2D,EAA3DA,kBAAmBkB,EAAwC,EAAxCA,cAAe5Y,EAAyB,EAAzBA,UAAW6Y,EAAc,EAAdA,SAC/ED,EAAc,UACd,IAAM1U,GAAU,EAAAN,EAAAA,SAAW,6BAA8B5D,GACzD,OACI,uBAAK2F,IAAK+R,EAAkB,UAAWnP,GAAG,mBAAmBvI,UAAWkE,GACnE2U,EAGZ,uBAEcc,oFCbf,mLACA,oLACA,uNCFA,UACA,UACA,UACA,UACA,aACA,UACA,SACA,UACA,UACA,aACA,aACA,QACA,aACA,qkCAEA,IAAMnQ,GAAU,EAAA6G,EAAAA,aAAY,gBACtBtI,GAAO,EAAAgT,EAAAA,YAAW,qBAiFlBC,EAAwB,SAACvb,GAC3B,IAAMgT,EAAU,CACZ5H,OAAQrB,EAAQ,uBAChB0H,OAAQ1H,EAAQ,sBAChBtE,MAAOsE,EAAQ,UAEnB,OAAO,gBAAC,UAAD,GAAYiJ,QAASA,EAASuC,OAAQkB,EAAAA,WAAY3N,GAAIiB,EAAQ,eAAmB/J,GAC3F,EAEKwb,EAAkB,SAAC,GAAwB,IAAvBjF,EAAuB,EAAvBA,kBAChB7U,GAAc,EAAAC,EAAAA,QAAO,CAACsZ,eAAgB,OAEtCT,GAAoB,EAAA5Y,EAAAA,cAAY,SAAAqZ,GAClCvZ,EAAYM,QAAZ,OACON,EAAYM,SADnB,IAEIiZ,eAAAA,GAEP,GAAE,IAEGQ,GAA0B,EAAA7Z,EAAAA,cAAY,WACxC,OAAO,IAAIkP,SAAQ,SAACC,EAASC,GACAtP,EAAYM,QAA9BiZ,eACQS,sBAAqB,SAACC,EAAKtD,GAClCsD,EACA3K,EAAO2K,GAEP5K,EAAQsH,EAEf,GACJ,GACJ,GAAE,KAEH,EAAAhW,EAAAA,YAAU,WACNkU,EAAkBkF,EACrB,GAAE,CAACA,IAEJ,IAAMzI,EAAU,CACZyH,aAAa,EAAAtJ,EAAAA,kBACbuJ,OAAQ,SAEZ,OACI,gBAAC,UAAD,CAAY1H,QAASA,EAASwH,kBAAmBA,GAExD,GAED,EAAAoB,EAAAA,uBAAsB,CAClBvV,KAAM0D,EAAQ,QACdS,MAAO,gBAAC,EAAAzF,mBAAD,CACHC,MAAO+E,EAAQ,SACf7E,cAAe6E,EAAQ,QACvB5E,KAAM4E,EAAQ,UAClB8R,WAAW,EAAArC,EAAAA,IAAG,eAAgB,uBAC9B1H,eAAgB,kBAAM,CAAN,EAChBlM,QAAS,gBAAC,EAAAD,cAAD,CAAeC,QApIA,SAAC5F,GACzB,cAAkC,EAAAuB,EAAAA,WAAS,KAA3C,g0BAAOua,EAAP,KAAkBC,EAAlB,KAEIzV,EAEAtG,EAFAsG,QACAhF,EACAtB,EADAsB,aAGAyH,EACAzC,EAAQ8D,eADRrB,MAEJ,GAQI,EAAA/B,EAAAA,+BAPAzC,EADJ,EACIA,OADJ,IAEInD,SACIA,EAHR,EAGQA,SACA+F,EAJR,EAIQA,aACAkP,EALR,EAKQA,cAEJE,EAPJ,EAOIA,kBAIAyF,GACA,EAAAC,EAAAA,aAAY3S,EAAAA,WADZ0S,gBAIAE,GACA,EAAAhG,EAAAA,YAAU,SAAAC,GACV,MAAO,CACH+F,OAAQ/F,EAAO7M,EAAAA,WAAW6S,oBAEjC,IALGD,OAOEE,EAAa9T,EAAK8T,aAAeF,EAAOpJ,SAAS/J,GAEjDsT,EAAgBtS,EAAQ,iBACxB9D,EAAUoW,EAAgBb,EAAkBD,EAC5C9W,GAAU,EAAAN,EAAAA,SAAW,8BAA+B,CACtD,OAAUkY,EACV,YAAeA,IAGbhb,GAAa,EAAAO,EAAAA,cAAY,SAAC8F,GAC5BsU,EAAgBtU,EACnB,GAAE,IAEH,OAAIP,EAEI,gBAAC,UAAD,GACImB,KAAMA,EACNZ,MAAOP,EACP/F,SAAUA,EACViV,cAAeA,GACXrW,IAKZ,gCACKoc,GACG,gBAAC,EAAAE,aAAD,CACIxb,KAAMwH,EAAKiU,aACX1b,KAAMyH,EAAKrH,KAAKub,gBAChB5b,QAAS,kBAAMmb,GAAa,EAAnB,KAEhBxX,aAAA,EAAAA,EAAQA,SAAU,gBAAC,EAAAD,OAAD,CAAQC,OAAQA,EAAOA,OAAQC,SAAUD,EAAO0R,eACnE,uBAAK1V,UAAWkE,GACZ,gBAACwB,EAAD,CAASsQ,kBAAmBA,KAEhC,gBAAC,EAAAkG,cAAD,CACIxb,KAAMqH,EAAKrH,KACXC,KAAM4a,EACN3a,QAAS,kBAAM4a,GAAa,EAAnB,EACT3a,SAAUA,EACVC,WAAYA,EACZC,aAAcA,IAI7B,EAwD2B0D,MAAO+E,EAAQ,SACflE,YAAakE,EAAQ,eACrB1D,KAAM0D,EAAQ,QACd5E,KAAM4E,EAAQ,QACdA,QAASA,IACjC2S,oBAAqB,gBAAC,EAAAC,mBAAD,CAAoB5S,QAASA,EACT1D,KAAM0D,EAAQ,QACdtC,oBAAqBsC,EAAQ,yBACtEkI,KAAM,gBAAC,UAAD,CAAelR,IAAKgJ,EAAQ,UAAU5E,OAC5C+M,SAAU,CACN0K,eAAgB7S,EAAQ,YAAY+I,SAAS,gBAC7C+J,gBAAgB,EAAAC,EAAAA,oBAChB3K,SAAUpI,EAAQ,8GC9JX,YAOR,IALCzB,EAKD,EALCA,KACAZ,EAID,EAJCA,MACAtG,EAGD,EAHCA,SACAiV,EAED,EAFCA,cACGrW,oXACJ,MAEC6L,GACA,EAAA7E,EAAAA,+BADA6E,oBAIA5K,EAGAqH,EAHArH,KACA8b,EAEAzU,EAFAyU,eACAC,EACA1U,EADA0U,eAIAxW,EAEAxG,EAFAwG,aACAyW,EACAjd,EADAid,kBAIAnW,EACAN,EADAM,cAIAoW,EACAxV,EAAMyV,cADND,KAGJA,EAAO,EAAH,KACGA,GADH,IAEAE,MAAOF,EAAKE,MACZC,MAAOH,EAAKI,WACZC,OAAQL,EAAKK,UAGjB,EAAAC,EAAAA,gCAA+B,CAC3B9V,MAAAA,EACAZ,cAAAA,EACAmW,kBAAAA,EACApR,oBAAAA,IAGJ,OAGI,EAAA4R,EAAAA,+BAA8B,CAC9Brc,SAAAA,IAHAsc,EADJ,EACIA,SACAC,EAFJ,EAEIA,sBAKJ,OACI,uBAAKpd,WAAW,EAAA4D,EAAAA,SAAW,yBAA0B,CAAC,uBAAwBkS,KAC1E,gBAAC+C,EAAD,CAAU3T,MAAOsX,EAAgBK,MAAOF,EAAKE,MAAMQ,gBACnD,uBAAKrd,UAAU,kCACV,EAAAsd,EAAAA,qBAAoBb,EAAgBE,IAEzC,uBAAK3c,UAAU,kCACX,qBACIA,UAAU,gCACVK,QAAS8c,GACRzc,EAAKoD,QAETgS,GACG,qBACI9V,UAAU,gCACVK,QAAS+c,GACR1c,EAAK6c,SAM7B,EA/ED,gDACA,UACA,UACA,6uBA8EA,IAAM1E,EAAW,SAAC,GAAmB,IAAlB3T,EAAkB,EAAlBA,MAAO2X,EAAW,EAAXA,MAClBrc,EAAM,GAMV,OAJI0E,EAAM2X,KACNrc,EAAM0E,EAAM2X,IAIZ,uBAAK7c,UAAU,yCACX,uBAAKQ,IAAKA,IAGrB,sGC7FD,cACA,UACA,UAEA,GADA,QACA,SACA,UACA,UACA,QACA,0cAEA,IAAMJ,EAAY,SAAC,GAAiB,QAAhBod,EAAgB,EAAhBA,WACVC,GAAkB,EAAArc,EAAAA,SAAO,GACzBD,GAAc,EAAAC,EAAAA,QAAO,CAAC,GACtB2G,EAAOyV,EAAWE,aAAa7c,SAErC,GAGI,EAAA8U,EAAAA,YAAU,SAAAC,GACV,IAAM/M,EAAQ+M,EAAO+H,EAAAA,gBAErB,sWAAO,CAAP,CACI5b,cAAe8G,EAAM+U,oBAClB/U,EAAMgV,kBAEhB,IATG9b,EADJ,EACIA,cACA8H,EAFJ,EAEIA,eAWAmE,GACA,EAAA0N,EAAAA,aAAYiC,EAAAA,gBADZ3P,mBAIAxF,EACAqB,EADArB,MAGJ,MAA4C,EAAAxH,EAAAA,UAASwH,KAArD,g0BAAOsV,EAAP,KAAuBC,EAAvB,KAEMC,GAAgB,EAAA3W,EAAAA,eAAc,CAAC4W,MAAM,IAErCpd,GAAW,EAAAqd,EAAAA,mBAAkB,CAC/BhE,aAAa,EAAAtJ,EAAAA,kBACbuN,aAAcpW,EAAKqO,MAAMC,QACzB2H,cAAAA,IAGEI,GAAU,EAAA/c,EAAAA,cAAY,WAE3B,GAAE,IAEGN,GAAe,EAAA0I,EAAAA,UAAQ,WACzB,MAAO,CACH1H,cAAAA,EACAiM,mBAAAA,EAEP,GAAE,CAACjM,EAAeiM,IAEnB,GAII,EAAAqQ,EAAAA,oBAAmB,CACnB3d,KAAMqH,EAAKrH,KACX8H,MAAAA,EACA4V,QAAAA,EACAvd,SAAAA,EACAE,aAAAA,EACAud,kBAAmB,OATnB3C,EADJ,EACIA,OACA5F,EAFJ,EAEIA,gBACAwI,EAHJ,EAGIA,sBA6EJ,OAnEA,EAAAzc,EAAAA,YAAU,WACNX,EAAYM,QAAU,CAACka,OAAAA,EAAQ9a,SAAAA,EAAUkV,gBAAAA,EAC5C,GAAE,CAAC4F,EAAQ9a,EAAUkV,KAEtB,EAAAjU,EAAAA,YAAU,WAEN,IAAM0c,EAAQ9a,YAAW,WACrBqa,EAAkBvV,EACrB,GAAE,KAGH,OAAO,kBAAMiW,aAAaD,EAAnB,CACV,GAAE,CAAChW,KAGJ,EAAA1G,EAAAA,YAAU,WACN,MAGIX,EAAYM,QAFZka,EADJ,EACIA,OACA5F,EAFJ,EAEIA,gBAIJ,IAAI4F,EAAOpJ,SAASuL,KAAmB/H,GAIlClV,GAAa0d,IAA0B,EAAAG,EAAAA,SAAQZ,GAKpD,OAAIL,EAAgBhc,SAChBgc,EAAgBhc,SAAU,OACtBsG,EAAK4W,mBACLJ,EAAsBT,GAAgB,UAM9CS,EAAsBT,GAAgB,EACzC,GAAE,CAACjd,EAAUid,EAAgBS,KAE9B,EAAAzc,EAAAA,YAAU,WACN,IACIjB,EACAM,EAAYM,QADZZ,SAGJ,GAAKA,EAAL,CAGA,IAAI0E,EAAKjC,SAASsb,eAAe,SACjC,GAAIrZ,EAAI,CACJ,IAAIC,EAAYlC,SAASsb,eAAe,+BACxC,GAAIpZ,EACA,QAEJA,EAAYlC,SAAS2P,cAAc,QACzB1K,GAAK,8BAEf1H,EAASge,2BAA2B,CAACC,uBAAuB,IAAO3b,MAAK,SAAA4b,GACpExZ,EAAGyZ,cAAcC,OAAOzZ,GACxBuZ,EAAU1b,OAAO,+BACpB,GACJ,CAdA,CAeJ,IAEM,IACV,UAEoB,SAAC5D,GAClB,IAAM+J,GAAU,EAAA6G,EAAAA,aAAY,gBAC5B,OACI,gBAAC,EAAAzK,0BAAD,CAA2B4D,QAASA,GAChC,gBAACpJ,EAAcX,GAG1B,wBClJD,gBAEA,0CACA,WAEA,EAAAyf,EAAAA,uBAAsB,CAClBC,SAAAA,EAAAA,QACAJ,UAAWK,EAAAA,uGCCA,YAAsD,MAApB5V,EAAoB,EAApBA,QAAY/J,oXAAQ,MAE7DsG,EAGAtG,EAHAsG,QACAhF,EAEAtB,EAFAsB,aACAgU,EACAtV,EADAsV,uBAQAvM,EAHAzC,EADA8D,eAIArB,MAGE6W,EAAa7V,EAAQ,qBAErBiU,GAAkB,EAAArc,EAAAA,SAAO,GAC/B,kDAAkC,EAAAJ,EAAAA,WAAS,6wBAApCua,EAAP,KAAkBC,EAAlB,KACM8D,GAAa,EAAAle,EAAAA,QAAO,MACpBme,GAAa,EAAAne,EAAAA,QAAO,MAGtBgV,GACA,EAAA3P,EAAAA,+BADA2P,MAGE4H,GAAgB,EAAA3W,EAAAA,eAAc,CAAC4W,MAAM,IAErCK,GAAoB,EAAAjd,EAAAA,cAAY,WAKlC,OAJAke,EAAW9d,QAAU,IAAI8O,SAAQ,SAAAC,GAC7B8O,EAAW7d,QAAU+O,CACxB,IACDgL,GAAa,GACN+D,EAAW9d,OACrB,GAAE,IAEGb,GAAU,EAAAS,EAAAA,cAAY,WAAkB,IAAjB4c,EAAiB,wDAC1CzC,GAAa,GACRyC,GACDqB,EAAW7d,QAAQ,KAE1B,GAAE,IAEGX,GAAa,EAAAO,EAAAA,cAAY,SAAC0G,GAC5BuX,EAAW7d,QAAQsG,EACtB,GAAE,IAEGlH,GAAW,EAAAqd,EAAAA,mBAAkB,CAC/BhE,aAAa,EAAAtJ,EAAAA,kBACbuN,aAAc/H,EAAMC,QACpB2H,cAAAA,IAGJ,GAII,EAAAK,EAAAA,oBAAmB,CACnB3d,KAAM8I,EAAQ,QACdhB,MAAAA,EACA4V,QAASrJ,EACTlU,SAAAA,EACAE,aAAAA,EACAud,kBAAAA,IATAje,EADJ,EACIA,QACAmf,EAFJ,EAEIA,WACAjB,EAHJ,EAGIA,sBAuBJ,OAbA,EAAAzc,EAAAA,YAAU,WACN,GAAKjB,GAAa0d,IAA0B,EAAAG,EAAAA,SAAQlW,GAIpD,OAAI6W,GAAc5B,EAAgBhc,SAC9Bgc,EAAgBhc,SAAU,OAC1B8c,EAAsB/V,GAAO,SAFjC,CAKH,GAAE,CAACA,EAAO3H,EAAU0d,IAIjB,gCACI,0BACIhW,GAAG,4BACHvI,UAAU,0BACVyf,SAAUlE,GAAaiE,EACvBnf,QAASA,GACT,uBAAKL,UAAW,wBAAyBQ,IAAKgJ,EAAQ,eAE1D,gBAAC,EAAA0S,cAAD,CACIxb,KAAM8I,EAAQ,QACd7I,KAAM4a,EACN3a,QAASA,EACTC,SAAUA,EACVC,WAAYA,EACZC,aAAcA,IAG7B,EAzGD,cACA,UACA,UACA,UACA,UACA,QACA,0MCNA,oLACA,qRCDA,cACA,UACA,UACA,mXAEiC,SAAC,GAA+C,IAA9CmZ,EAA8C,EAA9CA,YAAaiE,EAAiC,EAAjCA,aAAcH,EAAmB,EAAnBA,cAEpDnd,GAAW,EAAA8U,EAAAA,YAAU,SAAAC,GACvB,OAAOA,EAAO7M,EAAAA,WAAW8M,aAC5B,IAGG6J,GACA,EAAAhE,EAAAA,aAAY3S,EAAAA,WADZ2W,YAkBJ,OAfA,EAAA5d,EAAAA,YAAU,YACN,EAAAqW,EAAAA,uWAAA,EACIxH,cAAeuJ,GACX8D,GAAiB,CACjB2B,WAAY3B,EAAc2B,cAE/Bxc,MAAK,SAAAuE,GACJgY,EAAYhY,EACf,GACJ,GAAE,CAACyW,EAAcH,KAElB,EAAAlc,EAAAA,YAAU,WACN4d,EAAY7e,EACf,GAAE,IAEIA,CACV,0UC/BD,cACA,UACA,UACA,SACA,UACA,oCAJA,8hGAAAJ,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4sEAMkC,SAAC,GASzB,IAPFC,EAOE,EAPFA,KACA8H,EAME,EANFA,MACA4V,EAKE,EALFA,QACAvd,EAIE,EAJFA,SACA+e,EAGE,EAHFA,UACA7e,EAEE,EAFFA,aACAud,EACE,EADFA,kBAGJ,KAAoC,EAAAtd,EAAAA,WAAS,GAA7C,GAAOwe,EAAP,KAAmBK,EAAnB,KACM1e,GAAc,EAAAC,EAAAA,QAAO,CAACoH,MAAAA,EAAO3H,SAAAA,EAAU+e,UAAAA,EAAWxB,QAAAA,EAASrd,aAAAA,IAEjE,GAGI,EAAA4U,EAAAA,YAAU,SAAAC,GACV,IAAM/M,EAAQ+M,EAAO7M,EAAAA,WACrB,MAAO,CACH4S,OAAQ9S,EAAM+S,oBACd7F,gBAAiBlN,EAAMkN,kBAE9B,IARG4F,EADJ,EACIA,OACA5F,EAFJ,EAEIA,gBAUA+J,GACA,EAAApE,EAAAA,aAAYiC,EAAAA,gBADZmC,kBAGJ,GAII,EAAApE,EAAAA,aAAY3S,EAAAA,WAHZ0S,EADJ,EACIA,gBACAsE,EAFJ,EAEIA,iBACAC,EAHJ,EAGIA,qBAIkCC,GAClC,EAAAvE,EAAAA,aAAYwE,EAAAA,mBADZC,kCAGJ,EAAAre,EAAAA,YAAU,WACNX,EAAYM,QAAZ,OACON,EAAYM,SADnB,IAEI+G,MAAAA,EACA4V,QAAAA,EACAvd,SAAAA,EACA+e,UAAAA,EACA7e,aAAAA,GAEP,GAAE,CAACyH,EAAO4V,EAASvd,EAAU+e,EAAW7e,IAEzC,IAAMqf,EAAoB,SAACC,GACvB,OAAOC,OAAOC,YACVD,OAAOE,QAAQH,GAAKI,QAAO,yBAAKrW,GAAL,kBACvBA,SAAmD,KAAVA,CADlB,IAIlC,EAEKsW,GAAwB,EAAArf,EAAAA,cAAY,SAACoL,IASvCuB,EANI7M,EAAYM,QADZV,aAIAiN,oBAGeoS,EAAkB,CACjCle,YAAYuK,aAAA,EAAAA,EAASxK,YAAa,GAClCG,UAAWqK,aAAF,EAAEA,EAAStK,SACpBG,UAAWmK,aAAF,EAAEA,EAASpK,cACpBG,UAAWiK,aAAF,EAAEA,EAASlK,gBACpBG,MAAM+J,aAAA,EAAAA,EAAShK,WAAY,GAC3B/C,OAAO+M,aAAA,EAAAA,EAAS9J,SAAU,GAC1BE,UAAU4J,aAAA,EAAAA,EAAS7J,aAAc,GACjCG,SAAS0J,aAAA,EAAAA,EAAS3J,oBAAqB,GACvCG,OAAOwJ,aAAA,EAAAA,EAASzJ,cAAe,KAEtC,GAAE,IAEG2d,GAAuB,EAAAtf,EAAAA,cAAY,SAACoL,GACtCqT,EAAkBM,EAAkB,CAChCle,YAAYuK,aAAA,EAAAA,EAASxK,YAAa,GAClCG,UAAWqK,aAAF,EAAEA,EAAStK,SACpBG,UAAWmK,aAAF,EAAEA,EAASpK,cACpBG,UAAWiK,aAAF,EAAEA,EAASlK,gBACpBG,MAAM+J,aAAA,EAAAA,EAAShK,WAAY,GAC3B/C,OAAO+M,aAAA,EAAAA,EAAS9J,SAAU,GAC1BE,UAAU4J,aAAA,EAAAA,EAAS7J,aAAc,GACjCG,SAAS0J,aAAA,EAAAA,EAAS3J,oBAAqB,GACvCG,OAAOwJ,aAAA,EAAAA,EAASzJ,cAAe,KAEtC,GAAE,CAAC8c,IAEEc,GAAkB,EAAAvf,EAAAA,cAAY,SAACwf,GAA2B,IAAjBC,EAAiB,uDAAR,IAC9Cvb,EAAKjC,SAASyd,cAAcF,GAClC,GAAKtb,EAAL,CAGA,IAAMyb,EAAOzb,EAAG0b,wBACVC,EAAiBF,EAAKG,IAAM3P,OAAO4P,QAAUN,EACnDtP,OAAO6P,SAAS,CACZC,SAAU,SACVC,KAAM,EACNJ,IAAKD,GANR,CAQJ,GAAE,IAEG3C,GAAwB,EAAAld,EAAAA,aAAA,6BAAY,WAAOmH,GAAP,0IAAcqT,IAAd,mCAIlC1a,EAAYM,QAFZZ,EAFkC,EAElCA,SACAE,EAHkC,EAGlCA,aAGAgB,EACAhB,EADAgB,cAGAyf,EAEA3gB,EAFA2gB,QACAC,EACA5gB,EADA4gB,SAVkC,SAclC5B,GAAc,GAdoB,SAiBxB4B,EAASC,sBAAsBlZ,GAjBP,qBAgB9BY,EAhB8B,EAgB9BA,mBAhB8B,kCAuBpBqY,EAASE,0BAA0BvY,GAvBf,oBAqB1BwY,EArB0B,EAqB1BA,YAGwB,cAFxBC,EAtB0B,EAsB1BA,qBAtB0B,iBAyB1B9B,EAAiBvX,GACjBwX,EAAqB,MA1BK,2BA2BK,cAAxB6B,EA3BmB,oBA6BtB/b,EAGA8b,EAHA9b,KACA6W,EAEAiF,EAFAjF,KACA3a,EACA4f,EADA5f,gBAEJge,EAAqB5W,IAEjBrH,EAnCsB,kCAsCZyf,EAAQM,8BAtCI,oBAqClBC,EArCkB,EAqClBA,gBArCkB,wBAwClBhC,EAAiBvX,GACjBwX,EAAqB,MAzCH,2BA6CtBU,EADA1e,EAAkB+f,GA5CI,QAgDtBpF,SAAJ,UAAIA,EAAMC,qBAAV,iBAAI,EAAqBD,YAAzB,OAAI,EAA2B9S,gBAC3B8W,EAAqB,EAAD,OACb7a,GACA6W,EAAKC,cAAcD,KAAK9S,gBAFX,IAGhB7G,aAA4B,QAAf,EAAAhB,SAAA,eAAiBgB,cAAe,QAIrDyY,EAAgBkB,GAChBsD,EAAuB,gBACvBW,EAAgB,yDA1DU,oCA4DvB/E,EA5DuB,wBA6D9BmE,EAAqB,MA7DS,UA+DV1B,IA/DU,SA+DxBnX,EA/DwB,UAkEtBA,SAAJ,UAAIA,EAAOyV,qBAAX,iBAAI,EAAsBD,YAA1B,OAAI,EAA4B9S,iBACxB4C,EAAUtF,EAAMyV,cAAcD,KAAK9S,eACnC1C,EAAMyV,cAAcD,KAAK9S,eAAemY,YACxCvV,EAAUtF,EAAMyV,cAAcD,KAAK9S,eAAemY,eAE5Clc,GAAO,EAAAmc,EAAAA,iBAAgB9a,EAAMyV,cAAcD,KAAK7W,MACtD2G,EAAU,EAAH,CACHxK,UAAW6D,EAAK,GAChB3D,SAAU2D,EAAK,IACZ2G,GAEPiU,EAAsBjU,IAE1BkU,EAAqBlU,IAGzBgP,EAAgBtU,GAChB8Y,EAAuB,gBACvBW,EAAgB,0DApFU,0DAwFlChf,QAAQsgB,KAAR,MAxFkC,yBA0FlCrC,GAAc,GA1FoB,6EAAZ,sDA6F3B,CACCe,EACAtC,EACAqC,EACAD,IAGErgB,GAAU,EAAAgB,EAAAA,aAAA,6BAAY,WAAOC,GAAP,8EACxBA,EAAEC,iBADsB,EAKpBJ,EAAYM,QAFZ+G,EAHoB,EAGpBA,MACA4V,EAJoB,EAIpBA,QAGC5V,EAPmB,yCAQb4V,EAAQ1d,EAAKyhB,cARA,WAUnB,EAAAzD,EAAAA,SAAQlW,GAVW,yCAWb4V,EAAQ1d,EAAK0hB,gBAXA,uBAclB7D,EAAsB/V,GAdJ,2CAAZ,sDAgBb,CACCoY,EACAD,EACAD,EACAnC,IAGJ,MAAO,CACH5C,OAAAA,EACAtb,QAAAA,EACAmf,WAAAA,EACAzJ,gBAAAA,EACAwI,sBAAAA,EAEP,4QCrPD,gBACA,UACA,0CACA,UACA,oCAHA,8hGAAA9d,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,+XAKA,MAOsB,EAPhB+I,GAAU,EAAA6G,EAAAA,aAAY,sBAEtBtI,GAAO,EAAAgT,EAAAA,YAAW,4BAEpB,EAAA1J,EAAAA,oBACA,EAAAC,EAAAA,8BAA6B,CACzBxL,KAAM,qBACNyL,kBAAc,UAAE,wGACL,GADK,0CAAF,4NAGdlM,QAAS,gBAAC,EAAAD,cAAD,CAAeC,QAASgd,EAAAA,QAAyB7Y,QAASA,IACnEkI,KAAM,gBAAC,EAAAtM,cAAD,CAAeC,QAASgd,EAAAA,QAAyB7Y,QAASA,IAChEmI,SAAU,CACNC,SAAU7J,EAAK6J,+JCnB3B,gxBAG+B,SAAChI,GAA6B,IAAb0Y,EAAa,uDAAN,EAC/CnQ,EAAQ,GACNC,EAAO,CAAC,YAAa,kBAU3B,OATAxI,EAAeyI,SAAQ,SAAAC,IACf,EAAIA,EAAKlI,OAAUkI,EAAKjO,KAAO+N,EAAKG,SAASD,EAAKjO,OAClD8N,EAAMK,KAAK,CACPvI,MAAOqI,EAAKrI,MACZ7F,KAAM,YACNkP,OAAO,EAAAnJ,EAAAA,uBAAsBmI,EAAKlI,MAAOkY,GAAMriB,YAG1D,IACMkS,CACV,uBAEiC,SAACrI,GAC/B,IAAI2I,EAAU,GAcd,OAbA3I,EAAcuI,SAAQ,SAACK,EAAiBC,GACpC,IAAIC,EAAQF,EAAgBG,eAAeC,KAAI,SAAAC,GAC3C,IAAIC,EAAM1P,SAAS2P,cAAc,YACjCD,EAAIE,UAAYH,EAAKjN,KACrB,IAAIwN,GAAQ,EAAAiP,EAAAA,aAAYxP,EAAKO,MAAOP,EAAKyP,eACzC,MAAO,CACHja,IAAI,EAAA4K,EAAAA,qBAAoBR,EAAKI,EAAKK,SAClCnJ,MAAO+I,EAAI5I,MACX9E,YAAa,GAAF,OAAKgO,GAEvB,IACDb,EAAU,GAAH,SAAOA,GAAP,EAAmBG,GAC7B,IACMH,CACV,gCAE0C,SAAC3I,GACxC,IAAI2Y,EAA0B,GAQ9B,OAPA3Y,EAAcuI,SAAQ,SAACK,EAAiBC,GACpCD,EAAgBG,eAAeR,SAAQ,SAAAU,GAC/BA,EAAK2P,WACLD,GAA0B,EAAAtP,EAAAA,qBAAoBR,EAAKI,EAAKK,SAE/D,GACJ,IACMqP,CACV,yEC9CD,mLACA,2RCDA,cACA,aACA,aACA,UACA,spCAEuC,SAAC,GAAwD,QAAvDjZ,EAAuD,EAAvDA,QAASzI,EAA8C,EAA9CA,aAAcgF,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,kBAC9DjE,EAAiBhB,EAAjBgB,cACP,MAA4C,EAAAf,EAAAA,UAAS,QAArD,qiBAAO2hB,EAAP,KAAuBC,EAAvB,KACOzX,GAAsB,EAAAC,EAAAA,yBAAwB,CAACrF,QAAAA,EAAShF,aAAAA,EAAciF,kBAAAA,IAAtEmF,mBACDhK,GAAc,EAAAC,EAAAA,QAAO,CAAC2E,QAAAA,EAAShF,aAAAA,IA6DrC,OA5DA,EAAAe,EAAAA,YAAU,WACNX,EAAYM,QAAU,CAACsE,QAAAA,EAAShF,aAAAA,EACnC,GAAE,CAACgF,EAAShF,KACb,EAAAe,EAAAA,YAAU,WACN,IAAMkS,EAAO,CACT6O,YAAarZ,EAAQ,qBACrBsZ,aAAc,CACVC,aAAcvZ,EAAQ,gBACtBwZ,WAAYxZ,EAAQ,qBAExByZ,qBAAsB,CAClBvU,oBAAqB,kBAAM6B,QAAQC,QAAQ,CACvC0S,iBAAkB,WADD,IAKzBnhB,IACAiS,EAAKiP,qBAAqBE,qBAAuB,SAACpb,GAC9C,OAAO,IAAIwI,SAAQ,SAACC,EAASC,GACzB,IAAOzO,EAAuC+F,EAAvC/F,gBAAiBohB,EAAsBrb,EAAtBqb,mBACjBriB,EAAgBI,EAAYM,QAA5BV,aACHsiB,EAAmBD,aAAH,EAAGA,EAAoB7a,GACrC8E,EAAa,CACf3K,MAAMV,aAAA,EAAAA,EAAiBS,WAAY,GACnC/C,OAAOsC,aAAA,EAAAA,EAAiB2K,qBAAsB,GAC9C9J,UAAUb,aAAA,EAAAA,EAAiBY,aAAc,GACzCG,SAASf,aAAA,EAAAA,EAAiB0I,cAAe,KAG7C,EAAAkC,EAAAA,SAAS,CACLC,OAAQ,OACRC,IAAKtD,EAAQ,UAAU8Z,SACvBvb,KAAM,CACFgF,eAAgB,sBAChBN,QAASY,EACTgB,gBAAiBgV,KAEtBlgB,MAAK,SAAAxB,GACAA,EAAS8I,MACT4Y,EAAmB,KACnB7S,EAAQ7O,EAASoG,KAAKwb,sBAEtB/S,EAAQ7O,EAASoG,KAAKwb,oBAAoBC,cAEjD,IAAElX,OAAM,SAAA3K,GACL6O,EAAQ7O,EAASoG,KAAKwb,oBACzB,IAAExV,SAAQ,WACPhN,EAAaiN,mBAAb,OAAoCjN,EAAaiB,iBAAoBqL,IACjEgW,GAAyC,+BAArBA,GACpBtiB,EAAaoN,iBAAb,MAAApN,2WAAY,EAAqB,EAAA0N,EAAAA,+BAA8B4U,IAEtE,GACJ,GACJ,GAELT,EAAkB,IAAIa,EAAAA,QAAOC,SAASC,IAAIC,eAAe5P,GAC5D,GAAE,CACCjS,EACAoJ,IAEGwX,CACV,wVCxED,cACA,UACA,UAMA,kCAPA,8hGAAAliB,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,u/DASO,IAAMojB,EAAwB,SAAC,GAS5B,IAPFra,EAOE,EAPFA,QACAnJ,EAME,EANFA,QACAO,EAKE,EALFA,QACAkjB,EAIE,EAJFA,kBACAnB,EAGE,EAHFA,eACA5c,EAEE,EAFFA,QACAhF,EACE,EADFA,aAEEI,GAAc,EAAAC,EAAAA,QAAO,CAAC2E,QAAAA,EAAShF,aAAAA,IAC/BgjB,GAAc,EAAA3iB,EAAAA,QAAO,CAAC,GAC5B,GAAqD,EAAAqF,EAAAA,+BAA9C4E,EAAP,EAAOA,sBAAuBC,EAA9B,EAA8BA,qBAC9B,EAAAxJ,EAAAA,YAAU,WACNX,EAAYM,QAAU,CAACsE,QAAAA,EAAShF,aAAAA,EAAcV,QAAAA,EAASO,QAAAA,EAC1D,GAAE,CACCP,EACAO,EACAG,EACAgF,KAGJ,EAAAjE,EAAAA,YAAU,WACN,IAAM0F,EAAc8D,GAAoB,SAACvD,EAAD,GAAmC,QAA3BhC,EAA2B,EAA3BA,QAAShF,EAAkB,EAAlBA,aAkBrD,OAjBA,UAAIgjB,EAAYtiB,eAAhB,OAAI,EAAqBoI,iBACrB9B,EAAKF,KAAKgC,eAAV,SACO4F,EAAAA,yBACAsU,EAAYtiB,QAAQoI,gBAF3B,IAGIrB,MAAOzC,EAAQ8D,eAAerB,QAE9Bub,EAAYtiB,QAAQ+G,QACpBT,EAAKF,KAAKgC,eAAerB,MAAQub,EAAYtiB,QAAQ+G,QAG7D,UAAIub,EAAYtiB,eAAhB,OAAI,EAAqBO,kBACrB+F,EAAKF,KAAK7F,gBAAV,SACO0N,EAAAA,0BACA3O,EAAaiB,iBACb+hB,EAAYtiB,QAAQO,kBAGxB+F,CACV,IACD,OAAO,kBAAMP,GAAN,CACV,GAAE,CAAC8D,IAEJ,IAAM4E,GAAc,EAAA7O,EAAAA,cAAY,WAC5B,MAAgCF,EAAYM,QAArCsE,EAAP,EAAOA,QAAShF,EAAhB,EAAgBA,aACT8I,EAAuD9D,EAAvD8D,eAAgBF,EAAuC5D,EAAvC4D,SAAUD,EAA6B3D,EAA7B2D,UAAWE,EAAkB7D,EAAlB6D,eACrC7H,EAAgChB,EAAhCgB,cAAe+H,EAAiB/I,EAAjB+I,cACtB3I,EAAYM,QAAQpB,UACpB,MAAM2jB,EAAyB,CAC3BlB,aAAc,CACVC,aAAcvZ,EAAQ,sBACtBwZ,WAAYxZ,EAAQ,qBAExBya,gBAAiB,CACbvZ,YAAalB,EAAQ,eACrBgB,aAAcb,EAASc,KACvByZ,iBAAkB,QAClBC,YAAY,EAAAha,EAAAA,uBAAsBT,EAAUU,MAAOT,EAASU,WAAWpK,WACvEmkB,gBAAiB5a,EAAQ,mBACzB6a,cAAc,EAAAC,EAAAA,iBAAgB1a,EAAgBD,EAASU,YAE3Dka,eAAgB1a,EAAerB,MAC/Bgc,gBAAiB,CAAC,yBAClBC,wBAAyB1iB,GAE7B,GAAIA,EAAe,CACfiiB,EAAuBU,0BAA4B,CAAC,EACpDV,EAAuBW,wBAAyB,EAChDX,EAAuBQ,gBAAvB,yDAA6CR,EAAuBQ,uTAApE,CAAqF,mBAAoB,oBACzG,IAAMI,GAAkB,EAAAC,EAAAA,oBAAmB/a,GACvC8a,EAAgBjW,SAChBqV,EAAuBc,yBAA2B,CAC9CF,gBAAAA,EACAnC,yBAAyB,EAAAsC,EAAAA,6BAA4Bjb,IAGhE,CACD,IAAMkb,EAAqBlB,EAAkBmB,yBAAyBjB,GACtEgB,EAAmBE,sBAAsB,GAAGC,WAAWC,0BAA2B,EAClFJ,EAAmBE,sBAAsB,GAAGC,WAAWE,wBAAyB,EAChFL,EAAmBE,sBAAsB,GAAGC,WAAWG,yBAA2B,CAC9EC,OAAQ,OACRC,qBAAqB,GAEzB7C,EAAe8C,gBAAgBT,GAAoB7hB,KAAnD,gCAAwD,WAAO2U,GAAP,0GAEhDA,SAAJ,UAAIA,EAAShQ,yBAAb,iBAAI,EAA4Boa,YAAhC,OAAI,EAAkCrY,iBAC5B4C,EAAUqL,EAAQhQ,kBAAkBoa,KAAKrY,eADG,GAElB,EAAAoY,EAAAA,iBAAgBxV,EAAQ3G,MAFN,SAE3C5D,EAF2C,KAE/BE,EAF+B,KAGlD2hB,EAAYtiB,QAAQoI,eAAiB,CACjC3H,WAAAA,EACAE,UAAAA,EACAE,UAAWmK,EAAQiZ,SACnBljB,UAAWiK,EAAQkZ,SACnBjjB,KAAM+J,EAAQhK,SACd/C,MAAO+M,EAAQE,mBACf9J,SAAU4J,EAAQ7J,WAClBG,QAAS0J,EAAQ/B,YACjBzH,MAAO4G,EAAe5G,OAEtBwJ,EAAQzJ,cAAgB6G,EAAe5G,QACvC8gB,EAAYtiB,QAAQoI,eAAe5G,MAAQwJ,EAAQzJ,cAGvD8U,EAAQ9V,kBACFyK,EAAUqL,EAAQ9V,gBADC,GAEO,EAAAigB,EAAAA,iBAAgBxV,EAAQ3G,MAF/B,SAElB5D,EAFkB,KAENE,EAFM,KAGzB2hB,EAAYtiB,QAAQO,gBAAkB,CAClCE,WAAAA,EACAE,UAAAA,EACAE,UAAWmK,EAAQiZ,SACnBljB,UAAWiK,EAAQkZ,SACnBjjB,KAAM+J,EAAQhK,SACd/C,MAAO+M,EAAQE,mBACf9J,SAAU4J,EAAQ7J,WAClBG,QAAS0J,EAAQ/B,aAErB,UAAIqZ,EAAYtiB,eAAhB,iBAAI,EAAqBoI,sBAAzB,OAAI,EAAqC5G,QACrC8gB,EAAYtiB,QAAQO,gBAAgBiB,MAAQ8gB,EAAYtiB,QAAQoI,eAAe5G,QAGnF6U,EAAQtP,QACRub,EAAYtiB,QAAQ+G,MAAQsP,EAAQtP,OAtCY,SAwCjCsb,EAAkB8B,cAAc9N,GAxCC,OAwC9C/P,EAxC8C,OA0CpDgc,EAAYtiB,QAAQyT,mBAAqBnN,EAAKuH,MAC9CjE,EAAsBtD,EAAKuH,OA3CyB,yNAAxD,uDA4CGhD,OAAM,SAAA1M,GACqB,cAAtBA,aAAA,EAAAA,EAAOimB,YAIXjkB,QAAQC,IAAIjC,GAHRuB,EAAYM,QAAQb,SAI3B,GACJ,GAAE,CACC+hB,EACAmB,EACAzY,IAEJ,OAAO6E,CACV,kCAEc2T,wRC5Jf,cACA,UACA,UACA,UACA,UACA,aACA,UACA,QACA,UACA,0FARA,8hGAAApjB,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,gqCAUA,MAqEsB,EArEhB+I,GAAU,EAAA6G,EAAAA,aAAY,uBACxByV,EAAS,KACPnD,EAAiB,IAAIc,EAAAA,QAAOC,SAASC,IAAIC,eAAe,CAC1Df,YAAarZ,EAAQ,qBACrBsZ,aAAc,CACVC,aAAcvZ,EAAQ,sBACtBwZ,WAAYxZ,EAAQ,yBA4DvB,EAAA4H,EAAAA,eAAgB5H,EAAQ,wBAA2B,EAAA6H,EAAAA,mBAAoB7H,EAAQ,6BAChF,EAAA8H,EAAAA,8BAA6B,CACzBxL,KAAM0D,EAAQ,QACd+H,kBAAc,UAAE,yFACG,OAAXuU,EADQ,yCAEDA,GAFC,iCAKwB,EAAAC,EAAAA,QAAgB,CAC5CpV,eAAe,EAAAC,EAAAA,kBACfoV,iBAAkB,EAClBC,iBAAkBzc,EAAQ,sBARtB,cAKFsa,EALE,gBAUWnB,EAAeuD,aAAa,CAC3CC,WAAY,EACZC,gBAAiB,EACjBlB,sBAAuBpB,EAAkBmB,2BAA2BC,wBAbhE,cAUJxd,EAVI,OAgBJoe,IADApe,EAAOA,OAfH,kBAoBDoe,GApBC,0HAAF,4NAyBdzgB,QAAS,gBAAC,EAAAD,cAAD,CAAeC,QArFL,SAAC,GAA0E,QAAzEmE,EAAyE,EAAzEA,QAASzD,EAAgE,EAAhEA,QAAShF,EAAuD,EAAvDA,aAAciF,EAAyC,EAAzCA,kBAAmB3F,EAAsB,EAAtBA,QAASO,EAAa,EAAbA,QAC/E2E,GAAK,EAAAnE,EAAAA,QAAO,MAClB,MAAkD,EAAAJ,EAAAA,UAAS,QAA3D,g0BAAO8iB,EAAP,KAA0BuC,EAA1B,MACA,EAAAC,EAAAA,2BAA0B,CAAC3P,WAAY,MACvC,IAAO3S,GAAU,EAAAyC,EAAAA,+BAAVzC,OACD2e,GAAiB,EAAA4D,EAAAA,yBAAwB,CAAC/c,QAAAA,EAASzD,QAAAA,EAAShF,aAAAA,EAAciF,kBAAAA,IAC1EkK,GAAc,EAAA2T,EAAAA,uBAAsB,CACtCra,QAAAA,EACAnJ,QAAAA,EACAO,QAAAA,EACAkjB,kBAAAA,EACAnB,eAAAA,EACA5c,QAAAA,EACAhF,aAAAA,IAGEylB,GAAe,EAAAnlB,EAAAA,cAAY,SAACkE,GAC9B,KAAOA,EAAGkhB,WACNlhB,EAAGmhB,YAAYnhB,EAAGkhB,UAEzB,GAAE,IA+BH,OA7BA,EAAA3kB,EAAAA,YAAU,YACN,EAAAikB,EAAAA,QAAgB,CACZpV,eAAe,EAAAC,EAAAA,kBACfoV,iBAAkB,EAClBC,iBAAkBzc,EAAQ,sBAC3BrG,MAAK,SAAAC,GACJijB,EAAqBjjB,EACxB,IAAEkJ,OAAM,SAAA1M,GAAK,OAAIoE,EAAOuH,UAAU3L,EAArB,GACjB,GAAE,KACH,EAAAkC,EAAAA,YAAU,WACN,GAAIyD,EAAG9D,SAAWkhB,EAAgB,CAC9B6D,EAAajhB,EAAG9D,SAChB,IAKuC,IAEhC,IAPDklB,EAAShE,EAAeiE,aAAf,OACRpd,EAAQ,kBAAqB,CAC5BnJ,QAAS6P,KAGc,SAA3B1G,EAAQ,eACR,UAAAmd,EAAO5F,cAAc,iBAArB,mBAAgCvd,iBAAhC,SAA2CG,OAAO,aAElD,UAAAgjB,EAAO5F,cAAc,iBAArB,mBAAgCvd,iBAAhC,SAA2CC,IAAI,qBAEnD8B,EAAG9D,QAAQwd,OAAO0H,EACrB,CACJ,GAAE,CACChE,EACA6D,EACAtW,IAGA,uBAAKvK,IAAKJ,EAAIvF,UAAW,mCAIhC,EA8B+ByE,MAAO+E,EAAQ,SACflE,YAAakE,EAAQ,eACrB1D,KAAM0D,EAAQ,QACd5E,KAAM4E,EAAQ,QACdA,QAASA,EACTrD,WAAW,IACnCuL,KAAM,gBAAC,UAAD,CAAkBlR,IAAKgJ,EAAQ,UAAU5E,OAC/C+M,SAAU,CACN0K,eAAgB7S,EAAQ,YAAY+I,SAAS,gBAC7C+J,gBAAgB,EAChB1K,SAAUpI,EAAQ,8GCpHf,YAAiC,IAANhJ,EAAM,EAANA,IACtC,OACI,uBACIR,UAAS,oBACTgR,MAAO,CAACa,UAAW,OAAQC,gBAAiB,OAAQC,aAAc,QAClE,uBACIvR,IAAKA,EACLwQ,MAAO,CACHgB,MAAO,OACPC,OAAQ,OACRC,UAAW,aAI9B,yECdD,oLACA,oLACA,mLACA,oLACA,oLACA,oLACA,oLACA,oLACA,kTCRA,cACA,UACA,s8BAEO,IAAM+F,EAAqB,SAAC,GAMzB,IAJF5T,EAIE,EAJFA,IACAkB,EAGE,EAHFA,GAGE,IAFFvF,UAAAA,OAEE,MAFU,GAEV,MADF2W,WAAAA,OACE,MADW,EACX,EACN,KAAsC,EAAA3V,EAAAA,UAASwQ,OAAOqV,YAAtD,GAAOC,EAAP,KAAoBC,EAApB,KACA1iB,EAAM,GAAH,OAAMA,EAAN,gBACH,EAAAvC,EAAAA,YAAU,WACN,GAAIyD,EAAI,CACJ,IAAIyhB,GAAW,EAAAC,EAAAA,cAAa5iB,EAAK,IAC7BsS,EAAaqQ,IAAaA,KAC1BA,EAAWrQ,GACX,EAAAuQ,EAAAA,cAAa7iB,EAAK2iB,IAElBzhB,EAAG4hB,YAAcH,EACjBzhB,EAAG/B,UAAUC,IAAIzD,GAEjBuF,EAAG/B,UAAUG,OAAO3D,EAE3B,CACJ,GAAE,CAACuF,EAAIuhB,KAER,EAAAhlB,EAAAA,YAAU,WACN,IAAMslB,EAAiB,SAAC9lB,GAAD,OAAOylB,EAAevV,OAAOqV,WAA7B,EAEvB,OADArV,OAAO6V,iBAAiB,SAAUD,GAC3B,kBAAM5V,OAAO8V,oBAAoB,SAAUF,EAA3C,CACV,GACJ,qDAEwC,SAAC,GAIhC,IAFFzQ,EAEE,EAFFA,WAEE,IADF3W,UAAAA,OACE,MADU,iCACV,EACN,KAA8B,EAAAgB,EAAAA,UAAS,MAAvC,GAAOqZ,EAAP,KAAgBC,EAAhB,KACO9U,GAAa,EAAAiB,EAAAA,+BAAbjB,WAEP,EAAA1D,EAAAA,YAAU,WACS,MAAX0D,GACA8U,EAAU,UAAC9U,EAAU+hB,kBAAX,aAAC,EAAsBA,WAExC,GAAE,CAAC/hB,IAEJyS,EAAmB,CACf5T,IAAK,UACLkB,GAAI8U,EACJ1D,WAAAA,EACA3W,UAAAA,GAEP,0GCvDD,cACA,UACA,6nDAEO,IAAMqH,EAAgB,WAAgC,IAA/BoL,EAA+B,uDAArB,CAAC,EAAGwL,EAAiB,wDACzD,GAAqD,EAAAxX,EAAAA,+BAA9CuO,EAAP,EAAOA,OAAQhR,EAAf,EAAeA,OAAQsH,EAAvB,EAAuBA,oBAAqB8K,EAA5C,EAA4CA,MACtCC,EAAUD,EAAMC,QACf9K,EAAavH,EAAbuH,UACP,GAA0C,EAAAvK,EAAAA,UAAS,MAAnD,SAAOgd,EAAP,KAAsBwJ,EAAtB,KA2BA,OAzBA,EAAA1lB,EAAAA,YAAU,WACFuU,GAAWrB,IACX,EAAAmD,EAAAA,QAAA,GACInD,OAAAA,EACAyS,OAAO,GAAShV,IACjB,SAAC7S,EAAOwD,GACHxD,EACA2L,EAAU3L,GAEV4nB,EAAiBpkB,EAExB,GAER,GAAE,CAACiT,EAASrB,EAAQzJ,KAErB,EAAAzJ,EAAAA,YAAU,WACN,IAAKmc,EAAM,CACP,IAAMzW,EAAc8D,GAAoB,SAACvD,EAAD,GAAkB,IAAVjC,EAAU,EAAVA,KAE5C,OADAiC,EAAKF,KAAKC,kBAAV,UAA+BhC,EAA/B,iBAAqDkY,aAArD,EAAqDA,EAAe2B,WAC7D5X,CACV,GAAE,IACH,OAAO,kBAAMP,GAAN,CACV,CACJ,GAAE,CAACyW,EAAMD,EAAe1S,IAElB0S,CACV,0BAEc3W,kWCtCf,cACA,UACA,UACA,SACA,oCAHA,8hGAAA5G,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,m2CAIA,wCAE6C,SAAC,GAGpC,IADFI,EACE,EADFA,SAGJ,GAGI,EAAA6a,EAAAA,aAAY3S,EAAAA,WAFZ0S,EADJ,EACIA,gBACAuE,EAFJ,EAEIA,qBAIAF,GACA,EAAApE,EAAAA,aAAYiC,EAAAA,gBADZmC,kBAIA4H,GACA,EAAAhM,EAAAA,aAAY,gBADZgM,kBA+CJ,MAAO,CACHvK,UA7Ca,EAAA9b,EAAAA,cAAY,WACzBoa,EAAgB,MAChBuE,EAAqB,KACxB,GAAE,IA2CC5C,uBAzC0B,EAAA/b,EAAAA,aAAA,YAAY,iIAKxBR,EAAS2gB,QAAQmG,mBALO,gBAG9BC,EAH8B,EAG9BA,aACAC,EAJ8B,EAI9BA,iBAGAD,GAAgBC,IAChBpM,EAAgBmM,GAEZA,SAAJ,UAAIA,EAAchL,qBAAlB,iBAAI,EAA6BD,YAAjC,OAAI,EAAmC9S,iBAC7B/D,EAAO8hB,EAAahL,cAAcD,KAAK7W,KADM,GAErB,EAAAmc,EAAAA,iBAAgBnc,KAFK,m0BAE5C7D,EAF4C,KAEjCE,EAFiC,KAG7CsK,EAH6C,GAI/CxK,UAAAA,EACAE,SAAAA,GACGylB,EAAahL,cAAcD,KAAK9S,gBAGvCiW,EAAkB,CACd5d,WAAYuK,EAAQxK,WAAa,GACjCG,UAAWqK,EAAQtK,UAAY,GAC/BG,WAAWmK,aAAA,EAAAA,EAASpK,gBAAiB,GACrCG,WAAWiK,aAAA,EAAAA,EAASlK,kBAAmB,GACvCG,MAAM+J,aAAA,EAAAA,EAAShK,WAAY,GAC3B/C,OAAO+M,aAAA,EAAAA,EAAS9J,SAAU,GAC1BE,UAAU4J,aAAA,EAAAA,EAAS7J,aAAc,GACjCG,SAAS0J,aAAA,EAAAA,EAAS3J,oBAAqB,OA3BjB,gDAgClC4kB,EAAkB,KAAMnjB,QAAS,CAC7BgE,GAAI,yBACJuf,QAAS,yBAlCqB,gEAqCvC,CAACjnB,IAOP,6GC1ED,cACA,oHAEO,IAAM4U,EAAmB,SAAC,GAAwC,QAAvCtP,EAAuC,EAAvCA,UAAW4O,EAA4B,EAA5BA,uBACzC,MAA4B,EAAA/T,EAAAA,UAAS,QAArC,g0BAAOgD,EAAP,KAAe+jB,EAAf,KACMxc,GAAY,EAAAlK,EAAAA,cAAY,SAACzB,GAAgD,IAAzCwE,EAAyC,uDAAlC,QAASE,IAAyB,yDACvE6B,GAAqB,SAAR/B,EACb2Q,GAAuB,EAAAiT,EAAAA,iBAAgBpoB,IAEvCmoB,EAAU,CACNxjB,SAAS,EAAAyjB,EAAAA,iBAAgBpoB,GACzBwE,KAAAA,EACAE,cAAAA,GAIX,GAAE,CAACyjB,EAAW5hB,EAAW4O,IAE1B,MAAO,CACH/Q,EACAuH,GAHiB,EAAAlK,EAAAA,cAAY,kBAAM0mB,EAAU,KAAhB,GAAuB,CAACA,IAM5D,6BAEctS,4VCzBf,wCACA,goNACuC,SAAC,GAK9B,IAHF1P,EAGE,EAHFA,QACAhF,EAEE,EAFFA,aACAiF,EACE,EADFA,kBAEE7E,GAAc,EAAAC,EAAAA,QAAO,CAAC2E,QAAAA,EAAShF,aAAAA,IAC9BknB,EAA0EjiB,EAA1EiiB,sBAAuBC,EAAmDliB,EAAnDkiB,mBAAoBC,EAA+BniB,EAA/BmiB,4BAC5ClU,GAAW,EAAA7S,EAAAA,QAAO,IAAIqT,IAAI,CAC5B,CAAC,kBAAmB,IACpB,CAAC,wBAAyB,IAC1B,CAAC,yBAA0B,QAE/B,EAAA3S,EAAAA,YAAU,WACNX,EAAYM,QAAU,CAACsE,QAAAA,EAAShF,aAAAA,EACnC,IAED,IAEMqnB,GAAuB,EAAA/mB,EAAAA,aAAA,YAAY,mGACLF,EAAYM,QAArCsE,EAD8B,EAC9BA,QAAShF,EADqB,EACrBA,gBACVkV,EAAUhC,EAASxS,QAAQ4mB,IAAI,oBACzB1Z,OAAS,IAAM5N,EAAaunB,iBAAoBvnB,EAAawnB,qBAHpC,iBAFbze,EAMe/I,EAAa+I,cAA1CnC,EANgCmC,EAAcgJ,KAAI,SAAAC,GAAI,OAAIA,aAAA,EAAAA,EAAMF,eAAelE,QAAS,CAAlC,IAAqC8R,OAAO+H,SAAS7Z,OAAS,EAEzF,WAK1BsH,EAAQtH,OALkB,wBAMvB8E,EAAWwC,EAAQwS,MANI,SAOvBlY,QAAQC,QAAQiD,EAAS9L,EAAS,CAAC5B,QAAAA,EAAShF,aAAAA,KAPrB,wDAFd,IAAC+I,CAEa,UAUtC,IAEG4e,GAAyB,EAAArnB,EAAAA,cAAY,WAGvC,IAFA,MAAgCF,EAAYM,QAArCsE,EAAP,EAAOA,QAAShF,EAAhB,EAAgBA,aACVkV,EAAUhC,EAASxS,QAAQ4mB,IAAI,mBAC9BpS,EAAQtH,QACMsH,EAAQwS,KACzBhV,EAAS,EAAO,CAAC1N,QAAAA,EAAShF,aAAAA,GAEjC,GAAE,IAEG4nB,GAAyB,EAAAtnB,EAAAA,cAAY,SAAA+C,GAAI,OAAI,SAACqP,GAA8B,IAApBmV,EAAoB,wDACxE3S,EAAUhC,EAASxS,QAAQ4mB,IAAIjkB,GACrC6R,EAAQzD,KAAKiB,GACTmV,GACAR,GAEP,CAN8C,GAM5C,CACCA,EACAnU,EAASxS,UAGP0J,GAAqB,EAAA9J,EAAAA,aAAYsnB,EAAuB,mBAAoB,CAACA,IAC7EE,GAA2B,EAAAxnB,EAAAA,aAAYsnB,EAAuB,yBAA0B,CAACA,IACzFG,GAA4B,EAAAznB,EAAAA,aAAYsnB,EAAuB,0BAA2B,CAACA,IAiBjG,OAfA,EAAA7mB,EAAAA,YAAU,WACN,IAAMinB,EAAiCd,EAAsBG,GACvDY,EAAuCb,EAA4BC,GACnEa,EAA8Bf,EAAmBQ,GACvD,OAAO,WACHK,IACAC,IACAC,GACH,CACJ,GAAE,CACChB,EACAE,EACAD,IAGG,CACH/c,mBAAAA,EACA0d,yBAAAA,EACAC,0BAAAA,EAEP,sVC7ED,gBAEA,MADA,uBACA,mCADA,8hGAAAroB,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,ulCAG8C,SAAC,GAMrC,IAJF0G,EAIE,EAJFA,MACAZ,EAGE,EAHFA,cACAmW,EAEE,EAFFA,kBACApR,EACE,EADFA,oBAGEnK,GAAc,EAAAC,EAAAA,QAAO,CAAC+F,MAAAA,KAE5B,EAAArF,EAAAA,YAAU,WACNX,EAAYM,QAAU,CAAC0F,MAAAA,EAAOZ,cAAAA,EACjC,GAAE,CAACY,EAAOZ,KAEX,EAAAzE,EAAAA,YAAU,WACN,IAAM0F,EAAc8D,EAAmB,gCAAC,WAAOvD,GAAP,oFAIhC5G,EAAYM,QAFZ0F,EAFgC,EAEhCA,MACAZ,EAHgC,EAGhCA,cAHgC,2BAMzB,CACHsB,KAAM,EAAF,KACGE,EAAKF,MADR,IAEAC,kBAAmB,CACfohB,uBAAwB/hB,EAAMoB,GAC9B4gB,yBAA0BzM,OAXN,0DAgBzB,EAAAzU,EAAAA,qBAAoB1B,EAApB,OAhByB,sOAAD,uDAmBvC,OAAOiB,CACV,GAAE,CAACkV,EAAmBpR,GAE1B,oHCzCD,cAEazE,EAA2B,SAAC,GAAkD,IAAjDC,EAAiD,EAAjDA,MAAOP,EAA0C,EAA1CA,cAA0C,IAA3BQ,eAAAA,OAA2B,MAAV,KAAU,GACvF,EAAAjF,EAAAA,YAAU,WACN,IAAM0F,EAAcV,GAAM,SAACiB,GAAS,QAChC,GAAIA,SAAJ,UAAIA,EAAMqhB,0BAAV,iBAAI,EAA0BC,sBAA9B,OAAI,EAA0CC,sBAAuB,CACjE,IAAM/kB,EAAUwD,EAAKqhB,mBAAmBC,eAAeC,sBACvD,MAAO,CACHllB,KAAMmC,EAAcgjB,MACpBhlB,QAAAA,EACAwC,eAAAA,EAEP,CACD,OAAO,IACV,IACD,OAAO,kBAAMS,GAAN,CACV,GAAE,CAACV,GACP,qCAEcD,gWCnBf,cACA,UACA,UACA,UACA,kCAHA,8hGAAApG,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yvCAKO,IAAMiG,EAAoB,SAAC,GAUxB,IARFZ,EAQE,EARFA,KACAC,EAOE,EAPFA,QAOE,IANFY,YAAAA,OAME,SALF5F,EAKE,EALFA,aACAwF,EAIE,EAJFA,cACAF,EAGE,EAHFA,eACAH,EAEE,EAFFA,oBAEE,IADFE,qBAAAA,OACE,MADqB,CAAC,EACtB,EACAjF,GAAc,EAAAC,EAAAA,QAAO,CAACL,aAAAA,EAAcgF,QAAAA,EAASD,KAAAA,EAAMI,oBAAAA,IACzD,GAII,EAAAO,EAAAA,+BAHAyO,EADJ,EACIA,mBACAM,EAFJ,EAEIA,eACApO,EAHJ,EAGIA,qBAGJ,EAAAE,EAAAA,iBAAgB,CAACxB,KAAAA,EAAMmY,KAAMtX,KAE7B,EAAAU,EAAAA,eAAcjB,IAEd,EAAAtE,EAAAA,YAAU,WACNX,EAAYM,QAAU,CAACV,aAAAA,EAAcgF,QAAAA,EAASD,KAAAA,EAAMI,oBAAAA,EAAqBgP,mBAAAA,EAC5E,KAED,EAAApT,EAAAA,YAAU,WACN,IAAM0F,EAAcnB,EAAc,YAAC,+FAC3BlF,EAAYM,QAAQyE,qBAAuB/E,EAAYM,QAAQqE,KADpC,6BAGjBwJ,GAAQ,UAAAnO,EAAYM,eAAZ,eAAqByT,qBAAsB,GACrDnN,EAAO,CAACF,KAAM,CAACC,kBAAmB,EAAF,aAAOhC,EAAP,cAA0BwJ,MAC1DkG,EALmB,gCAMJjF,QAAQC,QAAQgF,EAAerU,EAAYM,UANvC,OAMnBiG,EANmB,OAOnB,UAAIA,SAAJ,OAAI,EAAQ4H,QACRvH,EAAKF,KAAKC,kBAAV,UAA+BhC,EAA/B,eAAmD4B,EAAO4H,OAR3C,wBAWRlI,EAAoBW,EAAD,OAAW5G,EAAYM,SAAY,CAACiG,OAAAA,KAX/C,eAWvBA,EAXuB,0BAYhB,EAAAM,EAAAA,uBAAsBzB,EAAemB,IAZrB,4DAchB,EAAAO,EAAAA,qBAAoB1B,EAApB,OAdgB,2DAkBnC,OAAO,kBAAMiB,GAAN,CACV,GAAE,CACCnB,EACAe,EACAoO,GAEP,8BAEc9O,wHC3Df,cACA,UACA,UACA,UACA,kHAGO,IAAMY,EAAkB,SAAC,GAA0C,QAAzCxB,EAAyC,EAAzCA,KAAyC,IAAnCmY,KAAAA,OAAmC,aAArB1W,QAAAA,OAAqB,SAChEiiB,GAAW,EAAAnZ,EAAAA,aAAYvK,GAC7B,GAAmE,EAAAW,EAAAA,+BAA5DuO,EAAP,EAAOA,OAAQhR,EAAf,EAAeA,OAAQsH,EAAvB,EAAuBA,oBAAqBgL,EAA5C,EAA4CA,oBACrC/K,EAAavH,EAAbuH,UACP,MAAgC,EAAAvK,EAAAA,UAAS,QAAzC,g0BAAOoC,EAAP,KAAiBqmB,EAAjB,KAsFA,OArFA,EAAA3nB,EAAAA,YAAU,WACN,IAAKwU,GAAuB/O,IAAYyN,IAAW5R,EAC/C,KACI,EAAA+U,EAAAA,QAAO,CACHxM,QAAS,EACTqJ,OAAAA,IACD,SAACpV,EAAOwD,GACFxD,EAGD2L,EAAU3L,GAFV6pB,EAAYrmB,EAInB,GAGJ,CAFC,MAAOxD,GACLgC,QAAQC,IAAIjC,EACf,CAER,GAAE,CACCwD,EACAkT,EACA/O,EACAyN,EACAzJ,KAGJ,EAAAzJ,EAAAA,YAAU,WACN,IAAKmc,GAAQ7a,EAAU,CACnB,IAAMoE,EAAc8D,GAAoB,SAACvD,EAAD,GAAiD,IAAzCL,EAAyC,EAAzCA,OAAQ5B,EAAiC,EAAjCA,KAAM/E,EAA2B,EAA3BA,aAAcgF,EAAa,EAAbA,QACxE,OAAO,IAAIwK,SAAQ,SAACC,EAASC,GAAW,kBAC7B1O,EAAkChB,EAAlCgB,cAAeC,EAAmBjB,EAAnBiB,gBACf6H,EAAuC9D,EAAvC8D,eAAgBH,EAAuB3D,EAAvB2D,UAAWC,EAAY5D,EAAZ4D,SAClCvG,EAASsmB,WAAW,CAChBxf,QAAQ,EAAAC,EAAAA,uBAAsBT,EAAUU,MAAOT,EAASU,WACxDiF,MAAO5H,EAAO4H,MACdqa,IAAKjiB,SAAF,UAAEA,EAAQqQ,eAAV,aAAE,EAAiB4R,IACtBnhB,MAAOqB,EAAerB,OAAS,GAC/BohB,mBAAoBJ,EAAS,sBAC7BK,mBAAmB,EACnBhgB,eAAgB,CACZoF,UAAWpF,EAAe3H,WAC1B4nB,QAASjgB,EAAezH,UACxBY,YAAa6G,EAAe5G,MAC5BZ,cAAa,UAAEwH,EAAevH,iBAAjB,aAAE,EAA0BynB,MAAM,EAAG,IAClDxnB,gBAAe,UAAEsH,EAAerH,iBAAjB,aAAE,EAA0BunB,MAAM,EAAG,IACpDtnB,SAAQ,UAAEoH,EAAenH,YAAjB,aAAE,EAAqBqnB,MAAM,EAAG,IACxCpnB,OAAQkH,EAAenK,MACvBkD,WAAYiH,EAAehH,SAC3BC,kBAAmB+G,EAAe9G,SAEtCinB,sBAAuBjoB,EAAgB,CACnCkoB,kBAAmBjoB,EAAgBE,WACnCgoB,gBAAiBloB,EAAgBI,UACjCJ,gBAAiB,CACbK,cAAa,UAAEL,EAAgBM,iBAAlB,aAAE,EAA2BynB,MAAM,EAAG,IACnDxnB,gBAAe,UAAEP,EAAgBQ,iBAAlB,aAAE,EAA2BunB,MAAM,EAAG,IACrDtnB,SAAQ,UAAET,EAAgBU,YAAlB,aAAE,EAAsBqnB,MAAM,EAAG,IACzCpnB,OAAQX,EAAgBtC,MACxBkD,WAAYZ,EAAgBa,SAC5BC,kBAAmBd,EAAgBe,SAEvConB,UAAWX,EAAS,cACpB,CACAW,UAAWX,EAAS,cAExBY,iBAAkB,SAACriB,EAAMsiB,GAAP,OAAgBA,GAAhB,IACnB,SAACzqB,EAAOkY,GAAY,MACflY,EACA6Q,EAAO7Q,GACsC,wBAAtCkY,SAAA,UAAAA,EAASwS,wBAAT,eAA2Bzb,SAElCzL,EAASmnB,WAAWpnB,MAAK,kBAAMsmB,EAAY,KAAlB,IACzBhZ,EAAO,CACHlM,SAAS,EAAA0U,EAAAA,IAAG,+BAAgC,2BAGhDlR,EAAKF,KAAKC,kBAAV,UAA+BhC,EAA/B,eAAmDgS,EAAQxI,MAC3DkB,EAAQzI,GAEf,GACJ,GACJ,GAAE,IACH,OAAO,kBAAMP,GAAN,CACV,CACJ,GAAE,CAACyW,EAAM7a,IAEHA,CACV,4BAEckE,qFCpGf,oLACA,0RCDA,wHAEO,IAAMkjB,EAAgB,SAAC,GASpB,QAPFC,EAOE,EAPFA,uBACA9gB,EAME,EANFA,SACA4B,EAKE,EALFA,UACA2O,EAIE,EAJFA,YACAwQ,EAGE,EAHFA,OACAC,EAEE,EAFFA,KACAC,EACE,EADFA,YAEJ,MAA4B,EAAA5pB,EAAAA,UAAS,QAArC,g0BAAO6pB,EAAP,KAAeC,EAAf,KACM3pB,GAAc,EAAAC,EAAAA,QAAO,CAAC,GA+B5B,OA9BA,EAAAU,EAAAA,YAAU,WACNX,EAAYM,QAAQ8J,UAAYA,CACnC,GAAE,CACCA,KAEJ,EAAAzJ,EAAAA,YAAU,WACN,GAAI2oB,EACA,GAAIjZ,OAAOqZ,OACPC,EAAUtZ,OAAOqZ,YACd,SAEG7W,EAAO,CACT,sBAFJkG,EAAc6Q,KAAKC,MAAMxZ,OAAOyZ,KAAK/Q,WAEjC,iBAAa,EAAa2Q,cAA1B,aAAa,EAAqBK,SAClCC,QAAQ,EACRT,OAAiB,UAATC,EAAmB,WAAaD,EACxC/gB,SAAAA,EACAyhB,MAAgB,UAATT,EACPjmB,WAAY,mBACZ2mB,eAAgB,CACZ,yBAA0BT,IAGlCH,EAAuBa,cAActX,GAAM7Q,MAAK,WAC5C2nB,EAAUtZ,OAAOqZ,OACpB,IAAEve,OAAM,SAAA1M,GACLuB,EAAYM,QAAQ8J,UAAU3L,EACjC,GACJ,CAER,GAAE,CAAC6qB,IACGI,CACV,0BAEcL,uHC/Cf,cACA,UACA,UAEA,GADA,QACA,SAUA,UACA,UACA,k7CAEO,IAAMe,EAAmB,SAAC,GAYvB,IAVF/hB,EAUE,EAVFA,QACA+B,EASE,EATFA,UACAsf,EAQE,EARFA,OACAJ,EAOE,EAPFA,uBACA1kB,EAME,EANFA,QACAhF,EAKE,EALFA,aACAiF,EAIE,EAJFA,kBACAC,EAGE,EAHFA,aACA5F,EAEE,EAFFA,QACAO,EACE,EADFA,QAEG8I,EAAuB3D,EAAvB2D,UAAWC,EAAY5D,EAAZ4D,SACX5H,EAAiBhB,EAAjBgB,cACAyE,EAAiCP,EAAjCO,eAAgBD,EAAiBN,EAAjBM,cACjBpF,GAAc,EAAAC,EAAAA,QAAO,CAAC2E,QAAAA,EAAShF,aAAAA,IAC/ByqB,GAAc,EAAApqB,EAAAA,QAAO,CAAC,GACrB+J,GAAsB,EAAAC,EAAAA,yBAAwB,CAACrF,QAAAA,EAAShF,aAAAA,EAAciF,kBAAAA,IAAtEmF,mBACP,GAA+D,EAAA1E,EAAAA,+BAAxD4E,EAAP,EAAOA,sBAAuBC,EAA9B,EAA8BA,oBAAqBwJ,EAAnD,EAAmDA,SAC5CxO,EAAkBN,EAAlBM,gBAEP,EAAAxE,EAAAA,YAAU,WACN,IAAM0F,EAAclB,GAAe,WAC/B,OAAIklB,EAAY/pB,QAAQgqB,kBACb,CACHrnB,KAAMmC,EAAcgjB,MACpBhlB,SAAS,EAAA0U,EAAAA,IAAG,4EAA6E,uBACzFlS,eAAgBP,EAAeQ,kBAGhC,IACV,IACD,OAAO,kBAAMQ,GAAN,CACV,GAAE,CACClB,EACAC,EACAC,IAGJ,IAAM2K,GAAiB,EAAA9P,EAAAA,cAAY,SAAC+C,GAChC,IAAMsnB,EAAYliB,EAAQ,eAC1B,OAAQpF,GACJ,KAAKymB,EAAOc,QAAQC,OAChB,OAAOF,EACX,KAAKb,EAAOc,QAAQE,SAChB,OAAO,EAAP,KAAWH,GAAcliB,EAAQ,oBACrC,QACI,OAAOkiB,EAGlB,GAAE,CAACb,IAEEiB,EAA8B,SAAChiB,GACjC,IAAI2I,EAAU,GAkBd,OAjBA3I,EAAcuI,SAAQ,SAACK,EAAiBC,GACpC,IAAIC,EAAQF,EAAgBG,eAAeC,KAAI,SAAAC,GAC3C,IAAIC,EAAM1P,SAAS2P,cAAc,YAEjC,OADAD,EAAIE,UAAYH,EAAKjN,KACd,CACHyC,IAAI,EAAA4K,EAAAA,qBAAoBR,EAAKI,EAAKK,SAClCnJ,MAAO+I,EAAI5I,MACXhG,KAAM,WACNse,SAAU3P,EAAK2P,SACfxY,OAAQ,CACJE,OAAO,EAAAD,EAAAA,uBAAsB4I,EAAKO,MAAOP,EAAKQ,qBAC9CiP,cAAezP,EAAKyP,eAG/B,IACD/P,EAAU,GAAH,SAAOA,GAAP,EAAmBG,GAC7B,IACMH,CACV,GAED,EAAA3Q,EAAAA,YAAU,WACNX,EAAYM,QAAU,CAACsE,QAAAA,EAAShF,aAAAA,EAAcV,QAAAA,EAASO,QAAAA,EAASkU,SAAAA,EAAUvJ,UAAAA,EAC7E,GAAE,CACCxF,EACAhF,EACAV,KAGJ,EAAAyB,EAAAA,YAAU,WACN,IAAM0F,EAAc8D,GAAoB,SAACvD,EAAD,GAAmC,IAA3BhC,EAA2B,EAA3BA,QAAShF,EAAkB,EAAlBA,aAarD,OAZAgH,EAAKF,KAAKC,kBAAV,UAA+B0B,EAAQ,QAAvC,eAA8DgiB,EAAY/pB,QAAQ6N,MAClFvH,EAAKF,KAAKgC,eAAV,SACO4F,EAAAA,yBACA1J,EAAQ8D,gBACR2hB,EAAY/pB,QAAQoI,gBAE3B9B,EAAKF,KAAK7F,gBAAV,SACO0N,EAAAA,0BACA3O,EAAaiB,iBACbwpB,EAAY/pB,QAAQO,iBAGpB+F,CACV,GAAE,GACH,OAAO,kBAAMP,GAAN,CACV,GAAE,CAAC8D,IAEJ,IAAMygB,GAAmB,EAAA1qB,EAAAA,cAAY,SAACuH,EAASojB,EAAwBC,EAAmBzb,GAArD,OAAiE,SAAC7I,EAAD,GAAsC,IAA3B5B,EAA2B,EAA3BA,QAAShF,EAAkB,EAAlBA,aAC/G4I,EAAuC5D,EAAvC4D,SAAUD,EAA6B3D,EAA7B2D,UAAWE,EAAkB7D,EAAlB6D,eACrBE,EAAiB/I,EAAjB+I,cACP,GAAInC,EAAS,CAET,IAAMukB,EAAQ,CAAC,CACX,GAAM,UACN,KAAQ,kDACR,MAAS,CACL,cAAiBviB,EAASc,KAC1B,OAAS,EAAAN,EAAAA,uBAAsBT,EAAUU,MAAO,GAChD,UAAa,CACT,WAAc,CACV,cAAiBT,EAASc,KAC1B,OAAS,EAAAN,EAAAA,wBAAsB,EAAAgiB,EAAAA,kBAAiB,cAAeviB,GAAiBD,EAASU,YACrF,EAAAF,EAAAA,wBAAsB,EAAAgiB,EAAAA,kBAAiB,aAAcviB,GAAiBD,EAASU,YAEvF,SAAY,CACR,cAAiBV,EAASc,KAC1B,OAAS,EAAAN,EAAAA,wBAAsB,EAAAgiB,EAAAA,kBAAiB,iBAAkBviB,GAAiBD,EAASU,YAEhG,UAAa,CACT,cAAiBV,EAASc,KAC1B,OAAS,EAAAN,EAAAA,wBAAsB,EAAAgiB,EAAAA,kBAAiB,YAAaviB,GAAiBD,EAASU,YAE3F,kBAAqB,CACjB,cAAiBV,EAASc,KAC1B,OAAS,EAAAN,EAAAA,wBAAsB,EAAAgiB,EAAAA,kBAAiB,iBAAkBviB,GAAiBD,EAASU,eAIzG,CACC,GAAO2hB,EAAiC,UAAR,MAChC,KAAQ,4DACR,MAASF,EAA4BhiB,KAEzC,OAAOlB,EAAQwjB,MAAMF,MAAMA,GAAO/oB,MAAK,WACnCqN,IACA5H,EAAQ4H,SACX,GACJ,CAEG,OADAA,IACO5H,EAAQ6H,QAEtB,CA5CoC,GA4ClC,IAEGgC,GAAU,EAAAhJ,EAAAA,UAAQ,WACpB,GAAIohB,GAAUJ,EAAwB,CAClC,IAAMhY,EAAU,GACV4Z,EAAU,CAACxB,EAAOc,QAAQC,QAC5BpiB,EAAQ,gBACR6iB,EAAQ7Z,KAAKqY,EAAOc,QAAQE,UAEhC,IAAK,IAAL,MAA0BQ,EAA1B,eAAmC,CAA9B,IAAIC,EAAa,KACZC,EAAS,CACXD,cAAAA,EACAtb,MAAOG,EAAemb,GACtBlO,QAAS,SAACxe,GAAD,OAAWuB,EAAYM,QAAQ8J,UAAU3L,EAAzC,EACTS,QAAS,WACLc,EAAYM,QAAQpB,SACvB,EACDmsB,UAAW,SAACzkB,EAAMa,GACd,OAAO6hB,EAAuBgC,gBAAgB1kB,GAAM5E,MAAK,SAAAxB,GAAY,oBAC1DkI,EAAkB1I,EAAYM,QAAQsE,QAAtC8D,eACA9H,EAAiBZ,EAAYM,QAAQV,aAArCgB,cAGP,GADAypB,EAAY/pB,QAAU,CAAC6N,MAAO3N,EAAS2N,MAAOzF,eAAgB,CAAC,GAC3DlI,SAAJ,UAAIA,EAAUoW,eAAd,OAAI,EAAmBlO,eAAgB,CACnC,IAAM4C,EAAU9K,EAASoW,QAAQlO,eACjC2hB,EAAY/pB,QAAQoI,eAAiB,CACjCvH,UAAWmK,EAAQigB,MACnBlqB,UAAWiK,EAAQkgB,MACnBjqB,KAAM+J,EAAQ/J,KACdhD,MAAO+M,EAAQ/M,MACfmD,SAAU4J,EAAQ7J,WAClBG,QAAS0J,EAAQ/B,YAExB,CACD,KAAK,EAAA8E,EAAAA,SAAQ7N,SAAR,UAAQA,EAAUoW,eAAlB,aAAQ,EAAmB/V,iBAAkB,OACvCA,EAAmBL,EAASoW,QAA5B/V,gBACP,MAAgC,EAAAigB,EAAAA,iBAAgBjgB,EAAgB4qB,iBAAhE,qiBAAO1qB,EAAP,KAAmBE,EAAnB,KACAopB,EAAY/pB,QAAQO,gBAAkB,CAClCE,WAAAA,EACAE,UAAAA,EACAE,UAAWN,EAAgB0qB,OAAS,GACpClqB,UAAWR,EAAgB2qB,OAAS,GACpCjqB,KAAMV,EAAgBU,MAAQ,GAC9BhD,MAAOsC,EAAgBtC,OAAS,GAChCmD,SAAUb,EAAgBY,YAAc,GACxCG,QAASf,EAAgB0I,aAAe,KAExC,EAAA8E,EAAAA,SAAQgc,EAAY/pB,QAAQoI,kBAC5B2hB,EAAY/pB,QAAQoI,eAAiB2hB,EAAY/pB,QAAQO,iBAE7D,UAAIL,EAASoW,eAAb,OAAI,EAAkB9U,QAClBuoB,EAAY/pB,QAAQO,gBAAgBiB,MAAQtB,EAASoW,QAAQ9U,MAEpE,CACD,UAAItB,EAASoW,eAAb,OAAI,EAAkB9U,QAClBuoB,EAAY/pB,QAAQoI,eAAe5G,MAAQtB,EAASoW,QAAQ9U,OAEhE,UAAItB,EAASoW,eAAb,OAAI,EAAkBvP,QAClBgjB,EAAY/pB,QAAQoI,eAAerB,MAAQ7G,EAASoW,QAAQvP,OAEhE,UAAI7G,EAASoW,eAAb,OAAI,EAAkB9V,YAClBupB,EAAY/pB,QAAQoI,eAAe3H,WAAaP,EAASoW,QAAQ9V,WAErE,UAAIN,EAASoW,eAAb,OAAI,EAAkB5V,WAClBqpB,EAAY/pB,QAAQoI,eAAezH,UAAYT,EAASoW,QAAQ5V,UAE/DqpB,EAAY/pB,QAAQoI,eAAevH,WAAcuH,EAAevH,YACjEkpB,EAAY/pB,QAAQgqB,mBAAoB,IAExC,EAAAoB,EAAAA,6BAA8B9qB,EAC9BZ,EAAYM,QAAQ8J,WAAU,EAAA0N,EAAAA,IAAG,mFAAoF,uBAAwB,QAE7I5N,EAAsB1J,EAAS2N,MAEtC,GACJ,EACDwd,YAAa,WACT,OAAOrC,EAAuBsC,cAAc,CACxCpC,MAAM,EAAAkC,EAAAA,4BAA6B,QAAU,WAC7CnC,OAAQlhB,EAAQ,UAChBG,SAAUA,EAASc,KACnB0B,YAAa3C,EAAQ,eACrBU,QAAQ,EAAAC,EAAAA,uBAAsBT,EAAUU,MAAOT,EAASU,WACxD2iB,sBAAuBjrB,EACvBkrB,wBAAyBlrB,IAC1BoB,MAAK,SAAAoF,GACJ,OAAOA,CACV,IAAE+D,OAAM,SAAA1M,GACLgC,QAAQC,IAAIjC,EACf,GACJ,EACDud,SAAU,WACNhc,EAAYM,QAAQb,SACvB,IAED,EAAAisB,EAAAA,8BACAN,EAAOW,uBAAyBX,EAAOO,mBAC/BP,EAAOO,aAGf/qB,IAAkBwqB,EAAO9U,eAAe,4BACxC8U,EAAOR,iBAAmB,SAAChkB,EAAMa,GAC7B,IAAyB6D,EAAqC1E,EAAvDwF,iBAA2B4f,EAA4BplB,EAA5BolB,yBAC5BnB,EAAyBmB,aAAH,EAAGA,EAA0B5kB,GACnDxH,EAAeI,EAAYM,QAAQV,aAClCiB,EAAmBjB,EAAnBiB,gBACAU,EAAkCV,EAAlCU,KAAMhD,EAA4BsC,EAA5BtC,MAAOmD,EAAqBb,EAArBa,SAAUE,EAAWf,EAAXe,QACxBsgB,GAAmB,EAAA0B,EAAAA,6BAA4B5jB,EAAYM,QAAQV,aAAa+I,eAChFuD,EAAa,CACf3K,KAAM+J,EAAQ/J,MAAQ,GACtBhD,MAAO+M,EAAQ/M,OAAS,GACxBmD,SAAU4J,EAAQ2gB,aAAe,GACjCrqB,QAAS0J,EAAQ4gB,cAAgB,IAE/BC,EAAkD,MAA1BtB,GAAkCA,GAA0B3I,EAIpF4I,GAHiB,EAAAsB,EAAAA,SAAQ,CAC3B7qB,KAAAA,EAAMhD,MAAAA,EAAOmD,SAAAA,EAAUE,QAAAA,GACxBsK,IACyCigB,EAK5C,OAJItB,GACAjrB,EAAaoN,iBAAb,MAAApN,EAAY,GAAqB,EAAA0N,EAAAA,+BAA8Bud,KAEnEjrB,EAAaiN,mBAAb,OAAoChM,GAAoBqL,IACjD,IAAIkD,SAAQ,SAAAC,GACfrF,EAAmB4gB,EAAiBnjB,EAASukB,aAAV,EAAUA,EAA0B5kB,GAAI0jB,EAAmBzb,GAAUyb,EAC3G,GACJ,GAEQpB,EAAO2C,QAAQjB,GACjBkB,cACPhb,EAAQD,KAAK+Z,EAEpB,CACD,OAAO9Z,CACV,CACJ,GAAE,CACCoY,EACAJ,EACA1oB,EACAgqB,EACA5gB,EACAE,IAEJ,OAAOoH,CACV,6BAEc8Y,oDCtTf,UACA,UACA,UACA,UACA,UACA,UACA,UACA,QACA,UACA,UACA,4sCAEA,IAAM/hB,GAAU,EAAA6G,EAAAA,aAAY,sBA6DvB,EAAAe,EAAAA,eAAgB5H,EAAQ,wBAA2B,EAAA6H,EAAAA,mBAAoB7H,EAAQ,6BAChF,EAAA8H,EAAAA,8BAA6B,CACzBxL,KAAM0D,EAAQ,QACd+H,eAAgB,WACZ,OAAO,CACV,EACDlM,QAAS,gBAAC,EAAAD,cAAD,CAAeC,QAjER,SAAC,GAA+E,IAA9EU,EAA8E,EAA9EA,QAAShF,EAAqE,EAArEA,aAAciF,EAAuD,EAAvDA,kBAAmBC,EAAoC,EAApCA,aAAc5F,EAAsB,EAAtBA,QAASO,EAAa,EAAbA,QAChF+I,EAAY5D,EAAZ4D,SACA3F,GAAU,EAAAyC,EAAAA,+BAAVzC,OACAuH,EAAavH,EAAbuH,UACP,KAA4D,EAAAvK,EAAAA,UAAS,MAArE,GAAOypB,EAAP,KAA+BiD,EAA/B,KACA,KAA4C,EAAA1sB,EAAAA,WAAS,GAArD,GAAO2sB,EAAP,KAAuBC,EAAvB,KACMC,GAAe,EAAAzsB,EAAAA,WACrB,EAAAklB,EAAAA,2BAA0B,CAAC3P,WAAY,MACvC,IAAMkU,GAAS,EAAAL,EAAAA,eAAc,CACzBC,uBAAAA,EACA9gB,SAAUA,EAASc,KACnByP,aAAa,EAAAtJ,EAAAA,kBACbrF,UAAAA,EACAmf,OAAQlhB,EAAQ,UAChBmhB,MAAM,EAAAkC,EAAAA,4BAA6B,QAAU,WAC7CjC,YAAaphB,EAAQ,iBAEnBiJ,GAAU,EAAA8Y,EAAAA,kBAAiB,CAC7B/hB,QAAAA,EACA+B,UAAAA,EACAsf,OAAAA,EACAJ,uBAAAA,EACA1kB,QAAAA,EACAhF,aAAAA,EACAiF,kBAAAA,EACAC,aAAAA,EACA5F,QAAAA,EACAO,QAAAA,KAEJ,EAAAkB,EAAAA,YAAU,YACN,EAAAgsB,EAAAA,QAAqB,CACjBnd,eAAe,EAAAC,EAAAA,kBACfmd,mBAAmB,EAAAC,EAAAA,oBAAmBrkB,EAASc,QAChDtH,MAAK,SAAAC,GACJsqB,EAA0BtqB,EAC7B,IAAEkJ,OAAM,SAAA1M,GACL2L,EAAU3L,EACb,GACJ,GAAE,KAEH,EAAAkC,EAAAA,YAAU,WACF+oB,IACAA,EAAO2C,QAAQS,OAAO,QAAS,CAACC,MAAAA,EAAOC,SAAAA,WACvCN,EAAapsB,QAAUopB,EAAO2C,QAAQS,OAAO,QAAS,CAACC,MAAAA,EAAOC,SAAAA,WAC9DP,GAAkB,GAEzB,GAAE,CAAC/C,IACJ,IAAMuD,EAAeP,EAAapsB,QAC5B4sB,EAASV,GAAkBlb,EAAUA,EAAQK,KAAI,SAAAyZ,GACnD,OAAO,gBAAC6B,EAAD,GAAc/pB,IAAKkoB,EAAOD,eAAmBC,GACvD,IAAI,KACL,OACI,iCACKvoB,aAAA,EAAAA,EAAQA,SAAU,gBAAC,EAAAD,OAAD,CAAQC,OAAQA,EAAOA,OAAQC,SAAUD,EAAO0R,eAClE2Y,EAGZ,EAS+B5pB,MAAO+E,EAAQ,SACflE,YAAakE,EAAQ,eACrB1D,KAAM0D,EAAQ,QACd5E,KAAM4E,EAAQ,QACdA,QAASA,EACTrD,WAAW,EACXC,qBAAsB,CAACykB,QAAQ,KACvDnZ,KAAM,gBAAC,UAAD,CAAelR,IAAKgJ,EAAQ,UAAU5E,OAC5C+M,SAAU,CACN0K,eAAgB7S,EAAQ,YAAY+I,SAAS,gBAC7C+J,gBAAgB,EAChB1K,SAAUpI,EAAQ,eAK9B,IAAM8kB,EAAqB,SAAC,GAAgC,IAA/BC,EAA+B,EAA/BA,KAClBC,GADiD,EAAzBhR,WAAyB,EAAbsK,QACtByG,EAAdC,YACe7kB,EAAyB6kB,EAAxChM,cAAyBiM,EAAeD,EAAfC,YAChC,KAA4C,EAAAztB,EAAAA,YAA5C,GAAO0tB,EAAP,KAAuBC,EAAvB,KACMC,EAAaplB,EAAQ,yBACrBqlB,EAAcrlB,EAAQ,uBAAyBolB,EAAWrc,SAAS5I,MAAc,EAAAkjB,EAAAA,4BACjFrnB,GAAY,EAAApE,EAAAA,QAAO,MACzB,IAAKytB,EACD,OAAO,MAEX,EAAA/sB,EAAAA,YAAU,YACN,EAAAgsB,EAAAA,QAAqB,CACjBnd,eAAe,EAAAC,EAAAA,kBACfmd,mBAAmB,EAAAC,EAAAA,oBAAmBrkB,KACvCxG,MAAK,SAACC,GAAD,OAAcurB,EAAkBvrB,EAAhC,IAA2CkJ,OAAM,WACxD,GACJ,GAAE,IACH,IAAMue,GAAS,EAAAL,EAAAA,eAAc,CACzBC,uBAAwBiE,EACxB/kB,SAAAA,EACA4B,UAAW,KACX2O,aAAa,EAAAtJ,EAAAA,kBACb8Z,OAAQlhB,EAAQ,UAChBmhB,KAAM,WACNC,YAAaphB,EAAQ,iBAoBzB,OAjBA,EAAA1H,EAAAA,YAAU,WACF+oB,GACAA,EAAOiE,SAAS,CACZ5kB,OAAQukB,EAAc,KAAH,IAAI,GAAMD,EAAWjb,qBACxC5J,SAAAA,EACAolB,UAAW,WACX/d,MAAO,CACHge,OAAQ,OACRzuB,KAAM,CACF6D,KAAM,UACN6qB,SAAU,QAEd3uB,KAAM,CAAC4uB,MAAO1lB,EAAQ,wBAE3BnG,OAAOmC,EAAU/D,QAE3B,GAAE,CAACopB,EAAQ4D,IAER,gBAAC,EAAAU,cAAD,KACI,uBAAKnvB,UAAU,mCACX,uBAAK2F,IAAKH,EAAWxF,UAAU,0BAI9C,GAWD,EAAAovB,EAAAA,gBAAe,eAAgB,CAC3B/rB,OAVW,WACX,OACI,gBAAC,EAAAgsB,sBAAD,KACI,gBAACf,EAAD,MAGX,EAKGgB,MAAO,wHChKI,YAA8B,IAAN9uB,EAAM,EAANA,IACnC,OACI,uBACIR,UAAU,sBACVgR,MAAO,CACHiB,OAAQ,OACRJ,UAAW,OACXC,gBAAiB,UACjBC,aAAc,MACd4I,QAAS,OACT4U,WAAY,SACZ3U,eAAgB,WAEpB,uBACIpa,IAAKA,EACLwQ,MAAO,CACHgB,MAAO,OACPC,OAAQ,OACRC,UAAW,aAI9B,u2BCtBD,gBACA,0CACA,UACA,oCAFA,8hGAAAzR,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,goFAIA,IAAM+uB,GAAkB,EAAAzU,EAAAA,YAAW,mBAE7B0U,GAAgB,EAAA1U,EAAAA,YAAW,uBAI3B2U,EAAwB,gCAEH,SAAC5pB,GAExB,OADAA,EAAO,GAAH,OAAMA,EAAN,SACG,SAACzB,GACJ,OAAIA,GACO,EAAA0W,EAAAA,YAAWjV,GAAMzB,IAErB,EAAA0W,EAAAA,YAAWjV,EACrB,CACJ,mBAE6B,kBAAM0pB,EAAgBtV,WAAtB,uBAEI,SAACvQ,GAAD,aAAc6lB,SAAA,UAAAA,EAAiBG,wBAAjB,SAAoChmB,GAAY6lB,EAAgBG,iBAAiBhmB,GAAY,IAA3G,EAE3B,IAAMuM,EAAa,IAAI3F,SAAQ,SAACC,EAASC,IAC5C,EAAAmf,EAAAA,QAAa,CACTjf,cAAe6e,EAAgBtV,cAChC,SAACkB,EAAKlD,GACDkD,EACA3K,EAAO2K,GAEP5K,EAAQ0H,EAEf,GACJ,oCAE6B,WAC1B,OAAO,IAAI3H,SAAQ,SAACC,EAASC,GACzByF,EAAW/S,MAAK,kBAAMqN,GAAQ,EAAd,IAAqBlE,OAAM,SAAA1M,GACvCgC,QAAQC,IAAI,yBAA0BjC,GACtC4Q,EAAQ,CAAC5Q,MAAAA,GACZ,GACJ,GACJ,0BAEoC,SAAC2G,GAA6B,IAAdwB,EAAc,uDAAP,CAAC,EACzD,OAAO,EAAP,CAAQ3D,KAAMmC,EAAcspB,SAAY9nB,EAC3C,wBAEkC,SAACxB,EAAe3G,GAC/C,MAAO,CAACwE,KAAMmC,EAAcgjB,MAAOhlB,QAASyjB,EAAgBpoB,GAC/D,EAEM,IAAMooB,EAAkB,SAACpoB,GAC5B,IAAIkwB,EAAMlwB,aAAH,EAAGA,EAAO2E,QAQjB,MAPoB,iBAAT3E,EACPkwB,EAAMlwB,EAEFA,EAAM6K,MAAQglB,EAAc7vB,EAAM6K,QAClCqlB,EAAML,EAAc7vB,EAAM6K,OAG3BqlB,CACV,8CAEoC,SAAC1lB,EAAOkY,GACzC,OAAOlY,EAAQ,KAAH,IAAG,GAAMkY,EACxB,MAEY1a,EAAAA,SAAAA,mcACT,WAAYhI,GAAO,mHACf,cAAMA,EAAM2E,UACP3E,MAAQA,EAFE,CAGlB,iEAJQgI,GAAuByR,2BAOpC,IAAM0W,EAAc,SAAC1rB,GAAD,gBAtEC,gBAsED,OAA2BA,EAA3B,iBAEQ,SAACA,EAAK+F,GAC9B,IAAM4lB,EAAMC,KAAKC,OAAM,IAAIC,MAAOC,UAAY,KAAS,IACnD,mBAAoB5e,QACpB6e,eAAeC,QAAQP,EAAY1rB,GAAM0mB,KAAKwF,UAAU,CAACnmB,MAAAA,EAAO4lB,IAAAA,IAEvE,iBAE2B,SAAC3rB,GAA6B,IAAxBmsB,EAAwB,uDAAT,KAC7C,GAAI,mBAAoBhf,OACpB,IACI,IAAMc,EAAOyY,KAAKC,MAAMqF,eAAeI,QAAQV,EAAY1rB,KAC3D,GAAIiO,EAAM,CACN,IAAOlI,EAAckI,EAAdlI,MAAO4lB,EAAO1d,EAAP0d,IACd,KAAIC,KAAKC,OAAM,IAAIC,MAAOC,UAAY,KAAQJ,GAG1C,OAAO5lB,EAFPsmB,EAAgBX,EAAY1rB,GAInC,CAEJ,CADC,MAAO+W,GACR,CAEL,OAAOoV,CACV,EAEM,IAAME,EAAkB,SAACrsB,GACxB,mBAAoBmN,QACpB6e,eAAeM,WAAWZ,EAAY1rB,GAE7C,oCAE0B,SAACiP,EAAO9I,GAAiB,MAChD,GAAyE,EAAAomB,EAAAA,aAAYpmB,GAA9EqmB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,OAAQC,EAAvB,EAAuBA,iBAAkB1mB,EAAzC,EAAyCA,UAAW2mB,EAApD,EAAoDA,kBACpD,GAAa,IAAT1d,QAAyB2d,IAAV3d,EACf,OAAOA,EAGXA,EAAyB,iBAAVA,EAAqB4d,SAAS5d,EAAO,IAAMA,EAG1D,IAAI6d,EAAa,GACXC,GAFN9d,GADAA,GAAgB,KAAH,IAAG,GAAMjJ,IACRpK,WAAWoxB,QAAQ,IAAKN,IAElBvY,QAAQuY,GAC5B,GAAIK,EAAQ,EACJ/mB,EAAY,IACZiJ,GAAS,GAAJ,OAAOyd,GAAP,OAA0B,IAAI/rB,MAAMqF,EAAY,GAAGoP,KAAK,WAE9D,CACH,IAAM0X,EAAa7d,EAAMge,OAAOF,EAAQ,GACpCD,EAAWxiB,OAAStE,IACpBiJ,GAAS,IAAItO,MAAMqF,EAAY8mB,EAAWxiB,OAAS,GAAG8K,KAAK,KAElE,CAED,IAAM8X,EAAQje,EAAMie,MAAM,IAAIC,OAAJ,kBAAsBT,EAAtB,YAO1B,OANIQ,IACKje,EAAwBie,EAA3B,GAAaJ,EAAcI,EAAjB,IAEhBje,EAAQA,EAAM+d,QAAQ,IAAIG,OAAJ,0BAAsC,KAApD,UAA6DR,IAE7DH,GADRvd,GAAkB,QAAV,EAAA6d,SAAA,eAAYxiB,QAAS,EAAI2E,EAAQyd,EAAmBI,EAAa7d,GAChDwd,CAE5B,EAEM,IAAM3d,EAAsB,SAACse,EAAWC,GAAZ,gBAA0BD,EAA1B,YAAuCC,EAAvC,0DAEU,SAACnpB,GAC1C,IAAMb,EAASa,EAAGgpB,MAAM7B,GACxB,GAAIhoB,EAAQ,CACR,IAAUiqB,EAAuBjqB,EAA1B,GACP,MAAO,CAD0BA,EAAX,GACRiqB,EACjB,CACD,MAAO,EACV,gCAE0C,SAACvjB,GACxC,IAAK,IAAL,MAAgBkS,OAAOlO,KAAKhE,GAA5B,eAA4C,CAAvC,IAAIuE,EAAG,KACR,OAAOQ,EAAoBR,EAAKvE,EAAcuE,GACjD,CACJ,oBAE8B,SAAC7M,GAG5B,MAAO,CAFWA,EAAK8rB,MAAM,KAAK7H,MAAM,GAAI,GAAGtQ,KAAK,KACnC3T,EAAK8rB,MAAM,KAAKnJ,MAEpC,wBAEkC,SAACoJ,GAChC,IAAIvvB,EAAWE,EAOf,OANIwC,MAAMC,QAAQ4sB,KACdvvB,EAAYuvB,aAAH,EAAGA,EAAQ,GAChBA,EAAMljB,OAAS,IACfnM,EAAYqvB,aAAH,EAAGA,EAAQ,KAGrB,CAACvvB,UAAAA,EAAWE,UAAAA,EACtB,qBAE+B,SAAC6B,EAAKuF,GAAmB,o6BACpCA,GADoC,IACrD,IAAK,EAAL,qBAAiC,KAAxB0I,EAAwB,QAC7B,GAAIA,EAAKjO,MAAQA,EACb,OAAOiO,EAAKlI,KAEnB,CALoD,+BAMrD,OAAO,IACV,qBAE+B,WAC5B,OAAQyiB,GACX,EAEM,IAAMA,EAA2B,kBAA0C,IAApC2C,aAAA,EAAAA,EAAiBsC,gBAAvB,4CAEd,iBAA+B,SAAzBtC,EAAgBuC,IAAtB,mBAEI,iBAA+B,aAAzBvC,EAAgBuC,IAAtB,EAEvB,IAAMriB,EAA2B,CACpC,WAAc,GACd,UAAa,GACb,QAAW,GACX,UAAa,GACb,UAAa,GACb,KAAQ,GACR,MAAS,GACT,SAAY,GACZ,QAAW,GACX,MAAS,iCAGN,IAAMD,EAA0B,EAAH,KAC7BC,GAD6B,IAEhC,MAAS,uDAGsB,SAAC6V,EAAQxd,GACxCA,EAAO,EAAH,KACGA,GADH,IAEAiqB,UAAWjqB,EAAK8U,MAChBC,MAAO/U,EAAKgV,aAGhB,IAAMkV,EAAkB,CAAC,EAGzB3R,OAAOlO,KAAKrK,GAAMsK,SAAQ,SAAAhO,GACtB4tB,EAAgB,IAAD,OAAK5tB,EAAL,MAAe0D,EAAK1D,EACtC,IAGD,IAAIqD,EAAS6d,EAQb,OAPAjF,OAAOlO,KAAK6f,GAAiB5f,SAAQ,SAAA6f,GAEjC,KAAOxqB,EAAO6K,SAAS2f,IACnBxqB,EAASA,EAAO2pB,QAAQa,EAAaD,EAAgBC,GAE5D,IAEMxqB,CACV,EAEM,IAAMD,EAAe,gCAAG,WAAO0qB,GAAP,iGAEJ,EAAAvlB,EAAAA,SAAS,CACxBwlB,KAAM,qCACNvlB,OAAQ,OACR9E,KAAM,CAACoqB,SAAAA,EAAUxmB,QAAS,KALP,cAEnBjE,EAFmB,yBAOhBA,GAPgB,gCASvB9F,QAAQsgB,KAAK,6BAAb,MATuB,uOAAH,iJCjP5B,0gBCAA,cACA,gkGAAAzhB,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,kkBAEO,IAAMojB,EAAwB,SAAC,GAA8B,IAA7BwO,EAA6B,EAA7BA,cAAevd,EAAc,EAAdA,SAC5C0W,GAAc,EAAApqB,EAAAA,QAAO,MAC3B,GAA8F,EAAAqF,EAAAA,+BAAvF6E,EAAP,EAAOA,oBAAqB4J,EAA5B,EAA4BA,mBAAoB7J,EAAhD,EAAgDA,sBAAgCE,EAAhF,EAAuEvH,OAASuH,UAC1E2E,GAAc,EAAA7O,EAAAA,aAAA,YAAY,iGAEpB6T,EAFoB,gBAGpBJ,IAHoB,uCAKCud,EAActjB,WALf,OAKdrH,EALc,OAMpB8jB,EAAY/pB,QAAU,CAAC6N,MAAO5H,EAAO4H,OACrCjE,EAAsB3D,EAAO4H,OAPT,0DAUxB/D,EAAU,EAAD,IAVe,0DAY7B,CACC8mB,EACAvd,EACAI,IAWJ,OARA,EAAApT,EAAAA,YAAU,WACN,IAAM0F,EAAc8D,GAAoB,SAACvD,EAAD,GAAkB,IAAVjC,EAAU,EAAVA,KAE5C,OADAiC,EAAKF,KAAKC,kBAAV,UAA+BhC,EAA/B,eAAmD0lB,EAAY/pB,QAAQ6N,MAChEvH,CACV,GAAE,GACH,OAAO,kBAAMP,GAAN,CACV,GAAE,CAAC8D,IAEG,CAAC4E,YAAAA,EACX,kCAEc2T,iDCnCf,SACA,UACA,UACA,UACA,UAGA,UACA,QACA,oHAEA,IAAMra,GAAU,EAAA6G,EAAAA,aAAY,mBAEtBiiB,EAAY,IAAI/hB,SAAQ,SAACC,EAASC,IACpC,EAAA8hB,EAAAA,QAAY,CACR5hB,eAAe,EAAAC,EAAAA,kBACf4hB,oBAAoB,IACrBrvB,MAAK,SAAAC,GAAQ,OAAIoN,EAAQpN,EAAZ,IAAuBkJ,OAAM,SAAA1M,GAAK,OAAI6Q,EAAO7Q,EAAX,GACrD,IAEK6yB,EAAiB,SAAC,GAAe,QAAd3d,EAAc,EAAdA,SACd9Q,GAAU,EAAAyC,EAAAA,+BAAVzC,OACP,MAA0C,EAAAhD,EAAAA,UAAS,QAAnD,g0BAAOqxB,EAAP,KAAsBK,EAAtB,KACOxiB,GAAe,EAAA2T,EAAAA,uBAAsB,CACxCwO,cAAAA,EACAvd,SAAAA,IAFG5E,YAQP,OAHA,EAAApO,EAAAA,YAAU,WACNwwB,EAAUnvB,MAAK,SAAAC,GAAQ,OAAIsvB,EAAiBtvB,EAArB,IAAgCkJ,OAAM,SAAA1M,GAAK,OAAIoE,EAAOuH,UAAU3L,EAArB,GACrE,GAAE,IAEC,iCACKoE,aAAA,EAAAA,EAAQA,SAAU,gBAAC,EAAAD,OAAD,CAAQC,OAAQA,EAAOA,OAAQC,SAAUD,EAAO0R,eACnE,uBAAK1V,UAAW,+CACZ,0BAAI,EAAAiZ,EAAAA,IAAG,2BAA4B,wBAClCoZ,GAAiB,gBAACM,EAAD,CAAatyB,QAAS6P,EAAa1P,IAAKgJ,EAAQ,iBAIjF,EAEKmpB,EAAc,SAAC,GAAmB,IAAlBtyB,EAAkB,EAAlBA,QAASG,EAAS,EAATA,IAC3B,OACI,0BAAQR,UAAW,oCAAqCK,QAASA,GAC7D,uBAAKG,IAAKA,IAGrB,GAED,EAAA6a,EAAAA,uBAAsB,CAClBvV,KAAM0D,EAAQ,QACdS,MAAO,gBAAC,EAAAzF,mBAAD,CACHC,MAAO+E,EAAQ,SACf7E,cAAe6E,EAAQ,QACvB5E,KAAM4E,EAAQ,UAClB8R,WAAW,EAAArC,EAAAA,IAAG,QAAS,uBACvB2Z,sBAAuBppB,EAAQ,yBAC/B+H,eAAgB,kBAAM,IAAIhB,SAAQ,SAACC,EAASC,GACxC6hB,EAAUnvB,MAAK,SAAAC,GACXoN,EAAQpN,EAASyvB,qBACpB,IAAEvmB,OAAM,SAAA1M,GACL4Q,GAAQ,EACX,GACJ,GANe,EAOhBnL,QAAS,gBAAC,EAAAD,cAAD,CAAeC,QAASotB,EACThuB,MAAO+E,EAAQ,SACflE,YAAakE,EAAQ,eACrB1D,KAAM0D,EAAQ,QACd5E,KAAM4E,EAAQ,QACdA,QAASA,IACjC2S,oBAAqB,gBAAC,EAAAC,mBAAD,CAAoB5S,QAASA,EACT1D,KAAM0D,EAAQ,QACdtC,oBAAqBsC,EAAQ,yBACtEkI,KAAM,gBAAC,EAAAtM,cAAD,CAAeC,QAASotB,EAAgBjpB,QAASA,IACvDmI,SAAU,CACN0K,eAAgB7S,EAAQ,YAAY+I,SAAS,gBAC7C+J,gBAAgB,EAChB1K,SAAUpI,EAAQ,mCC9E1B,OAOC,WACA,aAEA,IAAIspB,EAAS,CAAC,EAAErb,eAGhB,SAAStT,IAGR,IAFA,IAAID,EAAU,GAELzD,EAAI,EAAGA,EAAIsyB,UAAUpkB,OAAQlO,IAAK,CAC1C,IAAIuyB,EAAMD,UAAUtyB,GACpB,GAAKuyB,EAAL,CAEA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3B/uB,EAAQsO,KAAKwgB,QACP,GAAIhuB,MAAMC,QAAQ+tB,IACxB,GAAIA,EAAIrkB,OAAQ,CACf,IAAIukB,EAAQ/uB,EAAWgvB,MAAM,KAAMH,GAC/BE,GACHhvB,EAAQsO,KAAK0gB,EAEf,OACM,GAAgB,WAAZD,EAAsB,CAChC,GAAID,EAAI/yB,WAAaqgB,OAAO8S,UAAUnzB,WAAa+yB,EAAI/yB,SAASA,WAAWsS,SAAS,iBAAkB,CACrGrO,EAAQsO,KAAKwgB,EAAI/yB,YACjB,QACD,CAEA,IAAK,IAAIoE,KAAO2uB,EACXF,EAAOO,KAAKL,EAAK3uB,IAAQ2uB,EAAI3uB,IAChCH,EAAQsO,KAAKnO,EAGhB,CAxBkB,CAyBnB,CAEA,OAAOH,EAAQuV,KAAK,IACrB,CAEqC6Z,EAAOC,SAC3CpvB,EAAWqvB,QAAUrvB,EACrBmvB,EAAOC,QAAUpvB,QAKhB,KAFwB,EAAF,WACtB,OAAOA,CACP,UAFoB,OAEpB,YAIH,CApDA","sources":["webpack://wcBraintree/./packages/blocks/assets/js/components/error-boundary/index.js","webpack://wcBraintree/./packages/blocks/assets/js/components/fastlane-link/index.js","webpack://wcBraintree/./packages/blocks/assets/js/components/fastlane-modal/index.js","webpack://wcBraintree/./packages/blocks/assets/js/components/index.js","webpack://wcBraintree/./packages/blocks/assets/js/components/notice/index.js","webpack://wcBraintree/./packages/blocks/assets/js/components/payment-method-label/index.js","webpack://wcBraintree/./packages/blocks/assets/js/components/payment-method/index.js","webpack://wcBraintree/./packages/blocks/assets/js/components/saved-token-component/index.js","webpack://wcBraintree/./packages/blocks/assets/js/data/checkout/action-types.js","webpack://wcBraintree/./packages/blocks/assets/js/data/checkout/actions.js","webpack://wcBraintree/./packages/blocks/assets/js/data/checkout/constants.js","webpack://wcBraintree/./packages/blocks/assets/js/data/checkout/index.js","webpack://wcBraintree/./packages/blocks/assets/js/data/checkout/reducers.js","webpack://wcBraintree/./packages/blocks/assets/js/data/checkout/selectors.js","webpack://wcBraintree/./packages/blocks/assets/js/data/index.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/applepay/hooks/index.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/applepay/hooks/use-create-payment-request.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/applepay/hooks/use-create-session.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/applepay/index.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/applepay/preview.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/applepay/utils.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/context/action-emitter.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/context/action-reducer.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/context/index.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/context/payment-context.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/credit-card/custom-form/index.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/credit-card/custom-form/registry.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/credit-card/custom-forms/bootstrap/index.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/credit-card/custom-forms/index.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/credit-card/custom-forms/simple/index.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/credit-card/dropin-form/index.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/credit-card/dropin-preview.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/credit-card/hosted-fields/card-cvv.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/credit-card/hosted-fields/card-expiration-date.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/credit-card/hosted-fields/card-number.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/credit-card/hosted-fields/index.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/credit-card/index.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/credit-card/tokenized-card.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/fastlane/checkout-block/block.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/fastlane/checkout-block/frontend.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/fastlane/express-payment-component.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/fastlane/hooks/index.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/fastlane/hooks/use-create-fastlane.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/fastlane/hooks/use-process-fastlane.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/fastlane/index.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/googlepay/helpers.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/googlepay/hooks/index.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/googlepay/hooks/use-create-payments-client.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/googlepay/hooks/use-handle-tokenization.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/googlepay/index.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/googlepay/preview.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/hooks/index.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/hooks/use-breakpoint-width.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/hooks/use-device-data.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/hooks/use-manage-fastlane-payment-token.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/hooks/use-notice-handler.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/hooks/use-payment-events-handler.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/hooks/use-process-fastlane-payment-token.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/hooks/use-process-payment-failure.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/hooks/use-process-payment.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/hooks/use-three-d-secure.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/paypal/hooks/index.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/paypal/hooks/use-load-paypal.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/paypal/hooks/use-paypal-options.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/paypal/index.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/paypal/preview.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/utils.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/venmo/hooks/index.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/venmo/hooks/use-handle-tokenization.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/venmo/index.js","webpack://wcBraintree/./node_modules/classnames/index.js"],"sourcesContent":["import {Component} from '@wordpress/element';\n\nclass ErrorBoundary extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {hasError: false, error: null, errorInfo: null};\n    }\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({\n            hasError: true,\n            error,\n            errorInfo\n        })\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return (\n                <>\n                    {this.state.error &&\n                    <div className='wc-braintree-blocks__error'>{this.state.error.toString()}</div>}\n                    {this.state.errorInfo &&\n                    <div className='wc-braintree-blocks__error'>{this.state.errorInfo.componentStack}</div>}\n                </>\n            )\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","export const FastlaneLink = ({onClick, text, logo}) => {\n    return (\n        <div\n            className=\"fastlane-signup-link-container\"\n            onClick={onClick}>\n            <span>{text}</span>\n            <img className=\"fastlane-signup-img\" src={logo}/>\n        </div>\n    )\n}","import {useEffect, useState, useRef, useCallback} from '@wordpress/element';\nimport classnames from 'classnames';\n\nexport const FastlaneModal = (\n    {\n        i18n,\n        open,\n        onClose,\n        fastlane,\n        onTokenize,\n        shippingData\n    }) => {\n    const [rendered, setRendered] = useState(false);\n    const currentData = useRef({fastlane, shippingData});\n\n    const onClick = useCallback(async (e) => {\n        e.preventDefault();\n        try {\n            const {\n                paymentComponent\n            } = currentData.current;\n\n            const response = await paymentComponent.getPaymentToken();\n\n            // call onTokenize\n            onTokenize(response);\n\n            // close modal\n            onClose(true);\n            setRendered(false);\n        } catch (error) {\n            console.log('Error tokenizing payment method. ', error);\n        }\n    }, []);\n\n    useEffect(() => {\n        currentData.current = {\n            ...currentData.current,\n            fastlane,\n            shippingData\n        };\n    }, [fastlane, shippingData]);\n\n    useEffect(() => {\n        if (open) {\n            const {\n                shippingData\n            } = currentData.current;\n            const {\n                needsShipping,\n                shippingAddress\n            } = shippingData;\n            const props = {\n                ...(needsShipping && {\n                    shippingAddress: {\n                        firstName: shippingAddress.first_name || '',\n                        lastName: shippingAddress.last_name || '',\n                        streetAddress: shippingAddress.address_1 || '',\n                        extendedAddress: shippingAddress.address_2 || '',\n                        locality: shippingAddress.city || '',\n                        region: shippingAddress.state || '',\n                        postalCode: shippingAddress.postcode || '',\n                        countryCodeAlpha2: shippingAddress.country || '',\n                        phoneNumber: shippingAddress.phone || '',\n                    }\n                })\n            }\n            fastlane.FastlanePaymentComponent(props).then(async instance => {\n                currentData.current.paymentComponent = instance;\n                await instance.render('.wc-ppcp-fastlane-modal-body');\n                document.body.classList.add('fastlane-modal-open');\n                setTimeout(() => {\n                    setRendered(true);\n                }, 250);\n            });\n        } else {\n            document.body.classList.remove('fastlane-modal-open');\n        }\n\n        return () => document.body.classList.remove('fastlane-modal-open');\n    }, [open]);\n\n    return (\n        <div className={classnames('wc-ppcp-fastlane-overlay', {'active': rendered})}>\n            <div className=\"wc-ppcp-fastlane-modal\">\n                <div className=\"wc-ppcp-fastlane-modal-body\">\n\n                </div>\n                <div className=\"wc-ppcp-fastlane-modal-buttons\">\n                    <button\n                        className=\"wc-ppcp-fastlane-tokenize\"\n                        onClick={onClick}>\n                        {i18n.continue}\n                    </button>\n                    <a\n                        className=\"wc-ppcp-fastlane-cancel\"\n                        onClick={() => {\n                            setRendered(false);\n                            onClose();\n                        }}>\n                        {i18n.cancel}\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}","export * from './notice';\nexport * from './payment-method';\nexport * from './payment-method-label';\nexport * from './saved-token-component';\nexport * from './fastlane-link';\nexport * from './fastlane-modal';","import classNames from \"classnames\";\nimport {Notice as WordpressNotice} from '@wordpress/components';\n\nexport const Notice = ({notice, onRemove}) => {\n    const classes = classNames(`wc-braintree-blocks__notice ${notice.type}`);\n    return (\n        <WordpressNotice\n            key={`notice-${notice.type}`}\n            className={classes}\n            onRemove={() => {\n                if (notice.isDismissible) {\n                    onRemove();\n                }\n            }} {...notice}>\n            {notice.message}\n        </WordpressNotice>\n    )\n}\n\nexport default Notice;","export const PaymentMethodLabel = ({title, paymentMethod, components, icon = []}) => {\n    const {PaymentMethodLabel: Label, PaymentMethodIcons: Icons} = components;\n    if (!Array.isArray(icon)) {\n        icon = [icon];\n    }\n    return (\n        <span className={'wc-braintree-blocks-paymentMethod__label'}>\n            <Label text={title}/>\n            <Icons icons={icon} align='left'/>\n        </span>\n    )\n}\n\nexport default PaymentMethodLabel;","import {useRef, useState, useEffect} from '@wordpress/element';\nimport {PaymentMethodDataProvider, usePaymentMethodDataContext} from '../../payment-methods/context';\nimport {useProcessPayment, useProcessPaymentFailure} from \"../../payment-methods/hooks\";\n\nexport const PaymentMethod = ({content, description = '', icons, ...props}) => {\n    const el = useRef();\n    const [container, setContainer] = useState(null);\n    const Content = content;\n    useEffect(() => {\n        if (el.current) {\n            setContainer(el.current);\n        }\n    }, []);\n    return (\n        <div ref={el} className={\"wc-braintree-blocks-payment-method__container\"}>\n            {description &&\n                <div className=\"wc-braintree-blocks-payment-method__description\">\n                    {description}\n                </div>}\n            <PaymentMethodDataProvider container={container} {...props}>\n                <PaymentMethodProviderContainer {...props}>\n                    <Content {...props}/>\n                </PaymentMethodProviderContainer>\n            </PaymentMethodDataProvider>\n        </div>\n    )\n}\n\nconst PaymentMethodProviderContainer = (\n    {\n        children,\n        name,\n        billing,\n        shippingData,\n        eventRegistration,\n        emitResponse,\n        activePaymentMethod,\n        isExpress = false,\n        advancedFraudOptions = {}\n    }) => {\n    const {\n        onPaymentSetup,\n        onCheckoutFail\n    } = eventRegistration;\n    const {\n        responseTypes,\n        noticeContexts\n    } = emitResponse;\n\n    const {\n        fastlane\n    } = usePaymentMethodDataContext();\n\n    useProcessPayment({\n        name,\n        billing,\n        shippingData,\n        responseTypes,\n        onPaymentSetup,\n        useFastlane: fastlane.paymentToken !== null,\n        activePaymentMethod,\n        advancedFraudOptions\n    });\n\n    useProcessPaymentFailure({\n        event: onCheckoutFail,\n        responseTypes,\n        messageContext: isExpress ? noticeContexts.EXPRESS_PAYMENTS : null\n    });\n    return children;\n}\n\nexport default PaymentMethod;","import {useEffect, useRef, useCallback} from '@wordpress/element';\nimport {ensureSuccessResponse, ensureErrorResponse, BraintreeError, fetchTokenNonce} from \"../../payment-methods/utils\";\nimport {useThreeDSecure, useProcessPaymentFailure, useDeviceData} from \"../../payment-methods/hooks\";\nimport {usePaymentMethodDataContext, PaymentMethodDataProvider} from \"../../payment-methods/context\";\n\nexport const SavedTokenProvider = (props) => {\n    return (\n        <PaymentMethodDataProvider {...{...props}}>\n            <SavedTokenComponent {...{...props}}/>\n        </PaymentMethodDataProvider>\n    )\n}\nexport const SavedTokenComponent = (\n    {\n        name,\n        vaultedThreeDSecure = false,\n        token,\n        eventRegistration,\n        billing,\n        shippingData,\n        emitResponse\n    }) => {\n    const {responseTypes} = emitResponse;\n    const {onPaymentSetup, onCheckoutFail} = eventRegistration;\n    const currentData = useRef({billing, shippingData});\n    const {doPaymentDataFilter} = usePaymentMethodDataContext();\n    useDeviceData();\n    useThreeDSecure({name, vaulted: vaultedThreeDSecure});\n    useProcessPaymentFailure({\n        event: onCheckoutFail,\n        responseTypes\n    });\n\n    useEffect(() => {\n        currentData.current = {name, billing, shippingData};\n    });\n\n    useEffect(() => {\n        const unsubscribe = onPaymentSetup(async () => {\n            if (vaultedThreeDSecure) {\n                try {\n                    let result = await fetchTokenNonce(token);\n                    if (!result.success) {\n                        throw new BraintreeError({message: result.message});\n                    }\n                    result = await doPaymentDataFilter({\n                        meta: {\n                            paymentMethodData: {\n                                [`${name}_3ds_nonce_key`]: 'true'\n                            }\n                        }\n                    }, {...currentData.current, ...{result: result.data}});\n                    return ensureSuccessResponse(responseTypes, result);\n                } catch (error) {\n                    return ensureErrorResponse(responseTypes, error);\n                }\n            }\n            return null;\n        });\n        return () => unsubscribe();\n    }, [\n        onPaymentSetup,\n        vaultedThreeDSecure,\n        token,\n        name,\n        responseTypes\n    ]);\n    return null;\n}\n\nexport default SavedTokenComponent;","export const ACTION_TYPES = {\n    SET_FASTLANE: 'SET_FASTLANE',\n    SET_PAYMENT_TOKEN: 'SET_PAYMENT_TOKEN',\n    SET_CUSTOMER_CONTEXT: 'SET_CUSTOMER_CONTEXT',\n    ADD_CANCELED_EMAIL: 'ADD_CANCELED_EMAIL'\n}","import {ACTION_TYPES} from \"./action-types\";\n\nexport const setPaymentToken = (token) => ({\n    type: ACTION_TYPES.SET_PAYMENT_TOKEN,\n    token\n});\n\nexport const setFastlane = fastlane => ({\n    type: ACTION_TYPES.SET_FASTLANE,\n    fastlane\n});\n\nexport const setCustomerContextId = id => ({\n    type: ACTION_TYPES.SET_CUSTOMER_CONTEXT,\n    id\n});\n\nexport const addCanceledEmail = email => ({\n    type: ACTION_TYPES.ADD_CANCELED_EMAIL,\n    email\n})","export const STORE_KEY = 'wc-braintree/store/checkout';","import {createReduxStore, register, subscribe} from '@wordpress/data';\nimport {controls as dataControls} from '@wordpress/data-controls';\n\nimport {STORE_KEY} from \"./constants\";\nimport * as actions from './actions';\nimport reducer from './reducers';\nimport * as selectors from './selectors';\n\nconst config = {\n    reducer,\n    selectors,\n    actions\n}\n\nexport {\n    STORE_KEY\n};\n\nexport const store = createReduxStore(STORE_KEY, config);\n\nregister(store);","import {ACTION_TYPES} from \"./action-types\";\n\nconst DEFAULT_STATE = {\n    token: null,\n    fastlane: null,\n    canceledEmails: [],\n    customerContextId: null\n};\n\nexport default function reducer(state = DEFAULT_STATE, action) {\n    let newState = state;\n\n    switch (action.type) {\n        case ACTION_TYPES.SET_FASTLANE:\n            newState = {\n                ...state,\n                fastlane: action.fastlane\n            }\n            break;\n        case ACTION_TYPES.SET_PAYMENT_TOKEN:\n            newState = {\n                ...state,\n                token: action.token\n            }\n            break;\n        case ACTION_TYPES.SET_CUSTOMER_CONTEXT:\n            newState = {\n                ...state,\n                customerContextId: action.id\n            }\n            break;\n        case ACTION_TYPES.ADD_CANCELED_EMAIL:\n            newState = {\n                ...state,\n                canceledEmails: [...state.canceledEmails, action.email]\n            }\n            break;\n    }\n    return newState;\n}","export const getPaymentToken = (state) => {\n    return state.token;\n}\n\nexport const getFastlane = state => {\n    return state.fastlane;\n}\n\nexport const isCustomerFound = state => {\n    return !!state.customerContextId;\n}\n\nexport const getCanceledEmails = state => {\n    return state.canceledEmails;\n}","export * from './checkout';","export * from './use-create-payment-request';\nexport * from './use-create-session';","import {useEffect, useMemo, useRef, useCallback} from '@wordpress/element';\nimport {removeNumberPrecision} from \"../../utils\";\nimport {formatLineItems, formatShippingMethods} from \"../utils\";\n\nexport const useCreatePaymentRequest = (\n    {\n        applePayInstance,\n        billing,\n        shippingData,\n        getData\n    }) => {\n    const currentData = useRef({});\n\n    useEffect(() => {\n        currentData.current.billing = billing;\n        currentData.current.shippingData = shippingData;\n    }, [billing, shippingData]);\n\n    const request = useMemo(() => {\n        if (applePayInstance) {\n            const {cartTotal, currency, cartTotalItems, billingAddress} = currentData.current.billing;\n            const {needsShipping, shippingRates} = currentData.current.shippingData;\n            const request = {\n                total: {\n                    label: getData('displayName'),\n                    type: 'final',\n                    amount: removeNumberPrecision(cartTotal.value, currency.minorUnit).toString()\n                },\n                lineItems: formatLineItems(cartTotalItems, currency.minorUnit),\n                currencyCode: currency.code,\n                countryCode: getData('countryCode'),\n                requiredBillingContactFields: ['postalAddress'],\n                requiredShippingContactFields: (() => {\n                    let fields = needsShipping ? ['postalAddress'] : [];\n                    if (!billingAddress.email) {\n                        fields = [...fields, 'email'];\n                    }\n                    if (!billingAddress.phone) {\n                        fields = [...fields, 'phone'];\n                    }\n                    return fields;\n                })()\n            }\n            if (needsShipping) {\n                request.shippingMethods = formatShippingMethods(shippingRates);\n            }\n            const paymentRequest = applePayInstance.createPaymentRequest(request);\n            return paymentRequest;\n        }\n        return null;\n    }, [applePayInstance]);\n    return request;\n}\n\nexport default useCreatePaymentRequest;","import {useEffect, useRef, useCallback} from '@wordpress/element';\nimport {__} from '@wordpress/i18n';\nimport {range} from 'lodash';\nimport {usePaymentMethodDataContext} from \"../../context\";\nimport {usePaymentEventsHandler} from \"../../hooks\";\nimport apiFetch from '@wordpress/api-fetch';\nimport {isEqual, isEmpty} from 'lodash';\nimport {\n    extractSelectedShippingOption,\n    extractAddressLines,\n    DEFAULT_BILLING_ADDRESS,\n    DEFAULT_SHIPPING_ADDRESS\n} from \"../../utils\";\n\nexport const useCreateSession = (\n    {\n        applePayInstance,\n        billing,\n        shippingData,\n        paymentRequest,\n        eventRegistration,\n        onClick,\n        onClose,\n        getData\n    }) => {\n    const {addShippingHandler} = usePaymentEventsHandler({\n        billing,\n        shippingData,\n        eventRegistration\n    });\n    const {setPaymentMethodNonce, onPaymentDataFilter, notice: {addNotice}} = usePaymentMethodDataContext();\n    const applePayData = useRef({});\n    const currentData = useRef({\n        billing,\n        shippingData,\n        onClick,\n        onClose,\n        addNotice,\n        addShippingHandler,\n        setPaymentMethodNonce,\n        onPaymentDataFilter\n    });\n\n    const getApplePayVersion = useCallback(() => {\n        // always check support from highest version first\n        for (let version of range(10, 2, -1)) {\n            if (ApplePaySession.supportsVersion(version)) {\n                return version;\n            }\n        }\n        return 3;\n    }, []);\n\n    const onSessionCancel = useCallback(() => {\n        const {onClose} = currentData.current;\n        onClose();\n    }, []);\n\n    const onValidateMerchant = useCallback((event) => {\n        const {session} = currentData.current;\n        applePayInstance.performValidation({\n            validationURL: event.validationURL,\n            displayName: getData('displayName')\n        }).then(merchantSession => {\n            session.completeMerchantValidation(merchantSession);\n        }).catch(error => {\n            session.abort();\n            addNotice(error);\n        })\n    }, [applePayInstance, addNotice]);\n\n    const onPaymentMethodSelected = useCallback((event) => {\n        // update the cart billing address info\n        const {paymentMethod} = event;\n        const {session, addNotice} = currentData.current;\n        let address = null;\n        if (paymentMethod.billingContact) {\n            address = {\n                country: paymentMethod.billingContact?.countryCode || '',\n                state: paymentMethod.billingContact?.administrativeArea || '',\n                postcode: paymentMethod.billingContact?.postalCode || '',\n                city: paymentMethod.billingContact?.locality || ''\n            }\n        }\n        apiFetch({\n            method: 'POST',\n            url: getData('routes').payment_method,\n            data: {\n                address\n            }\n        }).then(response => {\n            if (response.code) {\n                session.abort();\n                addNotice(response.messages);\n            } else {\n                session.completePaymentMethodSelection(response.data);\n            }\n        }).catch((xhr) => {\n\n        });\n    }, []);\n\n    const onShippingContactSelected = useCallback((event) => {\n        const {session} = currentData.current;\n        const {shippingContact} = event;\n        const {shippingData} = currentData.current;\n        const {shippingAddress} = shippingData;\n        const {country, state, city, postcode} = shippingAddress;\n        const newAddress = {\n            country: shippingContact?.countryCode.toUpperCase(),\n            state: shippingContact?.administrativeArea.toUpperCase(),\n            city: shippingContact.locality,\n            postcode: shippingContact.postalCode\n        }\n        //const addressEqual = isEqual({country, state, city, postcode}, newAddress);\n\n        apiFetch({\n            method: 'POST',\n            url: getData('routes').shipping_address,\n            data: {\n                payment_method: 'braintree_applepay',\n                address: newAddress\n            }\n        }).then(response => {\n            if (response.code) {\n                if (response.code === 'addressUnserviceable') {\n                    session.completeShippingContactSelection(response.data.shippingContactUpdate);\n                } else {\n                    session.completeShippingContactSelection({\n                        errors: [new ApplePayError(\n                            response.code,\n                            response.data.contactField,\n                            response.message)],\n                        newTotal: response.data.newTotal,\n                        newShippingMethods: response.data.newShippingMethods\n                    });\n                }\n            } else {\n                session.completeShippingContactSelection(response.data.shippingContactUpdate)\n            }\n        }).finally(() => {\n            shippingData.setShippingAddress({...shippingAddress, ...newAddress});\n        });\n    }, []);\n\n    const onShippingMethodSelected = useCallback((event) => {\n        const {shippingMethod} = event;\n        const {session, shippingData, addNotice} = currentData.current;\n        const {setSelectedRates, selectedRates} = shippingData;\n\n        apiFetch({\n            method: 'POST',\n            url: getData('routes').shipping_method,\n            data: {\n                payment_method: 'braintree_applepay',\n                shipping_method: shippingMethod.identifier\n            }\n        }).then(response => {\n            if (response.code) {\n                session.abort();\n                //__('There was an error updating your cart totals.', 'woo-payment-gateway')\n            } else {\n                session.completeShippingMethodSelection(response.data.shippingMethodUpdate);\n            }\n        }).finally(() => {\n            setSelectedRates(...extractSelectedShippingOption(shippingMethod.identifier));\n        });\n    }, []);\n\n    const onPaymentAuthorized = useCallback((event) => {\n        const {session, setPaymentMethodNonce, errors = []} = currentData.current;\n        if (errors?.length > 0) {\n            session.completePayment({\n                status: ApplePaySession.STATUS_FAILURE,\n                errors\n            });\n        } else {\n            applePayInstance.tokenize({\n                token: event?.payment?.token\n            }).then(response => {\n                const {shippingContact = null, billingContact = null} = event.payment;\n                applePayData.current.billingAddress = {};\n\n                if (billingContact) {\n                    applePayData.current.billingAddress = {\n                        first_name: billingContact?.givenName,\n                        last_name: billingContact?.familyName,\n                        city: billingContact?.locality,\n                        state: billingContact?.administrativeArea,\n                        postcode: billingContact?.postalCode,\n                        country: billingContact?.countryCode,\n                        ...extractAddressLines(billingContact?.addressLines || ''),\n                        ...applePayData.current.billingAddress\n                    }\n                    if (billingContact.emailAddress) {\n                        applePayData.current.billingAddress.email = billingContact.emailAddress;\n                    }\n                    if (billingContact.phoneNumber) {\n                        applePayData.current.billingAddress.phone = billingContact.phoneNumber;\n                    }\n                }\n\n                if (shippingContact) {\n                    if (currentData.current.shippingData.needsShipping) {\n                        applePayData.current.shippingAddress = {\n                            first_name: shippingContact?.givenName,\n                            last_name: shippingContact?.familyName,\n                            city: shippingContact?.locality,\n                            state: shippingContact?.administrativeArea,\n                            postcode: shippingContact?.postalCode,\n                            country: shippingContact?.countryCode,\n                            ...extractAddressLines(shippingContact?.addressLines || [])\n                        }\n                        if (applePayData.current.billingAddress.phone) {\n                            applePayData.current.shippingAddress.phone = applePayData.current.billingAddress.phone;\n                        } else if (shippingContact?.phoneNumber) {\n                            applePayData.current.shippingAddress.phone = shippingContact.phoneNumber;\n                        }\n                    }\n                    if (shippingContact?.phoneNumber && !applePayData.current.billingAddress.phone) {\n                        applePayData.current.billingAddress.phone = shippingContact?.phoneNumber;\n                    }\n                    if (shippingContact?.emailAddress && !applePayData.current.billingAddress.email) {\n                        applePayData.current.billingAddress.email = shippingContact?.emailAddress;\n                    }\n                }\n\n                setPaymentMethodNonce(response.nonce);\n                session.completePayment(ApplePaySession.STATUS_SUCCESS);\n            }).catch(error => {\n                session.completePayment(ApplePaySession.STATUS_FAILURE);\n            })\n        }\n    }, [applePayInstance]);\n\n    useEffect(() => {\n        currentData.current = {\n            ...currentData.current,\n            billing,\n            shippingData,\n            onClick,\n            onClose,\n            addNotice,\n            addShippingHandler,\n            setPaymentMethodNonce\n        };\n    });\n\n    useEffect(() => {\n        const unsubscribe = onPaymentDataFilter((data, {billing, shippingData}) => {\n            if (!isEmpty(applePayData.current?.billingAddress)) {\n                data.meta.billingAddress = {\n                    ...DEFAULT_BILLING_ADDRESS,\n                    ...billing.billingAddress,\n                    ...applePayData.current.billingAddress\n                };\n            }\n            if (!isEmpty(applePayData.current?.shippingAddress)) {\n                data.meta.shippingAddress = {\n                    ...DEFAULT_SHIPPING_ADDRESS,\n                    ...shippingData.shippingAddress,\n                    ...applePayData.current.shippingAddress\n                };\n            }\n            return data;\n        });\n        return () => unsubscribe();\n    }, [onPaymentDataFilter]);\n\n    const createSession = useCallback(() => {\n        const {shippingData} = currentData.current;\n        const session = new ApplePaySession(getApplePayVersion(), paymentRequest);\n        session.onvalidatemerchant = onValidateMerchant;\n        session.onpaymentmethodselected = onPaymentMethodSelected;\n        session.onpaymentauthorized = onPaymentAuthorized;\n        session.oncancel = onSessionCancel;\n        if (shippingData.needsShipping) {\n            session.onshippingcontactselected = onShippingContactSelected;\n            session.onshippingmethodselected = onShippingMethodSelected;\n        }\n        currentData.current.session = session;\n        return session;\n    }, [\n        applePayInstance,\n        paymentRequest,\n        getApplePayVersion,\n        onValidateMerchant,\n        onPaymentMethodSelected,\n        onPaymentAuthorized,\n        onShippingContactSelected,\n        onShippingMethodSelected\n    ]);\n\n    const handleClick = useCallback((e) => {\n        e.preventDefault();\n        currentData.current.onClick();\n        try {\n            const session = createSession();\n            session.begin();\n        } catch (error) {\n            alert(error);\n        }\n    }, [createSession]);\n\n    return {handleClick};\n}\n\nexport default useCreateSession;","import {useState, useEffect} from '@wordpress/element';\nimport {registerExpressPaymentMethod} from '@woocommerce/blocks-registry';\nimport {create as createApplePay} from '@braintree/apple-pay';\nimport {getSettings, getClientToken, isCartPage, isCheckoutPage} from \"../utils\";\nimport {PaymentMethod} from \"../../components/payment-method\";\nimport {usePaymentMethodDataContext} from \"../context\";\nimport {useCreatePaymentRequest, useCreateSession} from \"./hooks\";\nimport ErrorBoundary from \"../../components/error-boundary\";\nimport ApplePayPreview from \"./preview\";\n\nconst getData = getSettings('braintree_applepay');\n\nconst loadApplePay = new Promise((resolve, reject) => {\n    createApplePay({\n        authorization: getClientToken()\n    }).then(instance => resolve(instance)).catch(error => reject(error));\n});\n\nconst Test = (props) => {\n    return (\n        <ErrorBoundary>\n            <ApplePayContainer {...props}/>\n        </ErrorBoundary>\n    )\n}\n\nconst ApplePayContainer = (\n    {\n        getData,\n        billing,\n        shippingData,\n        eventRegistration,\n        onClick,\n        onClose\n    }) => {\n    const [applePayInstance, setApplePayInstance] = useState(null);\n    const {notice: {addNotice}} = usePaymentMethodDataContext();\n    const paymentRequest = useCreatePaymentRequest({\n        applePayInstance,\n        billing,\n        shippingData,\n        getData\n    });\n    const {handleClick} = useCreateSession({\n        applePayInstance,\n        billing,\n        shippingData,\n        paymentRequest,\n        eventRegistration,\n        onClick,\n        onClose,\n        getData\n    });\n    useEffect(() => {\n        loadApplePay.then(instance => setApplePayInstance(instance)).catch(error => addNotice(error));\n    }, []);\n\n    return (\n        <div\n            className={'wc-braintree-blocks-apple-pay-button__container'}>\n            <ApplePayButton\n                onClick={handleClick}\n                type={getData('buttonType')}\n                style={getData('buttonStyle')}\n                rounded={getData('roundedButton')}/>\n        </div>\n    )\n}\n\nconst ApplePayButton = ({onClick, type, style, rounded = false}) => {\n    const getButtonStyle = (style) => {\n        switch (style) {\n            case 'apple-pay-button-black':\n                return 'black';\n            case 'apple-pay-button-white':\n                return 'white';\n            case 'apple-pay-button-white-with-line':\n                return 'white-outline';\n        }\n    }\n    const styles = {\n        'ApplePayButtonType': type,\n        'ApplePayButtonStyle': getButtonStyle(style)\n    }\n    return <button\n        className={`wc-braintree-blocks-apple-pay__button ${style} ${rounded ? 'apple-pay-button-rounded' : ''}`}\n        style={styles}\n        onClick={onClick}/>\n\n}\nif ((isCartPage() && getData('expressCartEnabled')) || (isCheckoutPage() && getData('expressCheckoutEnabled'))) {\n    registerExpressPaymentMethod({\n        name: getData('name'),\n        canMakePayment: async () => {\n            return window.ApplePaySession && ApplePaySession.canMakePayments();\n        },\n        content: <PaymentMethod content={Test}\n                                title={getData('title')}\n                                description={getData('description')}\n                                name={getData('name')}\n                                icon={getData('icon')}\n                                getData={getData}\n                                isExpress={true}/>,\n        edit: <ApplePayPreview src={getData('editor').icon}/>,\n        supports: {\n            features: getData('features')\n        }\n    });\n}","export default function ApplePayPreview({src}) {\n    return (\n        <div\n            className='apple-pay-block-editor'\n            style={{maxHeight: '40px', backgroundColor: '#000', borderRadius: '4px'}}>\n            <img\n                src={src}\n                style={{\n                    width: '100%',\n                    height: '40px',\n                    objectFit: 'contain'\n                }}/>\n        </div>\n    )\n}","import {getShippingOptionId, removeNumberPrecision} from \"../utils\";\n\nexport const formatLineItems = (lineItems, minorUnit) => {\n    let items = [];\n    const keys = ['total_tax', 'total_shipping'];\n    lineItems.forEach(item => {\n        if (0 < item.value || (item.key && keys.includes(item.key))) {\n            items.push({\n                label: item.label,\n                type: 'final',\n                amount: removeNumberPrecision(item.value, minorUnit).toString()\n            });\n        }\n    })\n    return items;\n}\n\nexport const formatShippingMethods = (shippingRates) => {\n    let options = [];\n    shippingRates.forEach((shippingPackage, idx) => {\n        let rates = shippingPackage.shipping_rates.map(rate => {\n            let txt = document.createElement('textarea');\n            txt.innerHTML = rate.name;\n            return {\n                identifier: getShippingOptionId(idx, rate.rate_id),\n                label: txt.value,\n                detail: '',\n                amount: removeNumberPrecision(rate.price, rate.currency_minor_unit)\n            }\n        });\n        options = [...options, ...rates];\n    });\n    return options;\n}","import {useMemo} from '@wordpress/element';\nimport {uniqueId} from 'lodash';\nimport {ACTIONS} from './action-reducer';\n\nexport const useActionEmitter = (dispatch) => {\n    const data = useMemo(() => ({\n        onPaymentDataFilter: (callback, priority = 10) => {\n            const action = {\n                action: ACTIONS.ADD_ACTION,\n                type: 'payment_data_filter',\n                id: uniqueId(),\n                callback,\n                priority\n            };\n            dispatch(action);\n            return () => dispatch({action: ACTIONS.REMOVE_ACTION, type: action.type, id: action.id})\n        }\n    }), [dispatch]);\n    return data;\n}\n\nexport const emittFilter = async (data, args, {handlers, type}) => {\n    const events = handlers[type];\n    const sortedEvents = Array.from(events.values()).sort((a, b) => a.priority - b.priority);\n    try {\n        for (const event of sortedEvents) {\n            data = await Promise.resolve(event.callback(data, args));\n        }\n    } catch (error) {\n        console.log(error);\n        throw error;\n    }\n    return data;\n}\n\n","export const ACTIONS = {\n    ADD_ACTION: 'add_action',\n    REMOVE_ACTION: 'remove_action'\n}\n\nexport const actionReducer = (state = {}, {action, type, id, callback, priority = 10}) => {\n    const event = state[type] ? state[type] : new Map();\n    switch (action) {\n        case ACTIONS.ADD_ACTION:\n            event.set(id, {callback, priority});\n            return {...state, [type]: event};\n        case ACTIONS.REMOVE_ACTION:\n            event.delete(id);\n            return {...state, [type]: event};\n    }\n    return state;\n}","export * from './payment-context';\nexport * from './action-reducer';\nexport * from './action-emitter';","import {useState, useRef, useEffect, useCallback, createContext, useContext, useReducer} from '@wordpress/element';\nimport {useSelect} from '@wordpress/data';\nimport {STORE_KEY} from '@wc-braintree/block-data';\nimport {actionReducer, useActionEmitter, emittFilter} from \"../context\";\nimport {loadClient} from \"../utils\";\nimport {useNoticeHandler} from \"../hooks\";\n\nconst PaymentMethodDataContext = createContext();\n\nexport const PaymentMethodDataProvider = (\n    {\n        children,\n        container,\n        onSubmit,\n        getData,\n        isExpress = null,\n        setExpressPaymentError\n    }) => {\n    const [client, setClient] = useState();\n    const [paymentMethodNonce, setPaymentMethodNonce] = useState(null);\n    const [eventHandlers, dispatch] = useReducer(actionReducer, {});\n    const {onPaymentDataFilter} = useActionEmitter(dispatch);\n    const currentEventHandlers = useRef(eventHandlers);\n    const currentData = useRef({onSubmit});\n    const paymentHandler = useRef(null);\n    const [notice, addNotice, removeNotice] = useNoticeHandler({isExpress, setExpressPaymentError});\n\n    const {\n        fastlane,\n        paymentToken,\n        customerFound\n    } = useSelect(select => {\n        const store = select(STORE_KEY);\n        return {\n            fastlane: store.getFastlane(),\n            paymentToken: store.getPaymentToken(),\n            customerFound: store.isCustomerFound()\n        };\n    });\n\n    const doPaymentDataFilter = useCallback(async (data, args) => {\n        return await emittFilter(data, args, {\n            handlers: currentEventHandlers.current,\n            type: 'payment_data_filter'\n        });\n    }, []);\n\n    const setPaymentHandler = useCallback((handler) => {\n        paymentHandler.current = handler;\n    }, []);\n    useEffect(() => {\n        currentEventHandlers.current = eventHandlers;\n    }, [eventHandlers]);\n\n    useEffect(() => {\n        loadClient.then(client => setClient(client)).catch(error => {\n            addNotice(error)\n        });\n    }, [addNotice]);\n\n    useEffect(() => {\n        currentData.current = {onSubmit};\n    }, [onSubmit]);\n\n    useEffect(() => {\n        if (paymentMethodNonce) {\n            currentData.current.onSubmit();\n        }\n    }, [paymentMethodNonce]);\n\n    const paymentMethodDataContext = {\n        container,\n        client,\n        paymentMethodNonce,\n        setPaymentMethodNonce,\n        onPaymentDataFilter,\n        doPaymentDataFilter,\n        setPaymentHandler,\n        onSubmit,\n        paymentHandler: paymentHandler.current,\n        notice: {\n            notice,\n            addNotice,\n            removeNotice\n        },\n        fraud: {\n            enabled: getData('advancedFraudEnabled')\n        },\n        threeDSecureEnabled: getData('threeDSecureEnabled'),\n        fastlane: {\n            fastlane,\n            paymentToken,\n            customerFound\n        }\n\n    };\n    return (\n        <PaymentMethodDataContext.Provider value={paymentMethodDataContext}>\n            {children}\n        </PaymentMethodDataContext.Provider>\n    )\n}\n\nexport const usePaymentMethodDataContext = () => {\n    return useContext(PaymentMethodDataContext);\n}","import {useState, useEffect, useCallback, useRef, cloneElement} from '@wordpress/element';\nimport {__, sprintf} from '@wordpress/i18n';\nimport {create} from '@braintree/hosted-fields';\nimport classnames from \"classnames\";\nimport {getCustomFormConfig} from \"./registry\";\nimport {useBreakpointWidth} from \"../../hooks\";\nimport '../custom-forms';\n\nexport const CustomForm = ({options, client, id, setPaymentHandler}) => {\n    const config = getCustomFormConfig(id);\n    const {breakpoint = 0, fields: fieldKeys = [], content: Content = null, className = ''} = config;\n    const [hostedFieldInstance, setHostedFieldsInstance] = useState(false);\n    const [fields, setFields] = useState({});\n    const [containerElement, setContainerElement] = useState();\n    const [cardBrand, setCardBrand] = useState(null);\n    const fieldOrder = useRef([]);\n    const currentData = useRef({fields});\n    const setFieldOrder = (id) => {\n        if (!fieldOrder.current.includes(id)) {\n            fieldOrder.current.push(id);\n        }\n    }\n    const getIconSrc = (type) => {\n        for (let icon of options.icons) {\n            if (icon.type === type) {\n                return icon.src;\n            }\n        }\n        return null;\n    };\n    const assertFieldsValid = useCallback(fields => {\n        const missingFields = fieldKeys.reduce((acc, prop) => {\n            if (!fields.hasOwnProperty(prop)) {\n                acc.push(prop);\n            }\n            return acc;\n        }, []);\n        return missingFields.length == 0;\n    }, []);\n    const setFieldContainer = useCallback((id) => (container) => {\n        const {fields} = currentData.current;\n        if (!fields?.[id]?.container && container !== null) {\n            const field = {\n                container,\n                ...options.fields[id]\n            }\n            setFields(prev => ({\n                ...prev,\n                [id]: field\n            }));\n        }\n    }, []);\n\n    const addClassToFields = useCallback((keys, className) => {\n        keys.forEach(key => {\n            fields?.[key]?.container.classList.add(className);\n        });\n    }, [fields]);\n\n    const paymentHandler = useCallback(({billing}) => new Promise((resolve, reject) => {\n        const {hostedFieldInstance} = currentData.current;\n        const options = {billingAddress: {}};\n        if (billing?.billingAddress?.address_1) {\n            options.billingAddress.streetAddress = billing.billingAddress.address_1;\n        }\n        if (billing?.billingAddress?.postcode) {\n            options.billingAddress.postalCode = billing.billingAddress.postcode;\n        }\n        hostedFieldInstance.tokenize(options, (error, payload) => {\n            if (error) {\n                if (error.code === 'HOSTED_FIELDS_FIELDS_INVALID') {\n                    addClassToFields(error?.details?.invalidFieldKeys || [], 'braintree-hosted-fields-invalid');\n                } else if (error.code === 'HOSTED_FIELDS_FIELDS_EMPTY') {\n                    addClassToFields(fieldKeys, 'braintree-hosted-fields-invalid');\n                }\n                reject(error);\n            } else {\n                resolve(payload);\n            }\n        });\n    }), []);\n\n    useEffect(() => {\n        setPaymentHandler(paymentHandler);\n\n        return () => setPaymentHandler(null);\n    }, [paymentHandler]);\n\n    useEffect(() => {\n        currentData.current = {fields};\n    }, [fields]);\n\n    useBreakpointWidth({key: id, el: containerElement, className, breakpoint});\n\n    useEffect(() => {\n        if (assertFieldsValid(fields)) {\n            client.then(clientInstance => {\n                create({\n                    client: clientInstance,\n                    fields,\n                    styles: options.styles\n                }).then(instance => {\n                    currentData.current.hostedFieldInstance = instance;\n                    setHostedFieldsInstance(instance);\n                }).catch(error => {\n\n                });\n            });\n        }\n    }, [fields]);\n\n    useEffect(() => {\n        if (hostedFieldInstance) {\n            hostedFieldInstance.on('cardTypeChange', (event) => {\n                if (event?.cards?.length == 1) {\n                    setCardBrand(event.cards[0].type);\n                } else {\n                    setCardBrand(null);\n                }\n            });\n            hostedFieldInstance.on('validityChange', (event) => {\n                const field = event.fields[event.emittedBy];\n                if (field.isValid) {\n                    const idx = fieldOrder.current.indexOf(event.emittedBy);\n                    if (fieldOrder.current?.[idx + 1]) {\n                        const nextField = fieldOrder.current[idx + 1];\n                        hostedFieldInstance.focus(nextField);\n                    }\n                }\n            });\n        }\n    }, [hostedFieldInstance]);\n    if (!Content) {\n        return <InvalidCustomForm id={id}/>;\n    }\n    return (\n        <div ref={setContainerElement} className='wc-braintree-blocks-custom__form'>\n            {cloneElement(Content, {\n                setFieldContainer,\n                setFieldOrder,\n                CardIcon: <CardIcon type={cardBrand} src={getIconSrc(cardBrand)}/>\n            })}\n        </div>\n    );\n}\n\nconst InvalidCustomForm = ({id}) => {\n    return (\n        <div className={'wc-braintree-blocks-notice__info'}>\n            {sprintf(__('%s is not a supported custom form.', 'woo-payment-gateway'), id)}\n        </div>\n    );\n};\n\nconst CardIcon = ({type, src}) => {\n    if (!type) {\n        return null;\n    }\n    const classes = classnames('wc-braintree-blocks-current-card__icon', type);\n    return (\n        <img className={classes} src={src}/>\n    )\n}\n\nexport default CustomForm;","const forms = {};\n\nexport const registerCustomForm = (config) => {\n    assertValidConfig(config);\n    forms[config.id] = config;\n}\n\nexport const getCustomFormConfig = (id) => {\n    if (assertValidFormId(id)) {\n        return forms[id];\n    }\n    return {};\n}\n\nconst assertValidFormId = (id) => {\n    return forms.hasOwnProperty(id);\n}\n\nconst assertValidConfig = (config) => {\n    if (!config.id) {\n        throw new Error('Custom forms must have a unique ID.');\n    }\n    assertConfigHasProperties(config, ['content', 'breakpoint']);\n}\n\nconst assertConfigHasProperties = (config, props = []) => {\n    const missingParams = props.reduce((acc, prop) => {\n        if (!config.hasOwnProperty(prop)) {\n            acc.push(prop);\n        }\n        return acc;\n    }, []);\n    if (missingParams.length > 0) {\n        throw new TypeError(`Custom form config missing params ${missingParams.join(', ')}`);\n    }\n}","import {__} from '@wordpress/i18n';\nimport {CardNumber, CardExpirationDate, CardCVV} from \"../../hosted-fields\";\nimport './style.scss';\n\nexport const BootstrapForm = (props) => {\n    return (\n        <div className='wc-braintree-blocks-bootstrap__form'>\n            <div className='row'>\n                <div className='col-md-6'>\n                    <div className={'form-group cardnumber-form-group'}>\n                        <label>{__('Card Number', 'woo-payment-gateway')}</label>\n                        <CardNumber className={'bootstrap-input'} {...props}/>\n                    </div>\n                </div>\n                <div className='col-md-3'>\n                    <div className={'form-group'}>\n                        <label>{__('Exp Date', 'woo-payment-gateway')}</label>\n                        <CardExpirationDate className={'bootstrap-input'} {...props}/>\n                    </div>\n                </div>\n                <div className='col-md-3'>\n                    <div className={'form-group'}>\n                        <label>{__('CVV', 'woo-payment-gateway')}</label>\n                        <CardCVV className={'bootstrap-input'} {...props}/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default BootstrapForm;","import {registerCustomForm} from \"../custom-form/registry\";\nimport BootstrapForm from './bootstrap';\nimport SimpleForm from './simple';\n\nregisterCustomForm({\n    id: 'bootstrap_form',\n    content: <BootstrapForm/>,\n    breakpoint: 425,\n    fields: ['number', 'expirationDate', 'cvv'],\n    className: 'bootstrap-md'\n});\nregisterCustomForm({\n    id: 'simple_form',\n    content: <SimpleForm/>,\n    breakpoint: 425,\n    fields: ['number', 'expirationDate', 'cvv'],\n    className: 'simple-form-md'\n})","import {__} from '@wordpress/i18n';\nimport {CardNumber, CardExpirationDate, CardCVV} from \"../../hosted-fields\";\nimport './style.scss';\n\nexport const SimpleForm = (props) => {\n    return (\n        <div className='wc-braintree-blocks-simple__form'>\n            <div className='form-group'>\n                <label>{__('Card Number', 'woo-payment-gateway')}</label>\n                <CardNumber className='hosted-field braintree-card-number' {...props}/>\n            </div>\n            <div className='form-group'>\n                <label>{__('Exp Date', 'woo-payment-gateway')}</label>\n                <CardExpirationDate className='hosted-field' {...props}/>\n            </div>\n            <div className='form-group'>\n                <label>{__('CVV', 'woo-payment-gateway')}</label>\n                <CardCVV className='hosted-field' {...props}/>\n            </div>\n        </div>\n    )\n}\n\nexport default SimpleForm;","import {useEffect, useState, useCallback} from '@wordpress/element';\nimport {create as createDropin} from '@braintree/dropin';\n\nexport const DropinForm = ({options, setDropinInstance}) => {\n    const {clientToken, locale = 'en_US'} = options;\n    const [error, setError] = useState(null);\n    const [element, setElement] = useState(null);\n    const setRef = useCallback(node => {\n        if (node) {\n            setElement(node);\n        }\n    });\n    useEffect(() => {\n        if (element) {\n            createDropin({\n                authorization: clientToken,\n                container: element,\n                locale: locale\n            }, (error, dropinInstance) => {\n                if (error) {\n                    setError(error?.message);\n                } else {\n                    setDropinInstance(dropinInstance);\n                }\n            })\n        }\n    }, [element]);\n    return (\n        <>\n            {error && <div className={'wc-braintree-blocks__error'}>{error}</div>}\n            <div ref={setRef} className={'wc-braintree-blocks-dropin__form'}>\n\n            </div>\n        </>\n    )\n\n}\n\nexport default DropinForm;","export default function DropinPreview({src}){\n    return (\n        <div\n        style={{\n            display: 'flex',\n            justifyContent: 'center'\n        }}>\n            <img\n                src={src}\n                style={{\n                    width: '100%',\n                    maxWidth: '400px',\n                    objectFit: 'contain'\n                }}/>\n        </div>\n    )\n}","import classnames from \"classnames\";\n\nexport const CardCVV = ({setFieldContainer, setFieldOrder, className}) => {\n    setFieldOrder('cvv');\n    const classes = classnames('braintree-web-hosted-field', className);\n    return <div ref={setFieldContainer('cvv')} id='braintree-cvv' className={classes}></div>\n}\n\nexport default CardCVV;","import classnames from \"classnames\";\n\nexport const CardExpirationDate = ({setFieldContainer, setFieldOrder, className}) => {\n    setFieldOrder('expirationDate');\n    const classes = classnames('braintree-web-hosted-field', className);\n    return (\n        <div ref={setFieldContainer('expirationDate')} id='braintree-exp-date'\n             className={classes}></div>\n    )\n}\n\nexport default CardExpirationDate;","import {useEffect, useRef} from \"@wordpress/element\";\nimport classnames from \"classnames\";\n\nexport const CardNumber = ({onChange, setFieldContainer, setFieldOrder, className, CardIcon}) => {\n    setFieldOrder('number');\n    const classes = classnames('braintree-web-hosted-field', className);\n    return (\n        <div ref={setFieldContainer('number')} id='braintree-number' className={classes}>\n            {CardIcon}\n        </div>\n    )\n}\n\nexport default CardNumber;","export * from './card-number';\nexport * from './card-expiration-date';\nexport * from './card-cvv';","import {useState, useEffect, useCallback, useRef} from '@wordpress/element';\nimport {registerPaymentMethod} from '@woocommerce/blocks-registry';\nimport {getSetting} from '@woocommerce/settings';\nimport {useDispatch, useSelect} from '@wordpress/data';\nimport classnames from 'classnames';\nimport {__} from '@wordpress/i18n';\nimport {STORE_KEY} from '@wc-braintree/block-data';\nimport {getSettings, loadClient, getClientToken, canShowSavedCard} from \"../utils\";\nimport {PaymentMethod, PaymentMethodLabel, SavedTokenProvider, Notice, FastlaneLink, FastlaneModal} from '../../components';\nimport DropinForm from \"./dropin-form\";\nimport CustomForm from \"./custom-form\";\nimport {usePaymentMethodDataContext} from \"../context\";\nimport TokenizedCard from './tokenized-card'\nimport DropinPreview from './dropin-preview';\n\nconst getData = getSettings('braintree_cc');\nconst data = getSetting('braintree_cc_data');\n\nconst CreditCardComponent = (props) => {\n    const [openModal, setOpenModal] = useState(false);\n    const {\n        billing,\n        shippingData\n    } = props;\n    const {\n        email\n    } = billing.billingAddress;\n    const {\n        notice,\n        fastlane: {\n            fastlane,\n            paymentToken,\n            customerFound\n        },\n        setPaymentHandler\n    } = usePaymentMethodDataContext();\n\n    const {\n        setPaymentToken\n    } = useDispatch(STORE_KEY);\n\n    const {\n        emails\n    } = useSelect(select => {\n        return {\n            emails: select(STORE_KEY).getCanceledEmails()\n        }\n    });\n\n    const showSignup = data.showSignup && !emails.includes(email);\n\n    const dropinEnabled = getData('dropinEnabled');\n    const Content = dropinEnabled ? DropinContainer : HostedFieldsContainer;\n    const classes = classnames('wc-braintree-card-container', {\n        'dropin': dropinEnabled,\n        'customForm': !dropinEnabled\n    });\n\n    const onTokenize = useCallback((token) => {\n        setPaymentToken(token);\n    }, []);\n\n    if (paymentToken) {\n        return (\n            <TokenizedCard\n                data={data}\n                token={paymentToken}\n                fastlane={fastlane}\n                customerFound={customerFound}\n                {...props}/>\n        )\n    }\n\n    return (\n        <>\n            {showSignup &&\n                <FastlaneLink\n                    logo={data.fastLaneLogo}\n                    text={data.i18n.fastlane_signup}\n                    onClick={() => setOpenModal(true)}/>\n            }\n            {notice?.notice && <Notice notice={notice.notice} onRemove={notice.removeNotice}/>}\n            <div className={classes}>\n                <Content setPaymentHandler={setPaymentHandler}/>\n            </div>\n            <FastlaneModal\n                i18n={data.i18n}\n                open={openModal}\n                onClose={() => setOpenModal(false)}\n                fastlane={fastlane}\n                onTokenize={onTokenize}\n                shippingData={shippingData}\n            />\n        </>\n    )\n}\n\nconst HostedFieldsContainer = (props) => {\n    const options = {\n        fields: getData('hostedFieldsOptions'),\n        styles: getData('hostedFieldsStyles'),\n        icons: getData('icons')\n    };\n    return <CustomForm options={options} client={loadClient} id={getData('customForm')} {...props}/>\n}\n\nconst DropinContainer = ({setPaymentHandler}) => {\n    const currentData = useRef({dropinInstance: null});\n\n    const setDropinInstance = useCallback(dropinInstance => {\n        currentData.current = {\n            ...currentData.current,\n            dropinInstance\n        }\n    }, []);\n\n    const handlePaymentProcessing = useCallback(() => {\n        return new Promise((resolve, reject) => {\n            const {dropinInstance} = currentData.current;\n            dropinInstance.requestPaymentMethod((err, payload) => {\n                if (err) {\n                    reject(err);\n                } else {\n                    resolve(payload);\n                }\n            });\n        })\n    }, []);\n\n    useEffect(() => {\n        setPaymentHandler(handlePaymentProcessing);\n    }, [handlePaymentProcessing]);\n\n    const options = {\n        clientToken: getClientToken(),\n        locale: 'en_US'\n    }\n    return (\n        <DropinForm options={options} setDropinInstance={setDropinInstance}/>\n    )\n}\n\nregisterPaymentMethod({\n    name: getData('name'),\n    label: <PaymentMethodLabel\n        title={getData('title')}\n        paymentMethod={getData('name')}\n        icon={getData('icon')}/>,\n    ariaLabel: __('Credit Cards', 'woo-payment-gateway'),\n    canMakePayment: () => true,\n    content: <PaymentMethod content={CreditCardComponent}\n                            title={getData('title')}\n                            description={getData('description')}\n                            name={getData('name')}\n                            icon={getData('icon')}\n                            getData={getData}/>,\n    savedTokenComponent: <SavedTokenProvider getData={getData}\n                                             name={getData('name')}\n                                             vaultedThreeDSecure={getData('vaultedThreeDSecure')}/>,\n    edit: <DropinPreview src={getData('editor').icon}/>,\n    supports: {\n        showSavedCards: getData('features').includes('tokenization'),\n        showSaveOption: canShowSavedCard(),\n        features: getData('features')\n    }\n});","import classnames from 'classnames';\nimport {formatPaymentMethod} from '../utils';\nimport {useProcessFastlanePaymentToken, useManageFastlanePaymentToken} from \"../hooks\";\nimport {usePaymentMethodDataContext} from \"../context\";\n\nexport default function TokenizedCard(\n    {\n        data,\n        token,\n        fastlane,\n        customerFound,\n        ...props\n    }) {\n    const {\n        onPaymentDataFilter\n    } = usePaymentMethodDataContext();\n\n    const {\n        i18n,\n        fastlane_icons,\n        payment_format\n    } = data;\n\n    const {\n        emitResponse,\n        shouldSavePayment\n    } = props;\n\n    const {\n        responseTypes\n    } = emitResponse;\n\n    let {\n        card\n    } = token.paymentSource;\n\n    card = {\n        ...card,\n        brand: card.brand,\n        last4: card.lastDigits,\n        expiry: card.expiry\n    };\n\n    useProcessFastlanePaymentToken({\n        token,\n        responseTypes,\n        shouldSavePayment,\n        onPaymentDataFilter\n    });\n\n    const {\n        onCancel,\n        onChangePaymentMethod\n    } = useManageFastlanePaymentToken({\n        fastlane\n    });\n\n    return (\n        <div className={classnames('wc-ppcp-tokenized-card', {'has-customer-context': customerFound})}>\n            <CardIcon icons={fastlane_icons} brand={card.brand.toLowerCase()}/>\n            <div className=\"wc-ppcp-tokenized-card-format\">\n                {formatPaymentMethod(payment_format, card)}\n            </div>\n            <div className=\"wc-ppcp-tokenized-card-actions\">\n                <a\n                    className=\"wc-ppcp-tokenized-card-cancel\"\n                    onClick={onCancel}>\n                    {i18n.cancel}\n                </a>\n                {customerFound &&\n                    <a\n                        className=\"wc-ppcp-tokenized-card-change\"\n                        onClick={onChangePaymentMethod}>\n                        {i18n.change}\n                    </a>\n                }\n            </div>\n        </div>\n    )\n}\n\nconst CardIcon = ({icons, brand}) => {\n    let src = '';\n\n    if (icons[brand]) {\n        src = icons[brand];\n    }\n\n    return (\n        <div className=\"wc-ppcp-tokenized-card-icon-container\">\n            <img src={src}/>\n        </div>\n    )\n}","import {useState, useRef, useEffect, useCallback, useMemo} from \"@wordpress/element\";\nimport {useSelect, useDispatch} from '@wordpress/data';\nimport {CART_STORE_KEY} from '@woocommerce/block-data';\nimport {getSetting} from '@woocommerce/settings';\nimport {isEmail} from '@wordpress/url';\nimport {useCreateFastlane, useProcessFastlane} from \"../hooks\";\nimport {useDeviceData} from \"../../hooks\";\nimport {PaymentMethodDataProvider} from \"../../context\";\nimport {getSettings, getClientToken} from \"../../utils\";\n\nconst Component = ({extensions}) => {\n    const isInitialRender = useRef(true);\n    const currentData = useRef({});\n    const data = extensions.wc_braintree.fastlane;\n\n    const {\n        needsShipping,\n        billingAddress\n    } = useSelect(select => {\n        const store = select(CART_STORE_KEY);\n\n        return {\n            needsShipping: store.getNeedsShipping(),\n            ...store.getCustomerData()\n        }\n    });\n\n    const {\n        setShippingAddress\n    } = useDispatch(CART_STORE_KEY);\n\n    const {\n        email\n    } = billingAddress;\n\n    const [debouncedEmail, setDebouncedEmail] = useState(email);\n\n    const dataCollector = useDeviceData({skip: true});\n\n    const fastlane = useCreateFastlane({\n        clientToken: getClientToken(),\n        fraudEnabled: data.fraud.enabled,\n        dataCollector\n    });\n\n    const onError = useCallback(() => {\n\n    }, []);\n\n    const shippingData = useMemo(() => {\n        return {\n            needsShipping,\n            setShippingAddress\n        }\n    }, [needsShipping, setShippingAddress]);\n\n    const {\n        emails,\n        isCustomerFound,\n        triggerAuthentication\n    } = useProcessFastlane({\n        i18n: data.i18n,\n        email,\n        onError,\n        fastlane,\n        shippingData,\n        openFastlaneModal: null\n    });\n\n    useEffect(() => {\n        currentData.current = {emails, fastlane, isCustomerFound};\n    }, [emails, fastlane, isCustomerFound]);\n\n    useEffect(() => {\n        // Set a timer to update the debounced value after 500ms\n        const timer = setTimeout(() => {\n            setDebouncedEmail(email);\n        }, 500); // Adjust debounce time as needed (500ms is common)\n\n        // Clean up the timer if email changes before timeout completes\n        return () => clearTimeout(timer);\n    }, [email]);\n\n    // Effect for handling email changes\n    useEffect(() => {\n        const {\n            emails,\n            isCustomerFound\n        } = currentData.current;\n\n        // If customer cancelled, don't try to authenticate.\n        if (emails.includes(debouncedEmail) || isCustomerFound) {\n            return;\n        }\n        // Don't do anything if requirements aren't met\n        if (!fastlane || !triggerAuthentication || !isEmail(debouncedEmail)) {\n            return;\n        }\n\n        // Only trigger on first load if fastlane_pageload is true\n        if (isInitialRender.current) {\n            isInitialRender.current = false;\n            if (data.fastlane_pageload) {\n                triggerAuthentication(debouncedEmail, false);\n            }\n            return;\n        }\n\n        // If we get here, email has changed and is valid, so trigger authentication\n        triggerAuthentication(debouncedEmail, false);\n    }, [fastlane, debouncedEmail, triggerAuthentication]);\n\n    useEffect(() => {\n        const {\n            fastlane\n        } = currentData.current;\n\n        if (!fastlane) {\n            return;\n        }\n        let el = document.getElementById('email');\n        if (el) {\n            let container = document.getElementById('wc-ppcp-watermark-container');\n            if (container) {\n                return;\n            }\n            container = document.createElement('div');\n            container.id = 'wc-ppcp-watermark-container';\n\n            fastlane.FastlaneWatermarkComponent({includeAdditionalInfo: true}).then(component => {\n                el.parentElement.append(container);\n                component.render('#wc-ppcp-watermark-container');\n            });\n        }\n    });\n\n    return null;\n}\n\nexport const Block = (props) => {\n    const getData = getSettings('braintree_cc');\n    return (\n        <PaymentMethodDataProvider getData={getData}>\n            <Component {...props}/>\n        </PaymentMethodDataProvider>\n    );\n}","import {registerCheckoutBlock} from '@woocommerce/blocks-checkout';\n\nimport metadata from './block.json';\nimport {Block} from './block';\n\nregisterCheckoutBlock({\n    metadata,\n    component: Block\n});","import {useState, useEffect, useCallback, useRef} from '@wordpress/element';\nimport {isEmail} from '@wordpress/url';\nimport {useCreateFastlane, useProcessFastlane} from \"./hooks\";\nimport {FastlaneModal} from '../../components';\nimport {useDeviceData} from \"../hooks\";\nimport {usePaymentMethodDataContext} from \"../context\";\nimport {getClientToken} from \"../utils\";\n\nexport default function ExpressPaymentComponent({getData, ...props}) {\n    const {\n        billing,\n        shippingData,\n        setExpressPaymentError\n    } = props;\n\n    const {\n        billingAddress\n    } = billing;\n\n    const {\n        email\n    } = billingAddress;\n\n    const authOnLoad = getData('fastlane_pageload');\n\n    const isInitialRender = useRef(true);\n    const [openModal, setOpenModal] = useState(false);\n    const resolveRef = useRef(null);\n    const promiseRef = useRef(null);\n\n    const {\n        fraud\n    } = usePaymentMethodDataContext();\n\n    const dataCollector = useDeviceData({skip: true});\n\n    const openFastlaneModal = useCallback(() => {\n        promiseRef.current = new Promise(resolve => {\n            resolveRef.current = resolve;\n        });\n        setOpenModal(true);\n        return promiseRef.current;\n    }, []);\n\n    const onClose = useCallback((skip = false) => {\n        setOpenModal(false);\n        if (!skip) {\n            resolveRef.current(null);\n        }\n    }, []);\n\n    const onTokenize = useCallback((data) => {\n        resolveRef.current(data);\n    }, []);\n\n    const fastlane = useCreateFastlane({\n        clientToken: getClientToken(),\n        fraudEnabled: fraud.enabled,\n        dataCollector\n    });\n\n    const {\n        onClick,\n        processing,\n        triggerAuthentication\n    } = useProcessFastlane({\n        i18n: getData('i18n'),\n        email,\n        onError: setExpressPaymentError,\n        fastlane,\n        shippingData,\n        openFastlaneModal\n    });\n\n    useEffect(() => {\n        if (!fastlane || !triggerAuthentication || !isEmail(email)) {\n            return;\n        }\n        // Only trigger on first load if fastlane_pageload is true\n        if (authOnLoad && isInitialRender.current) {\n            isInitialRender.current = false;\n            triggerAuthentication(email, false);\n            return;\n        }\n    }, [email, fastlane, triggerAuthentication]);\n\n\n    return (\n        <>\n            <button\n                id=\"wc-ppcp-fastlane-checkout\"\n                className=\"wc-ppcp-fastlane-button\"\n                disabled={openModal || processing}\n                onClick={onClick}>\n                <img className={'wc-ppcp-fastlane-icon'} src={getData('icon_url')}/>\n            </button>\n            <FastlaneModal\n                i18n={getData('i18n')}\n                open={openModal}\n                onClose={onClose}\n                fastlane={fastlane}\n                onTokenize={onTokenize}\n                shippingData={shippingData}/>\n        </>\n    );\n}","export * from './use-create-fastlane';\nexport * from './use-process-fastlane'","import {useEffect} from '@wordpress/element';\nimport {useSelect, useDispatch} from '@wordpress/data';\nimport {create} from '@braintree/fastlane';\nimport {STORE_KEY} from '@wc-braintree/block-data';\n\nexport const useCreateFastlane = ({clientToken, fraudEnabled, dataCollector}) => {\n\n    const fastlane = useSelect(select => {\n        return select(STORE_KEY).getFastlane();\n    });\n\n    const {\n        setFastlane,\n    } = useDispatch(STORE_KEY);\n\n    useEffect(() => {\n        create({\n            authorization: clientToken,\n            ...(dataCollector && {\n                deviceData: dataCollector.deviceData\n            }),\n        }).then(result => {\n            setFastlane(result);\n        });\n    }, [fraudEnabled, dataCollector]);\n\n    useEffect(() => {\n        setFastlane(fastlane);\n    }, []);\n\n    return fastlane;\n}","import {useEffect, useState, useCallback, useRef} from '@wordpress/element';\nimport {isEmail} from '@wordpress/url';\nimport {CART_STORE_KEY, PAYMENT_STORE_KEY} from '@woocommerce/block-data';\nimport {STORE_KEY} from '@wc-braintree/block-data';\nimport {useDispatch, useSelect} from '@wordpress/data';\nimport {extractFullName} from \"../../utils\";\n\nexport const useProcessFastlane = (\n    {\n        i18n,\n        email,\n        onError,\n        fastlane,\n        buttonRef,\n        shippingData,\n        openFastlaneModal\n    }) => {\n\n    const [processing, setProcessing] = useState(false);\n    const currentData = useRef({email, fastlane, buttonRef, onError, shippingData});\n\n    const {\n        emails,\n        isCustomerFound\n    } = useSelect(select => {\n        const store = select(STORE_KEY);\n        return {\n            emails: store.getCanceledEmails(),\n            isCustomerFound: store.isCustomerFound()\n        }\n    })\n\n    const {\n        setBillingAddress\n    } = useDispatch(CART_STORE_KEY);\n\n    const {\n        setPaymentToken,\n        addCanceledEmail,\n        setCustomerContextId\n    } = useDispatch(STORE_KEY);\n\n    const {\n        __internalSetActivePaymentMethod: setActivePaymentMethod\n    } = useDispatch(PAYMENT_STORE_KEY);\n\n    useEffect(() => {\n        currentData.current = {\n            ...currentData.current,\n            email,\n            onError,\n            fastlane,\n            buttonRef,\n            shippingData\n        }\n    }, [email, onError, fastlane, buttonRef, shippingData]);\n\n    const removeEmptyValues = (obj) => {\n        return Object.fromEntries(\n            Object.entries(obj).filter(([_, value]) =>\n                value !== undefined && value !== null && value !== ''\n            )\n        );\n    }\n\n    const updateShippingAddress = useCallback((address) => {\n        const {\n            shippingData\n        } = currentData.current;\n\n        const {\n            setShippingAddress\n        } = shippingData;\n\n        setShippingAddress(removeEmptyValues({\n            first_name: address?.firstName || '',\n            last_name: address?.lastName,\n            address_1: address?.streetAddress,\n            address_2: address?.extendedAddress,\n            city: address?.locality || '',\n            state: address?.region || '',\n            postcode: address?.postalCode || '',\n            country: address?.countryCodeAlpha2 || '',\n            phone: address?.phoneNumber || ''\n        }));\n    }, []);\n\n    const updateBillingAddress = useCallback((address) => {\n        setBillingAddress(removeEmptyValues({\n            first_name: address?.firstName || '',\n            last_name: address?.lastName,\n            address_1: address?.streetAddress,\n            address_2: address?.extendedAddress,\n            city: address?.locality || '',\n            state: address?.region || '',\n            postcode: address?.postalCode || '',\n            country: address?.countryCodeAlpha2 || '',\n            phone: address?.phoneNumber || ''\n        }));\n    }, [setBillingAddress]);\n\n    const scrollToElement = useCallback((selector, offset = 100) => {\n        const el = document.querySelector(selector);\n        if (!el) {\n            return;\n        }\n        const rect = el.getBoundingClientRect();\n        const scrollPosition = rect.top + window.scrollY - offset;\n        window.scrollTo({\n            behavior: 'smooth',\n            left: 0,\n            top: scrollPosition\n        });\n    }, []);\n\n    const triggerAuthentication = useCallback(async (email, showSignup = true) => {\n        const {\n            fastlane,\n            shippingData,\n        } = currentData.current;\n        const {\n            needsShipping\n        } = shippingData;\n        const {\n            profile,\n            identity\n        } = fastlane;\n\n        try {\n            setProcessing(true);\n            const {\n                customerContextId\n            } = await identity.lookupCustomerByEmail(email);\n\n            if (customerContextId) {\n                const {\n                    profileData,\n                    authenticationState\n                } = await identity.triggerAuthenticationFlow(customerContextId);\n                if (authenticationState === 'canceled') {\n                    addCanceledEmail(email);\n                    setCustomerContextId(null);\n                } else if (authenticationState === 'succeeded') {\n                    let {\n                        name,\n                        card,\n                        shippingAddress\n                    } = profileData;\n                    setCustomerContextId(customerContextId);\n\n                    if (needsShipping) {\n                        const {\n                            selectedAddress\n                        } = await profile.showShippingAddressSelector();\n                        if (!selectedAddress) {\n                            addCanceledEmail(email);\n                            setCustomerContextId(null);\n                            return;\n                        }\n                        shippingAddress = selectedAddress;\n                        updateShippingAddress(shippingAddress);\n                    }\n\n                    if (card?.paymentSource?.card?.billingAddress) {\n                        updateBillingAddress({\n                            ...name,\n                            ...card.paymentSource.card.billingAddress,\n                            phoneNumber: shippingAddress?.phoneNumber || null\n                        });\n                    }\n\n                    setPaymentToken(card);\n                    setActivePaymentMethod('braintree_cc');\n                    scrollToElement('#radio-control-wc-payment-method-options-braintree_cc');\n                }\n            } else if (showSignup) {\n                setCustomerContextId(null);\n                // display the Fastlane modal\n                const token = await openFastlaneModal();\n\n                if (token) {\n                    if (token?.paymentSource?.card?.billingAddress) {\n                        let address = token.paymentSource.card.billingAddress;\n                        if (token.paymentSource.card.billingAddress.toBtSdkType) {\n                            address = token.paymentSource.card.billingAddress.toBtSdkType();\n                        } else {\n                            const name = extractFullName(token.paymentSource.card.name);\n                            address = {\n                                firstName: name[0],\n                                lastName: name[1],\n                                ...address\n                            }\n                            updateShippingAddress(address);\n                        }\n                        updateBillingAddress(address);\n                    }\n\n                    setPaymentToken(token);\n                    setActivePaymentMethod('braintree_cc');\n                    scrollToElement('#radio-control-wc-payment-method-options-braintree_cc');\n                }\n            }\n        } catch (error) {\n            console.info(error);\n        } finally {\n            setProcessing(false);\n        }\n\n    }, [\n        scrollToElement,\n        openFastlaneModal,\n        updateBillingAddress,\n        updateShippingAddress\n    ]);\n\n    const onClick = useCallback(async (e) => {\n        e.preventDefault();\n        const {\n            email,\n            onError\n        } = currentData.current;\n\n        if (!email) {\n            return onError(i18n.email_empty);\n        }\n        if (!isEmail(email)) {\n            return onError(i18n.email_invalid);\n        }\n\n        await triggerAuthentication(email);\n\n    }, [\n        scrollToElement,\n        updateBillingAddress,\n        updateShippingAddress,\n        triggerAuthentication\n    ]);\n\n    return {\n        emails,\n        onClick,\n        processing,\n        isCustomerFound,\n        triggerAuthentication\n    }\n}","import {registerExpressPaymentMethod} from '@woocommerce/blocks-registry';\nimport {getSetting} from '@woocommerce/settings';\nimport ExpressPaymentComponent from \"./express-payment-component\";\nimport {PaymentMethod} from \"../../components\";\nimport {getSettings, isCheckoutPage} from \"../utils\";\n\nconst getData = getSettings('braintree_fastlane');\n\nconst data = getSetting('braintree_fastlane_data');\n\nif (isCheckoutPage()) {\n    registerExpressPaymentMethod({\n        name: 'braintree_fastlane',\n        canMakePayment: async () => {\n            return true;\n        },\n        content: <PaymentMethod content={ExpressPaymentComponent} getData={getData}/>,\n        edit: <PaymentMethod content={ExpressPaymentComponent} getData={getData}/>,\n        supports: {\n            features: data.features\n        }\n    })\n}","import {removeNumberPrecision, formatPrice, getShippingOptionId} from \"../utils\";\n\n\nexport const getDisplayItems = (cartTotalItems, unit = 2) => {\n    let items = [];\n    const keys = ['total_tax', 'total_shipping'];\n    cartTotalItems.forEach(item => {\n        if (0 < item.value || (item.key && keys.includes(item.key))) {\n            items.push({\n                label: item.label,\n                type: 'LINE_ITEM',\n                price: removeNumberPrecision(item.value, unit).toString()\n            });\n        }\n    })\n    return items;\n}\n\nexport const getShippingOptions = (shippingRates) => {\n    let options = [];\n    shippingRates.forEach((shippingPackage, idx) => {\n        let rates = shippingPackage.shipping_rates.map(rate => {\n            let txt = document.createElement('textarea');\n            txt.innerHTML = rate.name;\n            let price = formatPrice(rate.price, rate.currency_code);\n            return {\n                id: getShippingOptionId(idx, rate.rate_id),\n                label: txt.value,\n                description: `${price}`\n            }\n        });\n        options = [...options, ...rates];\n    });\n    return options;\n}\n\nexport const getSelectedShippingOptionId = (shippingRates) => {\n    let defaultSelectedOptionId = '';\n    shippingRates.forEach((shippingPackage, idx) => {\n        shippingPackage.shipping_rates.forEach(rate => {\n            if (rate.selected) {\n                defaultSelectedOptionId = getShippingOptionId(idx, rate.rate_id);\n            }\n        });\n    });\n    return defaultSelectedOptionId;\n}","export * from './use-create-payments-client';\nexport * from './use-handle-tokenization';","import {useState, useEffect, useRef} from '@wordpress/element';\nimport apiFetch from '@wordpress/api-fetch';\nimport google from '@googlepay';\nimport {usePaymentEventsHandler} from \"../../hooks\";\nimport {extractSelectedShippingOption} from \"../../utils\";\n\nexport const useCreatePaymentsClient = ({getData, shippingData, billing, eventRegistration}) => {\n    const {needsShipping} = shippingData;\n    const [paymentsClient, setPaymentsClient] = useState(null);\n    const {addShippingHandler} = usePaymentEventsHandler({billing, shippingData, eventRegistration});\n    const currentData = useRef({billing, shippingData});\n    useEffect(() => {\n        currentData.current = {billing, shippingData};\n    }, [billing, shippingData]);\n    useEffect(() => {\n        const args = {\n            environment: getData('googleEnvironment'),\n            merchantInfo: {\n                merchantName: getData('merchantName'),\n                merchantId: getData('googleMerchantId')\n            },\n            paymentDataCallbacks: {\n                onPaymentAuthorized: () => Promise.resolve({\n                    transactionState: \"SUCCESS\"\n                })\n            }\n        }\n        if (needsShipping) {\n            args.paymentDataCallbacks.onPaymentDataChanged = (data) => {\n                return new Promise((resolve, reject) => {\n                    const {shippingAddress, shippingOptionData} = data;\n                    const {shippingData} = currentData.current;\n                    let shippingOptionId = shippingOptionData?.id;\n                    const newAddress = {\n                        city: shippingAddress?.locality || '',\n                        state: shippingAddress?.administrativeArea || '',\n                        postcode: shippingAddress?.postalCode || '',\n                        country: shippingAddress?.countryCode || ''\n                    };\n\n                    apiFetch({\n                        method: 'POST',\n                        url: getData('routes').shipping,\n                        data: {\n                            payment_method: 'braintree_googlepay',\n                            address: newAddress,\n                            shipping_method: shippingOptionId\n                        }\n                    }).then(response => {\n                        if (response.code) {\n                            shippingOptionId = null;\n                            resolve(response.data.braintree_googlepay);\n                        } else {\n                            resolve(response.data.braintree_googlepay.requestUpdate);\n                        }\n                    }).catch(response => {\n                        resolve(response.data.braintree_googlepay);\n                    }).finally(() => {\n                        shippingData.setShippingAddress({...shippingData.shippingAddress, ...newAddress});\n                        if (shippingOptionId && shippingOptionId !== 'shipping_option_unselected') {\n                            shippingData.setSelectedRates(...extractSelectedShippingOption(shippingOptionId));\n                        }\n                    });\n                });\n            }\n        }\n        setPaymentsClient(new google.payments.api.PaymentsClient(args));\n    }, [\n        needsShipping,\n        addShippingHandler\n    ]);\n    return paymentsClient;\n}","import {useRef, useCallback, useEffect} from '@wordpress/element';\nimport {getDisplayItems, getShippingOptions, getSelectedShippingOptionId} from \"../helpers\";\nimport {\n    removeNumberPrecision,\n    extractFullName,\n    DEFAULT_BILLING_ADDRESS,\n    DEFAULT_SHIPPING_ADDRESS\n} from \"../../utils\";\nimport {usePaymentMethodDataContext} from \"../../context\";\n\nexport const useHandleTokenization = (\n    {\n        getData,\n        onClick,\n        onClose,\n        googlePayInstance,\n        paymentsClient,\n        billing,\n        shippingData\n    }) => {\n    const currentData = useRef({billing, shippingData});\n    const payloadData = useRef({});\n    const {setPaymentMethodNonce, onPaymentDataFilter} = usePaymentMethodDataContext();\n    useEffect(() => {\n        currentData.current = {billing, shippingData, onClick, onClose};\n    }, [\n        onClick,\n        onClose,\n        shippingData,\n        billing\n    ]);\n\n    useEffect(() => {\n        const unsubscribe = onPaymentDataFilter((data, {billing, shippingData}) => {\n            if (payloadData.current?.billingAddress) {\n                data.meta.billingAddress = {\n                    ...DEFAULT_BILLING_ADDRESS,\n                    ...payloadData.current.billingAddress,\n                    email: billing.billingAddress.email\n                };\n                if (payloadData.current.email) {\n                    data.meta.billingAddress.email = payloadData.current.email;\n                }\n            }\n            if (payloadData.current?.shippingAddress) {\n                data.meta.shippingAddress = {\n                    ...DEFAULT_SHIPPING_ADDRESS,\n                    ...shippingData.shippingAddress,\n                    ...payloadData.current.shippingAddress\n                }\n            }\n            return data;\n        });\n        return () => unsubscribe();\n    }, [onPaymentDataFilter]);\n\n    const handleClick = useCallback(() => {\n        const {billing, shippingData} = currentData.current;\n        const {billingAddress, currency, cartTotal, cartTotalItems} = billing;\n        const {needsShipping, shippingRates} = shippingData;\n        currentData.current.onClick();\n        const paymentDataRequestArgs = {\n            merchantInfo: {\n                merchantName: getData('googleMerchantName'),\n                merchantId: getData('googleMerchantId')\n            },\n            transactionInfo: {\n                countryCode: getData('countryCode'),\n                currencyCode: currency.code,\n                totalPriceStatus: 'FINAL',\n                totalPrice: removeNumberPrecision(cartTotal.value, currency.minorUnit).toString(),\n                totalPriceLabel: getData('totalPriceLabel'),\n                displayItems: getDisplayItems(cartTotalItems, currency.minorUnit)\n            },\n            emailRequired: !billingAddress.email,\n            callbackIntents: ['PAYMENT_AUTHORIZATION'],\n            shippingAddressRequired: needsShipping\n        };\n        if (needsShipping) {\n            paymentDataRequestArgs.shippingAddressParameters = {};\n            paymentDataRequestArgs.shippingOptionRequired = true;\n            paymentDataRequestArgs.callbackIntents = [...paymentDataRequestArgs.callbackIntents, 'SHIPPING_ADDRESS', 'SHIPPING_OPTION'];\n            const shippingOptions = getShippingOptions(shippingRates);\n            if (shippingOptions.length) {\n                paymentDataRequestArgs.shippingOptionParameters = {\n                    shippingOptions,\n                    defaultSelectedOptionId: getSelectedShippingOptionId(shippingRates)\n                }\n            }\n        }\n        const paymentDataRequest = googlePayInstance.createPaymentDataRequest(paymentDataRequestArgs);\n        paymentDataRequest.allowedPaymentMethods[0].parameters.assuranceDetailsRequired = true;\n        paymentDataRequest.allowedPaymentMethods[0].parameters.billingAddressRequired = true;\n        paymentDataRequest.allowedPaymentMethods[0].parameters.billingAddressParameters = {\n            format: 'FULL',\n            phoneNumberRequired: true\n        }\n        paymentsClient.loadPaymentData(paymentDataRequest).then(async (payload) => {\n            // parse the payload\n            if (payload?.paymentMethodData?.info?.billingAddress) {\n                const address = payload.paymentMethodData.info.billingAddress;\n                const [first_name, last_name] = extractFullName(address.name);\n                payloadData.current.billingAddress = {\n                    first_name,\n                    last_name,\n                    address_1: address.address1,\n                    address_2: address.address2,\n                    city: address.locality,\n                    state: address.administrativeArea,\n                    postcode: address.postalCode,\n                    country: address.countryCode,\n                    phone: billingAddress.phone\n                }\n                if (address.phoneNumber && !billingAddress.phone) {\n                    payloadData.current.billingAddress.phone = address.phoneNumber;\n                }\n            }\n            if (payload.shippingAddress) {\n                const address = payload.shippingAddress;\n                const [first_name, last_name] = extractFullName(address.name);\n                payloadData.current.shippingAddress = {\n                    first_name,\n                    last_name,\n                    address_1: address.address1,\n                    address_2: address.address2,\n                    city: address.locality,\n                    state: address.administrativeArea,\n                    postcode: address.postalCode,\n                    country: address.countryCode\n                };\n                if (payloadData.current?.billingAddress?.phone) {\n                    payloadData.current.shippingAddress.phone = payloadData.current.billingAddress.phone;\n                }\n            }\n            if (payload.email) {\n                payloadData.current.email = payload.email;\n            }\n            const data = await googlePayInstance.parseResponse(payload);\n            // set payment method\n            payloadData.current.paymentMethodNonce = data.nonce;\n            setPaymentMethodNonce(data.nonce);\n        }).catch(error => {\n            if (error?.statusCode === 'CANCELED') {\n                currentData.current.onClose();\n                return;\n            }\n            console.log(error);\n        });\n    }, [\n        paymentsClient,\n        googlePayInstance,\n        setPaymentMethodNonce\n    ]);\n    return handleClick;\n}\n\nexport default useHandleTokenization;","import {useState, useEffect, useRef, useCallback} from '@wordpress/element';\nimport {create as createGooglePay} from '@braintree/google-payment';\nimport {registerExpressPaymentMethod} from '@woocommerce/blocks-registry';\nimport {PaymentMethod} from \"../../components\";\nimport {getSettings, getClientToken, isCartPage, isCheckoutPage} from \"../utils\";\nimport google from '@googlepay';\nimport {useCreatePaymentsClient, useHandleTokenization} from \"./hooks\";\nimport {usePaymentMethodDataContext} from \"../context\";\nimport {useExpressBreakpointWidth} from \"../hooks\";\nimport GooglePayPreview from './preview';\n\nconst getData = getSettings('braintree_googlepay');\nlet canPay = null;\nconst paymentsClient = new google.payments.api.PaymentsClient({\n    environment: getData('googleEnvironment'),\n    merchantInfo: {\n        merchantName: getData('googleMerchantName'),\n        merchantId: getData('googleMerchantId')\n    }\n});\nconst GooglePayContainer = ({getData, billing, shippingData, eventRegistration, onClick, onClose}) => {\n    const el = useRef(null);\n    const [googlePayInstance, setGooglePayInstance] = useState(null);\n    useExpressBreakpointWidth({breakpoint: 375});\n    const {notice} = usePaymentMethodDataContext();\n    const paymentsClient = useCreatePaymentsClient({getData, billing, shippingData, eventRegistration});\n    const handleClick = useHandleTokenization({\n        getData,\n        onClick,\n        onClose,\n        googlePayInstance,\n        paymentsClient,\n        billing,\n        shippingData\n    });\n\n    const removeButton = useCallback((el) => {\n        while (el.lastChild) {\n            el.removeChild(el.lastChild);\n        }\n    }, []);\n\n    useEffect(() => {\n        createGooglePay({\n            authorization: getClientToken(),\n            googlePayVersion: 2,\n            googleMerchantId: getData('googleMerchantId')\n        }).then(instance => {\n            setGooglePayInstance(instance);\n        }).catch(error => notice.addNotice(error));\n    }, []);\n    useEffect(() => {\n        if (el.current && paymentsClient) {\n            removeButton(el.current);\n            const button = paymentsClient.createButton({\n                ...getData('buttonOptions'), ...{\n                    onClick: handleClick\n                }\n            });\n            if (getData('buttonShape') === 'rect') {\n                button.querySelector('button')?.classList?.remove('new_style');\n            } else {\n                button.querySelector('button')?.classList?.add('gpay-button-round');\n            }\n            el.current.append(button);\n        }\n    }, [\n        paymentsClient,\n        removeButton,\n        handleClick\n    ]);\n    return (\n        <div ref={el} className={'wc-braintree-blocks-gpay-button'}>\n\n        </div>\n    );\n}\nif ((isCartPage() && getData('expressCartEnabled')) || (isCheckoutPage() && getData('expressCheckoutEnabled'))) {\n    registerExpressPaymentMethod({\n        name: getData('name'),\n        canMakePayment: async () => {\n            if (canPay !== null) {\n                return canPay;\n            }\n            try {\n                const googlePayInstance = await createGooglePay({\n                    authorization: getClientToken(),\n                    googlePayVersion: 2,\n                    googleMerchantId: getData('googleMerchantId')\n                });\n                let result = await paymentsClient.isReadyToPay({\n                    apiVersion: 2,\n                    apiVersionMinor: 0,\n                    allowedPaymentMethods: googlePayInstance.createPaymentDataRequest().allowedPaymentMethods\n                });\n                if (result.result) {\n                    canPay = true;\n                } else {\n                    canPay = false;\n                }\n                return canPay;\n            } catch (error) {\n                return error;\n            }\n        },\n        content: <PaymentMethod content={GooglePayContainer}\n                                title={getData('title')}\n                                description={getData('description')}\n                                name={getData('name')}\n                                icon={getData('icon')}\n                                getData={getData}\n                                isExpress={true}/>,\n        edit: <GooglePayPreview src={getData('editor').icon}/>,\n        supports: {\n            showSavedCards: getData('features').includes('tokenization'),\n            showSaveOption: true,\n            features: getData('features')\n        }\n    });\n}\n","export default function GooglePayPreview({src}) {\n    return (\n        <div\n            className={`gpay-block-editor`}\n            style={{maxHeight: '40px', backgroundColor: '#000', borderRadius: '4px'}}>\n            <img\n                src={src}\n                style={{\n                    width: '100%',\n                    height: '40px',\n                    objectFit: 'contain'\n                }}/>\n        </div>\n    )\n}","export * from './use-process-payment';\nexport * from './use-three-d-secure';\nexport * from './use-process-payment-failure';\nexport * from './use-device-data';\nexport * from './use-notice-handler';\nexport * from './use-payment-events-handler';\nexport * from './use-breakpoint-width'\nexport * from './use-manage-fastlane-payment-token';\nexport * from './use-process-fastlane-payment-token';","import {useEffect, useState, useRef} from '@wordpress/element';\nimport {getFromCache, storeInCache} from \"../utils\";\nimport {usePaymentMethodDataContext} from \"../context\";\n\nexport const useBreakpointWidth = (\n    {\n        key,\n        el,\n        className = '',\n        breakpoint = 0\n    }) => {\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n    key = `${key}:breakpoint`;\n    useEffect(() => {\n        if (el) {\n            let minWidth = getFromCache(key, 0);\n            if (breakpoint < minWidth || !minWidth) {\n                minWidth = breakpoint;\n                storeInCache(key, minWidth);\n            }\n            if (el.clientWidth < minWidth) {\n                el.classList.add(className);\n            } else {\n                el.classList.remove(className);\n            }\n        }\n    }, [el, windowWidth]);\n\n    useEffect(() => {\n        const onWindowResize = (e) => setWindowWidth(window.innerWidth);\n        window.addEventListener('resize', onWindowResize);\n        return () => window.removeEventListener('resize', onWindowResize);\n    });\n}\n\nexport const useExpressBreakpointWidth = (\n    {\n        breakpoint,\n        className = 'wc-braintree-blocks-express-sm'\n    }) => {\n    const [element, setElement] = useState(null);\n    const {container} = usePaymentMethodDataContext();\n\n    useEffect(() => {\n        if (container) {\n            setElement(container.parentNode?.parentNode);\n        }\n    }, [container])\n\n    useBreakpointWidth({\n        key: 'express',\n        el: element,\n        breakpoint,\n        className\n    })\n}","import {useState, useEffect} from '@wordpress/element';\nimport {create} from '@braintree/data-collector';\nimport {usePaymentMethodDataContext} from \"../context\";\n\nexport const useDeviceData = (options = {}, skip = false) => {\n    const {client, notice, onPaymentDataFilter, fraud} = usePaymentMethodDataContext();\n    const enabled = fraud.enabled;\n    const {addNotice} = notice;\n    const [dataCollector, setDataCollector] = useState(null);\n\n    useEffect(() => {\n        if (enabled && client) {\n            create({\n                client,\n                kount: true, ...options\n            }, (error, instance) => {\n                if (error) {\n                    addNotice(error);\n                } else {\n                    setDataCollector(instance);\n                }\n            });\n        }\n    }, [enabled, client, addNotice]);\n\n    useEffect(() => {\n        if (!skip) {\n            const unsubscribe = onPaymentDataFilter((data, {name}) => {\n                data.meta.paymentMethodData[`${name}_device_data`] = dataCollector?.deviceData;\n                return data;\n            }, 10);\n            return () => unsubscribe();\n        }\n    }, [skip, dataCollector, onPaymentDataFilter]);\n\n    return dataCollector;\n}\n\nexport default useDeviceData;","import {useCallback} from '@wordpress/element';\nimport {useDispatch} from '@wordpress/data';\nimport {CART_STORE_KEY} from '@woocommerce/block-data';\nimport {STORE_KEY} from '@wc-braintree/block-data';\nimport {extractFullName} from '../utils';\nimport {setCustomerContextId} from \"../../data/checkout/actions\";\n\nexport const useManageFastlanePaymentToken = (\n    {\n        fastlane\n    }) => {\n\n    const {\n        setPaymentToken,\n        setCustomerContextId\n    } = useDispatch(STORE_KEY);\n\n    const {\n        setBillingAddress\n    } = useDispatch(CART_STORE_KEY);\n\n    const {\n        createErrorNotice\n    } = useDispatch('core/notices');\n\n    const onCancel = useCallback(() => {\n        setPaymentToken(null);\n        setCustomerContextId(null);\n    }, []);\n\n    const onChangePaymentMethod = useCallback(async () => {\n        try {\n            const {\n                selectedCard,\n                selectionChanged\n            } = await fastlane.profile.showCardSelector();\n\n            if (selectedCard && selectionChanged) {\n                setPaymentToken(selectedCard);\n\n                if (selectedCard?.paymentSource?.card?.billingAddress) {\n                    const name = selectedCard.paymentSource.card.name;\n                    const [firstName, lastName] = extractFullName(name);\n                    const address = {\n                        firstName,\n                        lastName,\n                        ...selectedCard.paymentSource.card.billingAddress\n                    };\n\n                    setBillingAddress({\n                        first_name: address.firstName || '',\n                        last_name: address.lastName || '',\n                        address_1: address?.streetAddress || '',\n                        address_2: address?.extendedAddress || '',\n                        city: address?.locality || '',\n                        state: address?.region || '',\n                        postcode: address?.postalCode || '',\n                        country: address?.countryCodeAlpha2 || '',\n                    });\n                }\n            }\n        } catch (error) {\n            createErrorNotice(error.message, {\n                id: 'wc-ppcp-tokenize-error',\n                context: 'wc/checkout/payments'\n            });\n        }\n    }, [fastlane]);\n\n    return {\n        onCancel,\n        onChangePaymentMethod\n    }\n\n}","import {useState, useCallback} from '@wordpress/element';\nimport {getErrorMessage} from \"../utils\";\n\nexport const useNoticeHandler = ({isExpress, setExpressPaymentError}) => {\n    const [notice, setNotice] = useState(null);\n    const addNotice = useCallback((error, type = 'error', isDismissible = true) => {\n        if (isExpress && type == 'error') {\n            setExpressPaymentError(getErrorMessage(error));\n        } else {\n            setNotice({\n                message: getErrorMessage(error),\n                type,\n                isDismissible\n            });\n        }\n\n    }, [setNotice, isExpress, setExpressPaymentError]);\n    const removeNotice = useCallback(() => setNotice(null), [setNotice]);\n    return [\n        notice,\n        addNotice,\n        removeNotice\n    ]\n}\n\nexport default useNoticeHandler;","import {useEffect, useRef, useCallback, useMemo} from '@wordpress/element';\n\nexport const usePaymentEventsHandler = (\n    {\n        billing,\n        shippingData,\n        eventRegistration\n    }) => {\n    const currentData = useRef({billing, shippingData});\n    const {onShippingRateSuccess, onShippingRateFail, onShippingRateSelectSuccess} = eventRegistration;\n    const handlers = useRef(new Map([\n        ['shippingHandler', []],\n        ['shippingMethodHandler', []],\n        ['shippingAddressHandler', []]\n    ]));\n    useEffect(() => {\n        currentData.current = {billing, shippingData};\n    });\n\n    const hasShippingOptions = (shippingRates) => shippingRates.map(rate => rate?.shipping_rates.length > 0).filter(Boolean).length > 0;\n\n    const handleShippingChange = useCallback(async () => {\n        const {billing, shippingData} = currentData.current;\n        const handler = handlers.current.get('shippingHandler');\n        if (handler.length > 0 && !shippingData.isSelectingRate && !shippingData.shippingRatesLoading) {\n            const success = hasShippingOptions(shippingData.shippingRates);\n            while (handler.length) {\n                const callback = handler.pop();\n                await Promise.resolve(callback(success, {billing, shippingData}));\n            }\n        }\n    }, []);\n\n    const handleShippingRateFail = useCallback(() => {\n        const {billing, shippingData} = currentData.current;\n        const handler = handlers.current.get('shippingHandler');\n        while (handler.length) {\n            const callback = handler.pop();\n            callback(false, {billing, shippingData});\n        }\n    }, []);\n\n    const addPaymentEventHandler = useCallback(type => (callback, execute = false) => {\n        const handler = handlers.current.get(type);\n        handler.push(callback);\n        if (execute) {\n            handleShippingChange();\n        }\n    }, [\n        handleShippingChange,\n        handlers.current\n    ]);\n\n    const addShippingHandler = useCallback(addPaymentEventHandler('shippingHandler'), [addPaymentEventHandler]);\n    const addShippingMethodHandler = useCallback(addPaymentEventHandler('shippingMethodHandler'), [addPaymentEventHandler]);\n    const addShippingAddressHandler = useCallback(addPaymentEventHandler('shippingAddressHandler'), [addPaymentEventHandler]);\n\n    useEffect(() => {\n        const unsubscribeShippingRateSuccess = onShippingRateSuccess(handleShippingChange);\n        const unsubscribeShippingRateSelectSuccess = onShippingRateSelectSuccess(handleShippingChange);\n        const unsubscribeShippingRateFail = onShippingRateFail(handleShippingRateFail);\n        return () => {\n            unsubscribeShippingRateSuccess();\n            unsubscribeShippingRateSelectSuccess();\n            unsubscribeShippingRateFail();\n        }\n    }, [\n        onShippingRateSuccess,\n        onShippingRateSelectSuccess,\n        onShippingRateFail\n    ]);\n\n    return {\n        addShippingHandler,\n        addShippingMethodHandler,\n        addShippingAddressHandler\n    }\n}","import {useEffect, useRef, useCallback} from '@wordpress/element';\nimport apiFetch from '@wordpress/api-fetch';\nimport {BraintreeError, ensureErrorResponse} from \"../utils\";\n\nexport const useProcessFastlanePaymentToken = (\n    {\n        token,\n        responseTypes,\n        shouldSavePayment,\n        onPaymentDataFilter\n    }) => {\n\n    const currentData = useRef({token});\n\n    useEffect(() => {\n        currentData.current = {token, responseTypes};\n    }, [token, responseTypes]);\n\n    useEffect(() => {\n        const unsubscribe = onPaymentDataFilter(async (data) => {\n            const {\n                token,\n                responseTypes\n            } = currentData.current;\n            try {\n                return {\n                    meta: {\n                        ...data.meta,\n                        paymentMethodData: {\n                            braintree_cc_nonce_key: token.id,\n                            braintree_cc_save_method: shouldSavePayment\n                        }\n                    }\n                }\n            } catch (error) {\n                return ensureErrorResponse(responseTypes, error);\n            }\n        });\n        return unsubscribe;\n    }, [shouldSavePayment, onPaymentDataFilter]);\n\n}","import {useEffect} from '@wordpress/element';\n\nexport const useProcessPaymentFailure = ({event, responseTypes, messageContext = null}) => {\n    useEffect(() => {\n        const unsubscribe = event((data) => {\n            if (data?.processingResponse?.paymentDetails?.braintreeErrorMessage) {\n                const message = data.processingResponse.paymentDetails.braintreeErrorMessage;\n                return {\n                    type: responseTypes.ERROR,\n                    message,\n                    messageContext\n                }\n            }\n            return null;\n        });\n        return () => unsubscribe();\n    }, [event]);\n}\n\nexport default useProcessPaymentFailure;","import {useEffect, useRef} from '@wordpress/element';\nimport {ensureErrorResponse, ensureSuccessResponse} from \"../utils\";\nimport {useThreeDSecure} from \"./use-three-d-secure\";\nimport {useDeviceData} from \"./use-device-data\";\nimport {usePaymentMethodDataContext} from '../context';\n\nexport const useProcessPayment = (\n    {\n        name,\n        billing,\n        useFastlane = false,\n        shippingData,\n        responseTypes,\n        onPaymentSetup,\n        activePaymentMethod,\n        advancedFraudOptions = {}\n    }) => {\n    const currentData = useRef({shippingData, billing, name, activePaymentMethod});\n    const {\n        paymentMethodNonce,\n        paymentHandler,\n        doPaymentDataFilter\n    } = usePaymentMethodDataContext();\n\n    useThreeDSecure({name, skip: useFastlane});\n\n    useDeviceData(advancedFraudOptions);\n\n    useEffect(() => {\n        currentData.current = {shippingData, billing, name, activePaymentMethod, paymentMethodNonce};\n    });\n\n    useEffect(() => {\n        const unsubscribe = onPaymentSetup(async () => {\n            if (currentData.current.activePaymentMethod == currentData.current.name) {\n                try {\n                    const nonce = currentData.current?.paymentMethodNonce || '';\n                    let data = {meta: {paymentMethodData: {[`${name}_nonce_key`]: nonce}}}, result;\n                    if (paymentHandler) {\n                        result = await Promise.resolve(paymentHandler(currentData.current));\n                        if (result?.nonce) {\n                            data.meta.paymentMethodData[`${name}_nonce_key`] = result.nonce;\n                        }\n                    }\n                    result = await doPaymentDataFilter(data, {...currentData.current, ...{result}});\n                    return ensureSuccessResponse(responseTypes, result);\n                } catch (error) {\n                    return ensureErrorResponse(responseTypes, error);\n                }\n            }\n        });\n        return () => unsubscribe();\n    }, [\n        onPaymentSetup,\n        doPaymentDataFilter,\n        paymentHandler\n    ]);\n}\n\nexport default useProcessPayment;","import {useState, useEffect, useCallback} from '@wordpress/element';\nimport {__} from '@wordpress/i18n';\nimport {create} from '@braintree/three-d-secure';\nimport {removeNumberPrecision} from \"../utils\";\nimport {usePaymentMethodDataContext} from \"../context\";\nimport {getSettings} from '../utils';\n\nexport const useThreeDSecure = ({name, skip = false, vaulted = false}) => {\n    const settings = getSettings(name);\n    const {client, notice, onPaymentDataFilter, threeDSecureEnabled} = usePaymentMethodDataContext();\n    const {addNotice} = notice;\n    const [instance, setInstance] = useState(null);\n    useEffect(() => {\n        if ((threeDSecureEnabled || vaulted) && client && !instance) {\n            try {\n                create({\n                    version: 2,\n                    client\n                }, (error, instance) => {\n                    if (!error) {\n                        setInstance(instance);\n                    } else {\n                        addNotice(error);\n                    }\n                });\n            } catch (error) {\n                console.log(error);\n            }\n        }\n    }, [\n        instance,\n        threeDSecureEnabled,\n        vaulted,\n        client,\n        addNotice\n    ]);\n\n    useEffect(() => {\n        if (!skip && instance) {\n            const unsubscribe = onPaymentDataFilter((data, {result, name, shippingData, billing}) => {\n                return new Promise((resolve, reject) => {\n                    const {needsShipping, shippingAddress} = shippingData;\n                    const {billingAddress, cartTotal, currency} = billing;\n                    instance.verifyCard({\n                        amount: removeNumberPrecision(cartTotal.value, currency.minorUnit),\n                        nonce: result.nonce,\n                        bin: result?.details?.bin,\n                        email: billingAddress.email || '',\n                        challengeRequested: settings('challengeRequested'),\n                        collectDeviceData: true,\n                        billingAddress: {\n                            givenName: billingAddress.first_name,\n                            surname: billingAddress.last_name,\n                            phoneNumber: billingAddress.phone,\n                            streetAddress: billingAddress.address_1?.slice(0, 50),\n                            extendedAddress: billingAddress.address_2?.slice(0, 50),\n                            locality: billingAddress.city?.slice(0, 50),\n                            region: billingAddress.state,\n                            postalCode: billingAddress.postcode,\n                            countryCodeAlpha2: billingAddress.country\n                        },\n                        additionalInformation: needsShipping ? {\n                            shippingGivenName: shippingAddress.first_name,\n                            shippingSurname: shippingAddress.last_name,\n                            shippingAddress: {\n                                streetAddress: shippingAddress.address_1?.slice(0, 50),\n                                extendedAddress: shippingAddress.address_2?.slice(0, 50),\n                                locality: shippingAddress.city?.slice(0, 50),\n                                region: shippingAddress.state,\n                                postalCode: shippingAddress.postcode,\n                                countryCodeAlpha2: shippingAddress.country\n                            },\n                            ipAddress: settings('ipAddress')\n                        } : {\n                            ipAddress: settings('ipAddress')\n                        },\n                        onLookupComplete: (data, next) => next()\n                    }, (error, payload) => {\n                        if (error) {\n                            reject(error);\n                        } else if (payload?.threeDSecureInfo?.status === 'challenge_required') {\n                            // 3DS was cancelled so teardown and set to null.\n                            instance.teardown().then(() => setInstance(null));\n                            reject({\n                                message: __('3DS authorization cancelled.', 'woo-payment-gateway')\n                            });\n                        } else {\n                            data.meta.paymentMethodData[`${name}_nonce_key`] = payload.nonce;\n                            resolve(data);\n                        }\n                    });\n                })\n            }, 20);\n            return () => unsubscribe();\n        }\n    }, [skip, instance]);\n\n    return instance;\n}\n\nexport default useThreeDSecure;","export * from './use-load-paypal';\nexport * from './use-paypal-options';","import {useState, useEffect, useRef} from '@wordpress/element';\n\nexport const useLoadPayPal = (\n    {\n        paypalCheckoutInstance,\n        currency,\n        addNotice,\n        clientToken,\n        intent,\n        flow,\n        partnerCode\n    }) => {\n    const [paypal, setPayPal] = useState(null);\n    const currentData = useRef({});\n    useEffect(() => {\n        currentData.current.addNotice = addNotice;\n    }, [\n        addNotice\n    ]);\n    useEffect(() => {\n        if (paypalCheckoutInstance) {\n            if (window.paypal) {\n                setPayPal(window.paypal)\n            } else {\n                clientToken = JSON.parse(window.atob(clientToken));\n                const args = {\n                    'client-id': clientToken?.paypal?.clientId,\n                    commit: true,\n                    intent: flow === 'vault' ? 'tokenize' : intent,\n                    currency,\n                    vault: flow === 'vault' ? true : false,\n                    components: 'buttons,messages',\n                    dataAttributes: {\n                        'partner-attribution-id': partnerCode\n                    }\n                };\n                paypalCheckoutInstance.loadPayPalSDK(args).then(() => {\n                    setPayPal(window.paypal)\n                }).catch(error => {\n                    currentData.current.addNotice(error);\n                });\n            }\n        }\n    }, [paypalCheckoutInstance]);\n    return paypal;\n}\n\nexport default useLoadPayPal;","import {useEffect, useMemo, useCallback, useRef} from '@wordpress/element';\nimport {__} from '@wordpress/i18n';\nimport {isEqual, isEmpty} from 'lodash';\nimport {getSetting} from '@woocommerce/settings';\nimport {\n    extractSelectedShippingOption,\n    removeNumberPrecision,\n    getCartTotalItem,\n    extractFullName,\n    getShippingOptionId,\n    cartContainsSubscription,\n    DEFAULT_BILLING_ADDRESS,\n    DEFAULT_SHIPPING_ADDRESS\n} from \"../../utils\";\nimport {usePaymentEventsHandler} from \"../../hooks\";\nimport {getSelectedShippingOptionId} from \"../../googlepay/helpers\";\nimport {usePaymentMethodDataContext} from \"../../context\";\n\nexport const usePayPalOptions = (\n    {\n        getData,\n        addNotice,\n        paypal,\n        paypalCheckoutInstance,\n        billing,\n        shippingData,\n        eventRegistration,\n        emitResponse,\n        onClick,\n        onClose\n    }) => {\n    const {cartTotal, currency} = billing;\n    const {needsShipping} = shippingData;\n    const {noticeContexts, responseTypes} = emitResponse;\n    const currentData = useRef({billing, shippingData});\n    const paymentData = useRef({});\n    const {addShippingHandler} = usePaymentEventsHandler({billing, shippingData, eventRegistration});\n    const {setPaymentMethodNonce, onPaymentDataFilter, onSubmit} = usePaymentMethodDataContext();\n    const {onCheckoutFail} = eventRegistration;\n\n    useEffect(() => {\n        const unsubscribe = onCheckoutFail(() => {\n            if (paymentData.current.incompleteBilling) {\n                return {\n                    type: responseTypes.ERROR,\n                    message: __('Please complete all required billing fields below then click Place Order.', 'woo-payment-gateway'),\n                    messageContext: noticeContexts.EXPRESS_PAYMENTS\n                };\n            }\n            return null;\n        });\n        return () => unsubscribe();\n    }, [\n        onCheckoutFail,\n        responseTypes,\n        noticeContexts\n    ]);\n\n    const getButtonStyle = useCallback((type) => {\n        const baseStyle = getData('buttonStyle');\n        switch (type) {\n            case paypal.FUNDING.PAYPAL:\n                return baseStyle;\n            case paypal.FUNDING.PAYLATER:\n                return {...baseStyle, ...getData('bnplButtonStyle')};\n            default:\n                return baseStyle;\n\n        }\n    }, [paypal]);\n\n    const getFormattedShippingOptions = (shippingRates) => {\n        let options = [];\n        shippingRates.forEach((shippingPackage, idx) => {\n            let rates = shippingPackage.shipping_rates.map(rate => {\n                let txt = document.createElement('textarea');\n                txt.innerHTML = rate.name;\n                return {\n                    id: getShippingOptionId(idx, rate.rate_id),\n                    label: txt.value,\n                    type: 'SHIPPING',\n                    selected: rate.selected,\n                    amount: {\n                        value: removeNumberPrecision(rate.price, rate.currency_minor_unit),\n                        currency_code: rate.currency_code\n                    }\n                }\n            });\n            options = [...options, ...rates];\n        });\n        return options;\n    };\n\n    useEffect(() => {\n        currentData.current = {billing, shippingData, onClick, onClose, onSubmit, addNotice};\n    }, [\n        billing,\n        shippingData,\n        onClick\n    ]);\n\n    useEffect(() => {\n        const unsubscribe = onPaymentDataFilter((data, {billing, shippingData}) => {\n            data.meta.paymentMethodData[`${getData('name')}_nonce_key`] = paymentData.current.nonce;\n            data.meta.billingAddress = {\n                ...DEFAULT_BILLING_ADDRESS,\n                ...billing.billingAddress,\n                ...paymentData.current.billingAddress\n            };\n            data.meta.shippingAddress = {\n                ...DEFAULT_SHIPPING_ADDRESS,\n                ...shippingData.shippingAddress,\n                ...paymentData.current.shippingAddress\n            }\n\n            return data;\n        }, 5);\n        return () => unsubscribe();\n    }, [onPaymentDataFilter]);\n\n    const onShippingChange = useCallback((actions, selectedShippingOption, shippingDataEqual, resolve) => (success, {billing, shippingData}) => {\n        const {currency, cartTotal, cartTotalItems} = billing;\n        const {shippingRates} = shippingData;\n        if (success) {\n            // create the patch\n            const patch = [{\n                'op': 'replace',\n                'path': '/purchase_units/@reference_id==\\'default\\'/amount',\n                'value': {\n                    'currency_code': currency.code,\n                    'value': removeNumberPrecision(cartTotal.value, 2),\n                    'breakdown': {\n                        'item_total': {\n                            'currency_code': currency.code,\n                            'value': removeNumberPrecision(getCartTotalItem('total_items', cartTotalItems), currency.minorUnit) +\n                                removeNumberPrecision(getCartTotalItem('total_fees', cartTotalItems), currency.minorUnit)\n                        },\n                        'shipping': {\n                            'currency_code': currency.code,\n                            'value': removeNumberPrecision(getCartTotalItem('total_shipping', cartTotalItems), currency.minorUnit)\n                        },\n                        'tax_total': {\n                            'currency_code': currency.code,\n                            'value': removeNumberPrecision(getCartTotalItem('total_tax', cartTotalItems), currency.minorUnit)\n                        },\n                        'shipping_discount': {\n                            'currency_code': currency.code,\n                            'value': removeNumberPrecision(getCartTotalItem('total_discount', cartTotalItems), currency.minorUnit)\n                        }\n                    }\n                }\n            }, {\n                'op': !selectedShippingOption ? 'add' : 'replace',\n                'path': '/purchase_units/@reference_id==\\'default\\'/shipping/options',\n                'value': getFormattedShippingOptions(shippingRates)\n            }];\n            return actions.order.patch(patch).then(() => {\n                resolve();\n                actions.resolve()\n            });\n        } else {\n            resolve();\n            return actions.reject();\n        }\n    }, []);\n\n    const options = useMemo(() => {\n        if (paypal && paypalCheckoutInstance) {\n            const options = [];\n            const sources = [paypal.FUNDING.PAYPAL];\n            if (getData('bnplEnabled')) {\n                sources.push(paypal.FUNDING.PAYLATER);\n            }\n            for (let fundingSource of sources) {\n                const option = {\n                    fundingSource,\n                    style: getButtonStyle(fundingSource),\n                    onError: (error) => currentData.current.addNotice(error),\n                    onClick: () => {\n                        currentData.current.onClick();\n                    },\n                    onApprove: (data, actions) => {\n                        return paypalCheckoutInstance.tokenizePayment(data).then(response => {\n                            const {billingAddress} = currentData.current.billing;\n                            const {needsShipping} = currentData.current.shippingData;\n                            // set shipping address\n                            paymentData.current = {nonce: response.nonce, billingAddress: {}};\n                            if (response?.details?.billingAddress) {\n                                const address = response.details.billingAddress;\n                                paymentData.current.billingAddress = {\n                                    address_1: address.line1,\n                                    address_2: address.line2,\n                                    city: address.city,\n                                    state: address.state,\n                                    postcode: address.postalCode,\n                                    country: address.countryCode\n                                }\n                            }\n                            if (!isEmpty(response?.details?.shippingAddress)) {\n                                const {shippingAddress} = response.details;\n                                const [first_name, last_name] = extractFullName(shippingAddress.recipientName);\n                                paymentData.current.shippingAddress = {\n                                    first_name,\n                                    last_name,\n                                    address_1: shippingAddress.line1 || '',\n                                    address_2: shippingAddress.line2 || '',\n                                    city: shippingAddress.city || '',\n                                    state: shippingAddress.state || '',\n                                    postcode: shippingAddress.postalCode || '',\n                                    country: shippingAddress.countryCode || ''\n                                }\n                                if (isEmpty(paymentData.current.billingAddress)) {\n                                    paymentData.current.billingAddress = paymentData.current.shippingAddress;\n                                }\n                                if (response.details?.phone) {\n                                    paymentData.current.shippingAddress.phone = response.details.phone;\n                                }\n                            }\n                            if (response.details?.phone) {\n                                paymentData.current.billingAddress.phone = response.details.phone;\n                            }\n                            if (response.details?.email) {\n                                paymentData.current.billingAddress.email = response.details.email;\n                            }\n                            if (response.details?.firstName) {\n                                paymentData.current.billingAddress.first_name = response.details.firstName;\n                            }\n                            if (response.details?.lastName) {\n                                paymentData.current.billingAddress.last_name = response.details.lastName;\n                            }\n                            if (!paymentData.current.billingAddress.address_1 && !billingAddress.address_1) {\n                                paymentData.current.incompleteBilling = true;\n                            }\n                            if (cartContainsSubscription() && needsShipping) {\n                                currentData.current.addNotice(__('Please select a shipping option then click Place Order to complete your payment.', 'woo-payment-gateway'), 'info');\n                            } else {\n                                setPaymentMethodNonce(response.nonce);\n                            }\n                        });\n                    },\n                    createOrder: () => {\n                        return paypalCheckoutInstance.createPayment({\n                            flow: cartContainsSubscription() ? 'vault' : 'checkout',\n                            intent: getData('intent'),\n                            currency: currency.code,\n                            displayName: getData('displayName'),\n                            amount: removeNumberPrecision(cartTotal.value, currency.minorUnit),\n                            enableShippingAddress: needsShipping,\n                            shippingAddressEditable: needsShipping\n                        }).then(id => {\n                            return id;\n                        }).catch(error => {\n                            console.log(error);\n                        })\n                    },\n                    onCancel: () => {\n                        currentData.current.onClose();\n                    }\n                }\n                if (cartContainsSubscription()) {\n                    option.createBillingAgreement = option.createOrder;\n                    delete (option.createOrder);\n                }\n                // can't update shipping options when using billing agreements.\n                if (needsShipping && !option.hasOwnProperty('createBillingAgreement')) {\n                    option.onShippingChange = (data, actions) => {\n                        const {shipping_address: address, selected_shipping_option} = data;\n                        const selectedShippingOption = selected_shipping_option?.id;\n                        const shippingData = currentData.current.shippingData;\n                        const {shippingAddress} = shippingData;\n                        const {city, state, postcode, country} = shippingAddress;\n                        const shippingOptionId = getSelectedShippingOptionId(currentData.current.shippingData.shippingRates);\n                        const newAddress = {\n                            city: address.city || '',\n                            state: address.state || '',\n                            postcode: address.postal_code || '',\n                            country: address.country_code || ''\n                        }\n                        const isShippingOptionEqual = selectedShippingOption == null || selectedShippingOption == shippingOptionId;\n                        const isAddressEqual = isEqual({\n                            city, state, postcode, country\n                        }, newAddress);\n                        const shippingDataEqual = isAddressEqual && isShippingOptionEqual;\n                        if (selectedShippingOption) {\n                            shippingData.setSelectedRates(...extractSelectedShippingOption(selectedShippingOption));\n                        }\n                        shippingData.setShippingAddress({...shippingAddress, ...newAddress});\n                        return new Promise(resolve => {\n                            addShippingHandler(onShippingChange(actions, selected_shipping_option?.id, shippingDataEqual, resolve), shippingDataEqual);\n                        });\n                    }\n                }\n                let button = paypal.Buttons(option);\n                if (button.isEligible()) {\n                    options.push(option);\n                }\n            }\n            return options;\n        }\n    }, [\n        paypal,\n        paypalCheckoutInstance,\n        needsShipping,\n        onShippingChange,\n        addShippingHandler,\n        setPaymentMethodNonce\n    ]);\n    return options;\n}\n\nexport default usePayPalOptions;","import {useState, useEffect, useRef, useCallback} from '@wordpress/element';\nimport {registerExpressPaymentMethod} from '@woocommerce/blocks-registry';\nimport {ExperimentalOrderMeta, TotalsWrapper} from '@woocommerce/blocks-checkout';\nimport {registerPlugin} from '@wordpress/plugins';\nimport {create as createPayPalCheckout} from '@braintree/paypal-checkout';\nimport {getClientToken, getSettings, getMerchantAccount, cartContainsSubscription, isCartPage, isCheckoutPage} from \"../utils\";\nimport {Notice, PaymentMethod} from \"../../components\";\nimport {usePaymentMethodDataContext} from \"../context\";\nimport {useLoadPayPal, usePayPalOptions} from \"./hooks\";\nimport {useExpressBreakpointWidth} from \"../hooks\";\nimport PayPalPreview from './preview';\n\nconst getData = getSettings('braintree_paypal');\n\nconst PayPalContainer = ({billing, shippingData, eventRegistration, emitResponse, onClick, onClose}) => {\n    const {currency} = billing;\n    const {notice} = usePaymentMethodDataContext();\n    const {addNotice} = notice;\n    const [paypalCheckoutInstance, setPayPalCheckoutInstance] = useState(null);\n    const [isPayPalButton, setIsPayPalButton] = useState(false);\n    const paypalButton = useRef();\n    useExpressBreakpointWidth({breakpoint: 375});\n    const paypal = useLoadPayPal({\n        paypalCheckoutInstance,\n        currency: currency.code,\n        clientToken: getClientToken(),\n        addNotice,\n        intent: getData('intent'),\n        flow: cartContainsSubscription() ? 'vault' : 'checkout',\n        partnerCode: getData('partnerCode')\n    });\n    const options = usePayPalOptions({\n        getData,\n        addNotice,\n        paypal,\n        paypalCheckoutInstance,\n        billing,\n        shippingData,\n        eventRegistration,\n        emitResponse,\n        onClick,\n        onClose\n    })\n    useEffect(() => {\n        createPayPalCheckout({\n            authorization: getClientToken(),\n            merchantAccountId: getMerchantAccount(currency.code)\n        }).then(instance => {\n            setPayPalCheckoutInstance(instance)\n        }).catch(error => {\n            addNotice(error)\n        });\n    }, []);\n\n    useEffect(() => {\n        if (paypal) {\n            paypal.Buttons.driver(\"react\", {React, ReactDOM});\n            paypalButton.current = paypal.Buttons.driver(\"react\", {React, ReactDOM});\n            setIsPayPalButton(true);\n        }\n    }, [paypal]);\n    const PayPalButton = paypalButton.current;\n    const BUTTON = isPayPalButton && options ? options.map(option => {\n        return <PayPalButton key={option.fundingSource} {...option}/>\n    }) : null;\n    return (\n        <>\n            {notice?.notice && <Notice notice={notice.notice} onRemove={notice.removeNotice}/>}\n            {BUTTON}\n        </>\n    )\n}\n\nif ((isCartPage() && getData('expressCartEnabled')) || (isCheckoutPage() && getData('expressCheckoutEnabled'))) {\n    registerExpressPaymentMethod({\n        name: getData('name'),\n        canMakePayment: () => {\n            return true;\n        },\n        content: <PaymentMethod content={PayPalContainer}\n                                title={getData('title')}\n                                description={getData('description')}\n                                name={getData('name')}\n                                icon={getData('icon')}\n                                getData={getData}\n                                isExpress={true}\n                                advancedFraudOptions={{paypal: true}}/>,\n        edit: <PayPalPreview src={getData('editor').icon}/>,\n        supports: {\n            showSavedCards: getData('features').includes('tokenization'),\n            showSaveOption: true,\n            features: getData('features')\n        }\n    });\n}\n\nconst OrderItemMessaging = ({cart, extensions, context}) => {\n    const {cartTotals} = cart;\n    const {currency_code: currency, total_price} = cartTotals;\n    const [paypalCheckout, setPayPalCheckout] = useState();\n    const currencies = getData('payLaterMsgCurrencies');\n    const isAvailable = getData('paylaterMsgEnabled') && currencies.includes(currency) && !cartContainsSubscription();\n    const container = useRef(null);\n    if (!isAvailable) {\n        return null;\n    }\n    useEffect(() => {\n        createPayPalCheckout({\n            authorization: getClientToken(),\n            merchantAccountId: getMerchantAccount(currency)\n        }).then((instance) => setPayPalCheckout(instance)).catch(() => {\n        });\n    }, []);\n    const paypal = useLoadPayPal({\n        paypalCheckoutInstance: paypalCheckout,\n        currency,\n        addNotice: null,\n        clientToken: getClientToken(),\n        intent: getData('intent'),\n        flow: 'checkout',\n        partnerCode: getData('partnerCode')\n    });\n\n    useEffect(() => {\n        if (paypal) {\n            paypal.Messages({\n                amount: total_price / (10 ** cartTotals.currency_minor_unit),\n                currency,\n                placement: 'checkout',\n                style: {\n                    layout: 'text',\n                    logo: {\n                        type: 'primary',\n                        position: 'left'\n                    },\n                    text: {color: getData('paylaterTxtColor')}\n                }\n            }).render(container.current);\n        }\n    }, [paypal, total_price]);\n    return (\n        <TotalsWrapper>\n            <div className='wc-block-components-totals-item'>\n                <div ref={container} className='paypal-msg-container'></div>\n            </div>\n        </TotalsWrapper>\n    )\n}\n\nconst render = () => {\n    return (\n        <ExperimentalOrderMeta>\n            <OrderItemMessaging/>\n        </ExperimentalOrderMeta>\n    )\n}\n\n\nregisterPlugin('wc-braintree', {\n    render,\n    scope: 'woocommerce-checkout'\n});\n","export default function PayPalPreview({src}) {\n    return (\n        <div\n            className='paypal-block-editor'\n            style={{\n                height: '40px',\n                maxHeight: '40px',\n                backgroundColor: '#ffc439',\n                borderRadius: '4px',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center'\n            }}>\n            <img\n                src={src}\n                style={{\n                    width: '100%',\n                    height: '25px',\n                    objectFit: 'contain'\n                }}/>\n        </div>\n    )\n}","import {getSetting} from '@woocommerce/settings';\nimport apiFetch from '@wordpress/api-fetch';\nimport {create as createClient} from '@braintree/client';\nimport {getCurrency, formatPrice as wcFormatPrice} from '@woocommerce/price-format';\n\nconst wcBraintreeData = getSetting('wcBraintreeData');\n\nconst errorMessages = getSetting('wcBraintreeMessages');\n\nconst CACHE_PREFIX = 'wcBraintree:';\n\nconst SHIPPING_OPTION_REGEX = /^([\\w]+)\\:(.+)$/;\n\nexport const getSettings = (name) => {\n    name = `${name}_data`;\n    return (key) => {\n        if (key) {\n            return getSetting(name)[key];\n        }\n        return getSetting(name);\n    }\n}\n\nexport const getClientToken = () => wcBraintreeData.clientToken;\n\nexport const getMerchantAccount = (currency) => wcBraintreeData?.merchantAccounts?.[currency] ? wcBraintreeData.merchantAccounts[currency] : null\n\nexport const loadClient = new Promise((resolve, reject) => {\n    createClient({\n        authorization: wcBraintreeData.clientToken\n    }, (err, clientInstance) => {\n        if (err) {\n            reject(err);\n        } else {\n            resolve(clientInstance);\n        }\n    });\n});\n\nexport const canMakePayment = () => {\n    return new Promise((resolve, reject) => {\n        loadClient.then(() => resolve(true)).catch(error => {\n            console.log('Error loading client: ', error);\n            resolve({error});\n        });\n    });\n}\n\nexport const ensureSuccessResponse = (responseTypes, data = {}) => {\n    return {type: responseTypes.SUCCESS, ...data};\n}\n\nexport const ensureErrorResponse = (responseTypes, error) => {\n    return {type: responseTypes.ERROR, message: getErrorMessage(error)}\n};\n\nexport const getErrorMessage = (error) => {\n    let msg = error?.message;\n    if (typeof error == 'string') {\n        msg = error;\n    } else {\n        if (error.code && errorMessages[error.code]) {\n            msg = errorMessages[error.code];\n        }\n    }\n    return msg;\n}\n\nexport const removeNumberPrecision = (value, unit) => {\n    return value / 10 ** unit;\n}\n\nexport class BraintreeError extends Error {\n    constructor(error) {\n        super(error.message);\n        this.error = error;\n    }\n}\n\nconst getCacheKey = (key) => `${CACHE_PREFIX}${key}`;\n\nexport const storeInCache = (key, value) => {\n    const exp = Math.floor(new Date().getTime() / 1000) + (60 * 15);\n    if ('sessionStorage' in window) {\n        sessionStorage.setItem(getCacheKey(key), JSON.stringify({value, exp}));\n    }\n}\n\nexport const getFromCache = (key, defaultValue = null) => {\n    if ('sessionStorage' in window) {\n        try {\n            const item = JSON.parse(sessionStorage.getItem(getCacheKey(key)));\n            if (item) {\n                const {value, exp} = item;\n                if (Math.floor(new Date().getTime() / 1000) > exp) {\n                    deleteFromCache(getCacheKey(key));\n                } else {\n                    return value;\n                }\n            }\n        } catch (err) {\n        }\n    }\n    return defaultValue;\n}\n\nexport const deleteFromCache = (key) => {\n    if ('sessionStorage' in window) {\n        sessionStorage.removeItem(getCacheKey(key));\n    }\n}\n\nexport const formatPrice = (price, currencyCode) => {\n    const {prefix, suffix, decimalSeparator, minorUnit, thousandSeparator} = getCurrency(currencyCode);\n    if (price == '' || price === undefined) {\n        return price;\n    }\n\n    price = typeof price === 'string' ? parseInt(price, 10) : price;\n    price = price / 10 ** minorUnit;\n    price = price.toString().replace('.', decimalSeparator);\n    let fractional = '';\n    const index = price.indexOf(decimalSeparator);\n    if (index < 0) {\n        if (minorUnit > 0) {\n            price += `${decimalSeparator}${new Array(minorUnit + 1).join('0')}`;\n        }\n    } else {\n        const fractional = price.substr(index + 1);\n        if (fractional.length < minorUnit) {\n            price += new Array(minorUnit - fractional.length + 1).join('0');\n        }\n    }\n    // separate out price and decimals so thousands separator can be added.\n    const match = price.match(new RegExp(`(\\\\d+)\\\\${decimalSeparator}(\\\\d+)`));\n    if (match) {\n        ({1: price, 2: fractional} = match);\n    }\n    price = price.replace(new RegExp(`\\\\B(?=(\\\\d{3})+(?!\\\\d))`, 'g'), `${thousandSeparator}`);\n    price = fractional?.length > 0 ? price + decimalSeparator + fractional : price;\n    price = prefix + price + suffix;\n    return price;\n}\n\nexport const getShippingOptionId = (packageId, rateId) => `${packageId}:${rateId}`;\n\nexport const extractSelectedShippingOption = (id) => {\n    const result = id.match(SHIPPING_OPTION_REGEX);\n    if (result) {\n        const {1: packageIdx, 2: rate} = result;\n        return [rate, packageIdx];\n    }\n    return [];\n}\n\nexport const getSelectedShippingOptionId = (selectedRates) => {\n    for (let idx of Object.keys(selectedRates)) {\n        return getShippingOptionId(idx, selectedRates[idx]);\n    }\n}\n\nexport const extractFullName = (name) => {\n    const firstName = name.split(' ').slice(0, -1).join(' ');\n    const lastName = name.split(' ').pop();\n    return [firstName, lastName];\n}\n\nexport const extractAddressLines = (lines) => {\n    let address_1, address_2;\n    if (Array.isArray(lines)) {\n        address_1 = lines?.[0];\n        if (lines.length > 1) {\n            address_2 = lines?.[1];\n        }\n    }\n    return {address_1, address_2};\n}\n\nexport const getCartTotalItem = (key, cartTotalItems) => {\n    for (let item of cartTotalItems) {\n        if (item.key === key) {\n            return item.value;\n        }\n    }\n    return null;\n}\n\nexport const canShowSavedCard = () => {\n    return !cartContainsSubscription();\n}\n\nexport const cartContainsSubscription = () => wcBraintreeData?.hasSubscription == true;\n\nexport const isCartPage = () => wcBraintreeData.page === 'cart';\n\nexport const isCheckoutPage = () => wcBraintreeData.page === 'checkout';\n\nexport const DEFAULT_SHIPPING_ADDRESS = {\n    'first_name': '',\n    'last_name': '',\n    'company': '',\n    'address_1': '',\n    'address_2': '',\n    'city': '',\n    'state': '',\n    'postcode': '',\n    'country': '',\n    'phone': '',\n}\n\nexport const DEFAULT_BILLING_ADDRESS = {\n    ...DEFAULT_SHIPPING_ADDRESS,\n    'email': ''\n}\n\nexport const formatPaymentMethod = (format, data) => {\n    data = {\n        ...data,\n        card_type: data.brand,\n        last4: data.lastDigits\n    }\n\n    const replacementData = {};\n\n    // Create placeholders from the data object\n    Object.keys(data).forEach(key => {\n        replacementData[`{${key}}`] = data[key];\n    });\n\n    // Replace all placeholders with actual values\n    let result = format;\n    Object.keys(replacementData).forEach(placeholder => {\n        // Use split and join which is more efficient for simple replacements\n        while (result.includes(placeholder)) {\n            result = result.replace(placeholder, replacementData[placeholder]);\n        }\n    });\n\n    return result;\n}\n\nexport const fetchTokenNonce = async (token_id) => {\n    try {\n        let result = await apiFetch({\n            path: '/wc-braintree/v1/3ds/vaulted_nonce',\n            method: 'POST',\n            data: {token_id, version: 2}\n        });\n        return result;\n    } catch (error) {\n        console.info('Error fetching 3ds nonce. ', error);\n    }\n};\n","export * from './use-handle-tokenization';","import {useEffect, useCallback, useRef} from '@wordpress/element';\nimport {usePaymentMethodDataContext} from \"../../context\";\n\nexport const useHandleTokenization = ({venmoInstance, onSubmit}) => {\n    const paymentData = useRef(null);\n    const {onPaymentDataFilter, paymentMethodNonce, setPaymentMethodNonce, notice: {addNotice}} = usePaymentMethodDataContext();\n    const handleClick = useCallback(async () => {\n        try {\n            if (paymentMethodNonce) {\n                onSubmit();\n            } else {\n                const result = await venmoInstance.tokenize();\n                paymentData.current = {nonce: result.nonce};\n                setPaymentMethodNonce(result.nonce);\n            }\n        } catch (error) {\n            addNotice(error);\n        }\n    }, [\n        venmoInstance,\n        onSubmit,\n        paymentMethodNonce\n    ]);\n\n    useEffect(() => {\n        const unsubscribe = onPaymentDataFilter((data, {name}) => {\n            data.meta.paymentMethodData[`${name}_nonce_key`] = paymentData.current.nonce;\n            return data;\n        }, 5);\n        return () => unsubscribe();\n    }, [onPaymentDataFilter]);\n\n    return {handleClick}\n}\n\nexport default useHandleTokenization;","import {create as createVenmo} from '@braintree/venmo';\nimport {useState, useEffect} from '@wordpress/element';\nimport {__} from '@wordpress/i18n';\nimport {registerPaymentMethod} from '@woocommerce/blocks-registry';\nimport {Notice, PaymentMethodLabel} from \"../../components\";\nimport {PaymentMethod} from \"../../components\";\nimport {SavedTokenProvider} from \"../../components\";\nimport {getSettings, getClientToken} from \"../utils\";\nimport {usePaymentMethodDataContext} from \"../context\";\nimport {useHandleTokenization} from \"./hooks\";\n\nconst getData = getSettings('braintree_venmo');\n\nconst loadVenmo = new Promise((resolve, reject) => {\n    createVenmo({\n        authorization: getClientToken(),\n        allowNewBrowserTab: false\n    }).then(instance => resolve(instance)).catch(error => reject(error));\n});\n\nconst VenmoComponent = ({onSubmit}) => {\n    const {notice} = usePaymentMethodDataContext();\n    const [venmoInstance, setVenmoInstance] = useState(null);\n    const {handleClick} = useHandleTokenization({\n        venmoInstance,\n        onSubmit\n    });\n\n    useEffect(() => {\n        loadVenmo.then(instance => setVenmoInstance(instance)).catch(error => notice.addNotice(error));\n    }, []);\n    return (\n        <>\n            {notice?.notice && <Notice notice={notice.notice} onRemove={notice.removeNotice}/>}\n            <div className={'wc-braintree-blocks-venmo-button__container'}>\n                <p>{__('Complete your order with', 'woo-payment-gateway')}</p>\n                {venmoInstance && <VenmoButton onClick={handleClick} src={getData('buttonIcon')}/>}\n            </div>\n        </>\n    )\n}\n\nconst VenmoButton = ({onClick, src}) => {\n    return (\n        <button className={'wc-braintree-blocks-venmo__button'} onClick={onClick}>\n            <img src={src}/>\n        </button>\n    )\n}\n\nregisterPaymentMethod({\n    name: getData('name'),\n    label: <PaymentMethodLabel\n        title={getData('title')}\n        paymentMethod={getData('name')}\n        icon={getData('icon')}/>,\n    ariaLabel: __('Venmo', 'woo-payment-gateway'),\n    placeOrderButtonLabel: getData('placeOrderButtonLabel'),\n    canMakePayment: () => new Promise((resolve, reject) => {\n        loadVenmo.then(instance => {\n            resolve(instance.isBrowserSupported());\n        }).catch(error => {\n            resolve(false);\n        });\n    }),\n    content: <PaymentMethod content={VenmoComponent}\n                            title={getData('title')}\n                            description={getData('description')}\n                            name={getData('name')}\n                            icon={getData('icon')}\n                            getData={getData}/>,\n    savedTokenComponent: <SavedTokenProvider getData={getData}\n                                             name={getData('name')}\n                                             vaultedThreeDSecure={getData('vaultedThreeDSecure')}/>,\n    edit: <PaymentMethod content={VenmoComponent} getData={getData}/>,\n    supports: {\n        showSavedCards: getData('features').includes('tokenization'),\n        showSaveOption: false,\n        features: getData('features')\n    }\n});","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["ErrorBoundary","props","state","hasError","error","errorInfo","this","setState","className","toString","componentStack","children","Component","onClick","text","logo","src","i","i18n","open","onClose","fastlane","onTokenize","shippingData","useState","rendered","setRendered","currentData","useRef","useCallback","e","preventDefault","paymentComponent","current","getPaymentToken","response","console","log","useEffect","needsShipping","shippingAddress","firstName","first_name","lastName","last_name","streetAddress","address_1","extendedAddress","address_2","locality","city","region","postalCode","postcode","countryCodeAlpha2","country","phoneNumber","phone","FastlanePaymentComponent","then","instance","render","document","body","classList","add","setTimeout","remove","classnames","continue","cancel","Notice","notice","onRemove","classes","classNames","type","key","isDismissible","message","PaymentMethodLabel","title","components","paymentMethod","icon","Label","Icons","PaymentMethodIcons","Array","isArray","icons","align","PaymentMethod","content","description","el","container","setContainer","Content","ref","PaymentMethodDataProvider","PaymentMethodProviderContainer","name","billing","eventRegistration","emitResponse","activePaymentMethod","isExpress","advancedFraudOptions","onPaymentSetup","onCheckoutFail","responseTypes","noticeContexts","usePaymentMethodDataContext","useProcessPayment","useFastlane","paymentToken","useProcessPaymentFailure","event","messageContext","EXPRESS_PAYMENTS","SavedTokenComponent","vaultedThreeDSecure","token","doPaymentDataFilter","useDeviceData","useThreeDSecure","vaulted","unsubscribe","fetchTokenNonce","result","success","BraintreeError","meta","paymentMethodData","data","ensureSuccessResponse","ensureErrorResponse","SET_FASTLANE","SET_PAYMENT_TOKEN","SET_CUSTOMER_CONTEXT","ADD_CANCELED_EMAIL","ACTION_TYPES","id","email","config","reducer","selectors","actions","store","createReduxStore","STORE_KEY","register","DEFAULT_STATE","action","newState","customerContextId","canceledEmails","useCreatePaymentRequest","applePayInstance","getData","useMemo","cartTotal","currency","cartTotalItems","billingAddress","shippingRates","request","total","label","amount","removeNumberPrecision","value","minorUnit","lineItems","formatLineItems","currencyCode","code","countryCode","requiredBillingContactFields","requiredShippingContactFields","fields","shippingMethods","formatShippingMethods","createPaymentRequest","useCreateSession","paymentRequest","addShippingHandler","usePaymentEventsHandler","setPaymentMethodNonce","onPaymentDataFilter","addNotice","applePayData","getApplePayVersion","range","version","ApplePaySession","supportsVersion","onSessionCancel","onValidateMerchant","session","performValidation","validationURL","displayName","merchantSession","completeMerchantValidation","catch","abort","onPaymentMethodSelected","address","billingContact","administrativeArea","apiFetch","method","url","payment_method","messages","completePaymentMethodSelection","xhr","onShippingContactSelected","shippingContact","newAddress","toUpperCase","shipping_address","completeShippingContactSelection","shippingContactUpdate","errors","ApplePayError","contactField","newTotal","newShippingMethods","finally","setShippingAddress","onShippingMethodSelected","shippingMethod","setSelectedRates","selectedRates","shipping_method","identifier","completeShippingMethodSelection","shippingMethodUpdate","extractSelectedShippingOption","onPaymentAuthorized","length","completePayment","status","STATUS_FAILURE","tokenize","payment","givenName","familyName","extractAddressLines","addressLines","emailAddress","nonce","STATUS_SUCCESS","isEmpty","DEFAULT_BILLING_ADDRESS","DEFAULT_SHIPPING_ADDRESS","createSession","onvalidatemerchant","onpaymentmethodselected","onpaymentauthorized","oncancel","onshippingcontactselected","onshippingmethodselected","handleClick","begin","alert","getSettings","loadApplePay","Promise","resolve","reject","createApplePay","authorization","getClientToken","ApplePayContainer","setApplePayInstance","ApplePayButton","style","rounded","styles","getButtonStyle","isCartPage","isCheckoutPage","registerExpressPaymentMethod","canMakePayment","window","canMakePayments","edit","supports","features","maxHeight","backgroundColor","borderRadius","width","height","objectFit","items","keys","forEach","item","includes","push","options","shippingPackage","idx","rates","shipping_rates","map","rate","txt","createElement","innerHTML","getShippingOptionId","rate_id","detail","price","currency_minor_unit","dispatch","callback","priority","ACTIONS","ADD_ACTION","uniqueId","REMOVE_ACTION","emittFilter","args","handlers","events","sortedEvents","from","values","sort","a","b","Map","set","delete","PaymentMethodDataContext","createContext","onSubmit","setExpressPaymentError","client","setClient","paymentMethodNonce","useReducer","actionReducer","eventHandlers","useActionEmitter","currentEventHandlers","paymentHandler","useNoticeHandler","removeNotice","useSelect","select","getFastlane","customerFound","isCustomerFound","setPaymentHandler","handler","loadClient","paymentMethodDataContext","fraud","enabled","threeDSecureEnabled","Provider","useContext","CustomForm","getCustomFormConfig","breakpoint","fieldKeys","hostedFieldInstance","setHostedFieldsInstance","setFields","containerElement","setContainerElement","cardBrand","setCardBrand","fieldOrder","assertFieldsValid","reduce","acc","prop","hasOwnProperty","setFieldContainer","field","prev","addClassToFields","payload","details","invalidFieldKeys","useBreakpointWidth","clientInstance","create","on","cards","emittedBy","isValid","indexOf","nextField","focus","cloneElement","setFieldOrder","CardIcon","getIconSrc","InvalidCustomForm","sprintf","__","forms","assertValidConfig","assertValidFormId","Error","assertConfigHasProperties","missingParams","TypeError","join","BootstrapForm","CardNumber","CardExpirationDate","CardCVV","registerCustomForm","SimpleForm","DropinForm","setDropinInstance","clientToken","locale","setError","element","setElement","setRef","node","createDropin","dropinInstance","display","justifyContent","maxWidth","onChange","getSetting","HostedFieldsContainer","DropinContainer","handlePaymentProcessing","requestPaymentMethod","err","registerPaymentMethod","ariaLabel","openModal","setOpenModal","setPaymentToken","useDispatch","emails","getCanceledEmails","showSignup","dropinEnabled","FastlaneLink","fastLaneLogo","fastlane_signup","FastlaneModal","savedTokenComponent","SavedTokenProvider","showSavedCards","showSaveOption","canShowSavedCard","fastlane_icons","payment_format","shouldSavePayment","card","paymentSource","brand","last4","lastDigits","expiry","useProcessFastlanePaymentToken","useManageFastlanePaymentToken","onCancel","onChangePaymentMethod","toLowerCase","formatPaymentMethod","change","extensions","isInitialRender","wc_braintree","CART_STORE_KEY","getNeedsShipping","getCustomerData","debouncedEmail","setDebouncedEmail","dataCollector","skip","useCreateFastlane","fraudEnabled","onError","useProcessFastlane","openFastlaneModal","triggerAuthentication","timer","clearTimeout","isEmail","fastlane_pageload","getElementById","FastlaneWatermarkComponent","includeAdditionalInfo","component","parentElement","append","registerCheckoutBlock","metadata","Block","authOnLoad","resolveRef","promiseRef","processing","disabled","setFastlane","deviceData","buttonRef","setProcessing","setBillingAddress","addCanceledEmail","setCustomerContextId","setActivePaymentMethod","PAYMENT_STORE_KEY","__internalSetActivePaymentMethod","removeEmptyValues","obj","Object","fromEntries","entries","filter","updateShippingAddress","updateBillingAddress","scrollToElement","selector","offset","querySelector","rect","getBoundingClientRect","scrollPosition","top","scrollY","scrollTo","behavior","left","profile","identity","lookupCustomerByEmail","triggerAuthenticationFlow","profileData","authenticationState","showShippingAddressSelector","selectedAddress","toBtSdkType","extractFullName","info","email_empty","email_invalid","ExpressPaymentComponent","unit","formatPrice","currency_code","defaultSelectedOptionId","selected","paymentsClient","setPaymentsClient","environment","merchantInfo","merchantName","merchantId","paymentDataCallbacks","transactionState","onPaymentDataChanged","shippingOptionData","shippingOptionId","shipping","braintree_googlepay","requestUpdate","google","payments","api","PaymentsClient","useHandleTokenization","googlePayInstance","payloadData","paymentDataRequestArgs","transactionInfo","totalPriceStatus","totalPrice","totalPriceLabel","displayItems","getDisplayItems","emailRequired","callbackIntents","shippingAddressRequired","shippingAddressParameters","shippingOptionRequired","shippingOptions","getShippingOptions","shippingOptionParameters","getSelectedShippingOptionId","paymentDataRequest","createPaymentDataRequest","allowedPaymentMethods","parameters","assuranceDetailsRequired","billingAddressRequired","billingAddressParameters","format","phoneNumberRequired","loadPaymentData","address1","address2","parseResponse","statusCode","canPay","createGooglePay","googlePayVersion","googleMerchantId","isReadyToPay","apiVersion","apiVersionMinor","setGooglePayInstance","useExpressBreakpointWidth","useCreatePaymentsClient","removeButton","lastChild","removeChild","button","createButton","innerWidth","windowWidth","setWindowWidth","minWidth","getFromCache","storeInCache","clientWidth","onWindowResize","addEventListener","removeEventListener","parentNode","setDataCollector","kount","createErrorNotice","showCardSelector","selectedCard","selectionChanged","context","setNotice","getErrorMessage","onShippingRateSuccess","onShippingRateFail","onShippingRateSelectSuccess","handleShippingChange","get","isSelectingRate","shippingRatesLoading","Boolean","pop","handleShippingRateFail","addPaymentEventHandler","execute","addShippingMethodHandler","addShippingAddressHandler","unsubscribeShippingRateSuccess","unsubscribeShippingRateSelectSuccess","unsubscribeShippingRateFail","braintree_cc_nonce_key","braintree_cc_save_method","processingResponse","paymentDetails","braintreeErrorMessage","ERROR","settings","setInstance","verifyCard","bin","challengeRequested","collectDeviceData","surname","slice","additionalInformation","shippingGivenName","shippingSurname","ipAddress","onLookupComplete","next","threeDSecureInfo","teardown","useLoadPayPal","paypalCheckoutInstance","intent","flow","partnerCode","paypal","setPayPal","JSON","parse","atob","clientId","commit","vault","dataAttributes","loadPayPalSDK","usePayPalOptions","paymentData","incompleteBilling","baseStyle","FUNDING","PAYPAL","PAYLATER","getFormattedShippingOptions","onShippingChange","selectedShippingOption","shippingDataEqual","patch","getCartTotalItem","order","sources","fundingSource","option","onApprove","tokenizePayment","line1","line2","recipientName","cartContainsSubscription","createOrder","createPayment","enableShippingAddress","shippingAddressEditable","createBillingAgreement","selected_shipping_option","postal_code","country_code","isShippingOptionEqual","isEqual","Buttons","isEligible","setPayPalCheckoutInstance","isPayPalButton","setIsPayPalButton","paypalButton","createPayPalCheckout","merchantAccountId","getMerchantAccount","driver","React","ReactDOM","PayPalButton","BUTTON","OrderItemMessaging","cart","cartTotals","total_price","paypalCheckout","setPayPalCheckout","currencies","isAvailable","Messages","placement","layout","position","color","TotalsWrapper","registerPlugin","ExperimentalOrderMeta","scope","alignItems","wcBraintreeData","errorMessages","SHIPPING_OPTION_REGEX","merchantAccounts","createClient","SUCCESS","msg","getCacheKey","exp","Math","floor","Date","getTime","sessionStorage","setItem","stringify","defaultValue","getItem","deleteFromCache","removeItem","getCurrency","prefix","suffix","decimalSeparator","thousandSeparator","undefined","parseInt","fractional","index","replace","substr","match","RegExp","packageId","rateId","packageIdx","split","lines","hasSubscription","page","card_type","replacementData","placeholder","token_id","path","venmoInstance","loadVenmo","createVenmo","allowNewBrowserTab","VenmoComponent","setVenmoInstance","VenmoButton","placeOrderButtonLabel","isBrowserSupported","hasOwn","arguments","arg","argType","inner","apply","prototype","call","module","exports","default"],"sourceRoot":""}